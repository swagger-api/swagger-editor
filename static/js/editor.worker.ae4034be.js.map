{"version":3,"file":"static/js/editor.worker.ae4034be.js","mappings":"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","sources":["../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../webpack/bootstrap","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/charCode.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/errors.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/collections.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/arrays.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/arraysFind.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/map.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/functional.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/assert.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/types.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/iterator.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/lifecycle.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/linkedList.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/stopwatch.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/event.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/nls.messages.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/nls.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/platform.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/cancellation.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/uint.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/cache.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/lazy.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/strings.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/worker/simpleWorker.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/diff/diffChange.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/buffer.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/hash.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/diff/diff.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/characterClassifier.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/languages/linkComputer.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/position.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/range.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/languages/supports/inplaceReplaceSupport.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/keyCodes.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/marshallingIds.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/process.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/path.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/uri.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/selection.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/codiconsUtil.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/codicons.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/codiconsLibrary.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/encodedTokenAttributes.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/languages.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/tokenizationRegistry.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/standalone/standaloneEnums.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/services/editorBaseApi.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/services/editorWorkerHost.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/wordCharacterClassifier.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/objects.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/model.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/model/textModelSearch.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/wordHelper.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/services/unicodeTextModelHighlighter.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/linesDiffComputer.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/offsetRange.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/lineRange.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/textLength.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/positionToOffset.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/core/textEdit.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/rangeMapping.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/legacyLinesDiffComputer.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/utils.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/diff/linesDiffComputers.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/color.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/languages/defaultDocumentColorsComputer.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/services/findSectionHeaders.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/extpath.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/network.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/resources.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/symbols.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/base/common/async.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/model/prefixSumComputer.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/model/mirrorTextModel.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/services/textModelSync/textModelSync.impl.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/services/editorSimpleWorker.js","../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/services/editorWorkerBootstrap.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n\nvar CharCode;\n(function (CharCode) {\n    CharCode[CharCode[\"Null\"] = 0] = \"Null\";\n    CharCode[CharCode[\"Backspace\"] = 8] = \"Backspace\";\n    CharCode[CharCode[\"Tab\"] = 9] = \"Tab\";\n    CharCode[CharCode[\"LineFeed\"] = 10] = \"LineFeed\";\n    CharCode[CharCode[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCode[CharCode[\"Space\"] = 32] = \"Space\";\n    CharCode[CharCode[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCode[CharCode[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCode[CharCode[\"Hash\"] = 35] = \"Hash\";\n    CharCode[CharCode[\"DollarSign\"] = 36] = \"DollarSign\";\n    CharCode[CharCode[\"PercentSign\"] = 37] = \"PercentSign\";\n    CharCode[CharCode[\"Ampersand\"] = 38] = \"Ampersand\";\n    CharCode[CharCode[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCode[CharCode[\"OpenParen\"] = 40] = \"OpenParen\";\n    CharCode[CharCode[\"CloseParen\"] = 41] = \"CloseParen\";\n    CharCode[CharCode[\"Asterisk\"] = 42] = \"Asterisk\";\n    CharCode[CharCode[\"Plus\"] = 43] = \"Plus\";\n    CharCode[CharCode[\"Comma\"] = 44] = \"Comma\";\n    CharCode[CharCode[\"Dash\"] = 45] = \"Dash\";\n    CharCode[CharCode[\"Period\"] = 46] = \"Period\";\n    CharCode[CharCode[\"Slash\"] = 47] = \"Slash\";\n    CharCode[CharCode[\"Digit0\"] = 48] = \"Digit0\";\n    CharCode[CharCode[\"Digit1\"] = 49] = \"Digit1\";\n    CharCode[CharCode[\"Digit2\"] = 50] = \"Digit2\";\n    CharCode[CharCode[\"Digit3\"] = 51] = \"Digit3\";\n    CharCode[CharCode[\"Digit4\"] = 52] = \"Digit4\";\n    CharCode[CharCode[\"Digit5\"] = 53] = \"Digit5\";\n    CharCode[CharCode[\"Digit6\"] = 54] = \"Digit6\";\n    CharCode[CharCode[\"Digit7\"] = 55] = \"Digit7\";\n    CharCode[CharCode[\"Digit8\"] = 56] = \"Digit8\";\n    CharCode[CharCode[\"Digit9\"] = 57] = \"Digit9\";\n    CharCode[CharCode[\"Colon\"] = 58] = \"Colon\";\n    CharCode[CharCode[\"Semicolon\"] = 59] = \"Semicolon\";\n    CharCode[CharCode[\"LessThan\"] = 60] = \"LessThan\";\n    CharCode[CharCode[\"Equals\"] = 61] = \"Equals\";\n    CharCode[CharCode[\"GreaterThan\"] = 62] = \"GreaterThan\";\n    CharCode[CharCode[\"QuestionMark\"] = 63] = \"QuestionMark\";\n    CharCode[CharCode[\"AtSign\"] = 64] = \"AtSign\";\n    CharCode[CharCode[\"A\"] = 65] = \"A\";\n    CharCode[CharCode[\"B\"] = 66] = \"B\";\n    CharCode[CharCode[\"C\"] = 67] = \"C\";\n    CharCode[CharCode[\"D\"] = 68] = \"D\";\n    CharCode[CharCode[\"E\"] = 69] = \"E\";\n    CharCode[CharCode[\"F\"] = 70] = \"F\";\n    CharCode[CharCode[\"G\"] = 71] = \"G\";\n    CharCode[CharCode[\"H\"] = 72] = \"H\";\n    CharCode[CharCode[\"I\"] = 73] = \"I\";\n    CharCode[CharCode[\"J\"] = 74] = \"J\";\n    CharCode[CharCode[\"K\"] = 75] = \"K\";\n    CharCode[CharCode[\"L\"] = 76] = \"L\";\n    CharCode[CharCode[\"M\"] = 77] = \"M\";\n    CharCode[CharCode[\"N\"] = 78] = \"N\";\n    CharCode[CharCode[\"O\"] = 79] = \"O\";\n    CharCode[CharCode[\"P\"] = 80] = \"P\";\n    CharCode[CharCode[\"Q\"] = 81] = \"Q\";\n    CharCode[CharCode[\"R\"] = 82] = \"R\";\n    CharCode[CharCode[\"S\"] = 83] = \"S\";\n    CharCode[CharCode[\"T\"] = 84] = \"T\";\n    CharCode[CharCode[\"U\"] = 85] = \"U\";\n    CharCode[CharCode[\"V\"] = 86] = \"V\";\n    CharCode[CharCode[\"W\"] = 87] = \"W\";\n    CharCode[CharCode[\"X\"] = 88] = \"X\";\n    CharCode[CharCode[\"Y\"] = 89] = \"Y\";\n    CharCode[CharCode[\"Z\"] = 90] = \"Z\";\n    CharCode[CharCode[\"OpenSquareBracket\"] = 91] = \"OpenSquareBracket\";\n    CharCode[CharCode[\"Backslash\"] = 92] = \"Backslash\";\n    CharCode[CharCode[\"CloseSquareBracket\"] = 93] = \"CloseSquareBracket\";\n    CharCode[CharCode[\"Caret\"] = 94] = \"Caret\";\n    CharCode[CharCode[\"Underline\"] = 95] = \"Underline\";\n    CharCode[CharCode[\"BackTick\"] = 96] = \"BackTick\";\n    CharCode[CharCode[\"a\"] = 97] = \"a\";\n    CharCode[CharCode[\"b\"] = 98] = \"b\";\n    CharCode[CharCode[\"c\"] = 99] = \"c\";\n    CharCode[CharCode[\"d\"] = 100] = \"d\";\n    CharCode[CharCode[\"e\"] = 101] = \"e\";\n    CharCode[CharCode[\"f\"] = 102] = \"f\";\n    CharCode[CharCode[\"g\"] = 103] = \"g\";\n    CharCode[CharCode[\"h\"] = 104] = \"h\";\n    CharCode[CharCode[\"i\"] = 105] = \"i\";\n    CharCode[CharCode[\"j\"] = 106] = \"j\";\n    CharCode[CharCode[\"k\"] = 107] = \"k\";\n    CharCode[CharCode[\"l\"] = 108] = \"l\";\n    CharCode[CharCode[\"m\"] = 109] = \"m\";\n    CharCode[CharCode[\"n\"] = 110] = \"n\";\n    CharCode[CharCode[\"o\"] = 111] = \"o\";\n    CharCode[CharCode[\"p\"] = 112] = \"p\";\n    CharCode[CharCode[\"q\"] = 113] = \"q\";\n    CharCode[CharCode[\"r\"] = 114] = \"r\";\n    CharCode[CharCode[\"s\"] = 115] = \"s\";\n    CharCode[CharCode[\"t\"] = 116] = \"t\";\n    CharCode[CharCode[\"u\"] = 117] = \"u\";\n    CharCode[CharCode[\"v\"] = 118] = \"v\";\n    CharCode[CharCode[\"w\"] = 119] = \"w\";\n    CharCode[CharCode[\"x\"] = 120] = \"x\";\n    CharCode[CharCode[\"y\"] = 121] = \"y\";\n    CharCode[CharCode[\"z\"] = 122] = \"z\";\n    CharCode[CharCode[\"OpenCurlyBrace\"] = 123] = \"OpenCurlyBrace\";\n    CharCode[CharCode[\"Pipe\"] = 124] = \"Pipe\";\n    CharCode[CharCode[\"CloseCurlyBrace\"] = 125] = \"CloseCurlyBrace\";\n    CharCode[CharCode[\"Tilde\"] = 126] = \"Tilde\";\n    CharCode[CharCode[\"NoBreakSpace\"] = 160] = \"NoBreakSpace\";\n    CharCode[CharCode[\"U_Combining_Grave_Accent\"] = 768] = \"U_Combining_Grave_Accent\";\n    CharCode[CharCode[\"U_Combining_Acute_Accent\"] = 769] = \"U_Combining_Acute_Accent\";\n    CharCode[CharCode[\"U_Combining_Circumflex_Accent\"] = 770] = \"U_Combining_Circumflex_Accent\";\n    CharCode[CharCode[\"U_Combining_Tilde\"] = 771] = \"U_Combining_Tilde\";\n    CharCode[CharCode[\"U_Combining_Macron\"] = 772] = \"U_Combining_Macron\";\n    CharCode[CharCode[\"U_Combining_Overline\"] = 773] = \"U_Combining_Overline\";\n    CharCode[CharCode[\"U_Combining_Breve\"] = 774] = \"U_Combining_Breve\";\n    CharCode[CharCode[\"U_Combining_Dot_Above\"] = 775] = \"U_Combining_Dot_Above\";\n    CharCode[CharCode[\"U_Combining_Diaeresis\"] = 776] = \"U_Combining_Diaeresis\";\n    CharCode[CharCode[\"U_Combining_Hook_Above\"] = 777] = \"U_Combining_Hook_Above\";\n    CharCode[CharCode[\"U_Combining_Ring_Above\"] = 778] = \"U_Combining_Ring_Above\";\n    CharCode[CharCode[\"U_Combining_Double_Acute_Accent\"] = 779] = \"U_Combining_Double_Acute_Accent\";\n    CharCode[CharCode[\"U_Combining_Caron\"] = 780] = \"U_Combining_Caron\";\n    CharCode[CharCode[\"U_Combining_Vertical_Line_Above\"] = 781] = \"U_Combining_Vertical_Line_Above\";\n    CharCode[CharCode[\"U_Combining_Double_Vertical_Line_Above\"] = 782] = \"U_Combining_Double_Vertical_Line_Above\";\n    CharCode[CharCode[\"U_Combining_Double_Grave_Accent\"] = 783] = \"U_Combining_Double_Grave_Accent\";\n    CharCode[CharCode[\"U_Combining_Candrabindu\"] = 784] = \"U_Combining_Candrabindu\";\n    CharCode[CharCode[\"U_Combining_Inverted_Breve\"] = 785] = \"U_Combining_Inverted_Breve\";\n    CharCode[CharCode[\"U_Combining_Turned_Comma_Above\"] = 786] = \"U_Combining_Turned_Comma_Above\";\n    CharCode[CharCode[\"U_Combining_Comma_Above\"] = 787] = \"U_Combining_Comma_Above\";\n    CharCode[CharCode[\"U_Combining_Reversed_Comma_Above\"] = 788] = \"U_Combining_Reversed_Comma_Above\";\n    CharCode[CharCode[\"U_Combining_Comma_Above_Right\"] = 789] = \"U_Combining_Comma_Above_Right\";\n    CharCode[CharCode[\"U_Combining_Grave_Accent_Below\"] = 790] = \"U_Combining_Grave_Accent_Below\";\n    CharCode[CharCode[\"U_Combining_Acute_Accent_Below\"] = 791] = \"U_Combining_Acute_Accent_Below\";\n    CharCode[CharCode[\"U_Combining_Left_Tack_Below\"] = 792] = \"U_Combining_Left_Tack_Below\";\n    CharCode[CharCode[\"U_Combining_Right_Tack_Below\"] = 793] = \"U_Combining_Right_Tack_Below\";\n    CharCode[CharCode[\"U_Combining_Left_Angle_Above\"] = 794] = \"U_Combining_Left_Angle_Above\";\n    CharCode[CharCode[\"U_Combining_Horn\"] = 795] = \"U_Combining_Horn\";\n    CharCode[CharCode[\"U_Combining_Left_Half_Ring_Below\"] = 796] = \"U_Combining_Left_Half_Ring_Below\";\n    CharCode[CharCode[\"U_Combining_Up_Tack_Below\"] = 797] = \"U_Combining_Up_Tack_Below\";\n    CharCode[CharCode[\"U_Combining_Down_Tack_Below\"] = 798] = \"U_Combining_Down_Tack_Below\";\n    CharCode[CharCode[\"U_Combining_Plus_Sign_Below\"] = 799] = \"U_Combining_Plus_Sign_Below\";\n    CharCode[CharCode[\"U_Combining_Minus_Sign_Below\"] = 800] = \"U_Combining_Minus_Sign_Below\";\n    CharCode[CharCode[\"U_Combining_Palatalized_Hook_Below\"] = 801] = \"U_Combining_Palatalized_Hook_Below\";\n    CharCode[CharCode[\"U_Combining_Retroflex_Hook_Below\"] = 802] = \"U_Combining_Retroflex_Hook_Below\";\n    CharCode[CharCode[\"U_Combining_Dot_Below\"] = 803] = \"U_Combining_Dot_Below\";\n    CharCode[CharCode[\"U_Combining_Diaeresis_Below\"] = 804] = \"U_Combining_Diaeresis_Below\";\n    CharCode[CharCode[\"U_Combining_Ring_Below\"] = 805] = \"U_Combining_Ring_Below\";\n    CharCode[CharCode[\"U_Combining_Comma_Below\"] = 806] = \"U_Combining_Comma_Below\";\n    CharCode[CharCode[\"U_Combining_Cedilla\"] = 807] = \"U_Combining_Cedilla\";\n    CharCode[CharCode[\"U_Combining_Ogonek\"] = 808] = \"U_Combining_Ogonek\";\n    CharCode[CharCode[\"U_Combining_Vertical_Line_Below\"] = 809] = \"U_Combining_Vertical_Line_Below\";\n    CharCode[CharCode[\"U_Combining_Bridge_Below\"] = 810] = \"U_Combining_Bridge_Below\";\n    CharCode[CharCode[\"U_Combining_Inverted_Double_Arch_Below\"] = 811] = \"U_Combining_Inverted_Double_Arch_Below\";\n    CharCode[CharCode[\"U_Combining_Caron_Below\"] = 812] = \"U_Combining_Caron_Below\";\n    CharCode[CharCode[\"U_Combining_Circumflex_Accent_Below\"] = 813] = \"U_Combining_Circumflex_Accent_Below\";\n    CharCode[CharCode[\"U_Combining_Breve_Below\"] = 814] = \"U_Combining_Breve_Below\";\n    CharCode[CharCode[\"U_Combining_Inverted_Breve_Below\"] = 815] = \"U_Combining_Inverted_Breve_Below\";\n    CharCode[CharCode[\"U_Combining_Tilde_Below\"] = 816] = \"U_Combining_Tilde_Below\";\n    CharCode[CharCode[\"U_Combining_Macron_Below\"] = 817] = \"U_Combining_Macron_Below\";\n    CharCode[CharCode[\"U_Combining_Low_Line\"] = 818] = \"U_Combining_Low_Line\";\n    CharCode[CharCode[\"U_Combining_Double_Low_Line\"] = 819] = \"U_Combining_Double_Low_Line\";\n    CharCode[CharCode[\"U_Combining_Tilde_Overlay\"] = 820] = \"U_Combining_Tilde_Overlay\";\n    CharCode[CharCode[\"U_Combining_Short_Stroke_Overlay\"] = 821] = \"U_Combining_Short_Stroke_Overlay\";\n    CharCode[CharCode[\"U_Combining_Long_Stroke_Overlay\"] = 822] = \"U_Combining_Long_Stroke_Overlay\";\n    CharCode[CharCode[\"U_Combining_Short_Solidus_Overlay\"] = 823] = \"U_Combining_Short_Solidus_Overlay\";\n    CharCode[CharCode[\"U_Combining_Long_Solidus_Overlay\"] = 824] = \"U_Combining_Long_Solidus_Overlay\";\n    CharCode[CharCode[\"U_Combining_Right_Half_Ring_Below\"] = 825] = \"U_Combining_Right_Half_Ring_Below\";\n    CharCode[CharCode[\"U_Combining_Inverted_Bridge_Below\"] = 826] = \"U_Combining_Inverted_Bridge_Below\";\n    CharCode[CharCode[\"U_Combining_Square_Below\"] = 827] = \"U_Combining_Square_Below\";\n    CharCode[CharCode[\"U_Combining_Seagull_Below\"] = 828] = \"U_Combining_Seagull_Below\";\n    CharCode[CharCode[\"U_Combining_X_Above\"] = 829] = \"U_Combining_X_Above\";\n    CharCode[CharCode[\"U_Combining_Vertical_Tilde\"] = 830] = \"U_Combining_Vertical_Tilde\";\n    CharCode[CharCode[\"U_Combining_Double_Overline\"] = 831] = \"U_Combining_Double_Overline\";\n    CharCode[CharCode[\"U_Combining_Grave_Tone_Mark\"] = 832] = \"U_Combining_Grave_Tone_Mark\";\n    CharCode[CharCode[\"U_Combining_Acute_Tone_Mark\"] = 833] = \"U_Combining_Acute_Tone_Mark\";\n    CharCode[CharCode[\"U_Combining_Greek_Perispomeni\"] = 834] = \"U_Combining_Greek_Perispomeni\";\n    CharCode[CharCode[\"U_Combining_Greek_Koronis\"] = 835] = \"U_Combining_Greek_Koronis\";\n    CharCode[CharCode[\"U_Combining_Greek_Dialytika_Tonos\"] = 836] = \"U_Combining_Greek_Dialytika_Tonos\";\n    CharCode[CharCode[\"U_Combining_Greek_Ypogegrammeni\"] = 837] = \"U_Combining_Greek_Ypogegrammeni\";\n    CharCode[CharCode[\"U_Combining_Bridge_Above\"] = 838] = \"U_Combining_Bridge_Above\";\n    CharCode[CharCode[\"U_Combining_Equals_Sign_Below\"] = 839] = \"U_Combining_Equals_Sign_Below\";\n    CharCode[CharCode[\"U_Combining_Double_Vertical_Line_Below\"] = 840] = \"U_Combining_Double_Vertical_Line_Below\";\n    CharCode[CharCode[\"U_Combining_Left_Angle_Below\"] = 841] = \"U_Combining_Left_Angle_Below\";\n    CharCode[CharCode[\"U_Combining_Not_Tilde_Above\"] = 842] = \"U_Combining_Not_Tilde_Above\";\n    CharCode[CharCode[\"U_Combining_Homothetic_Above\"] = 843] = \"U_Combining_Homothetic_Above\";\n    CharCode[CharCode[\"U_Combining_Almost_Equal_To_Above\"] = 844] = \"U_Combining_Almost_Equal_To_Above\";\n    CharCode[CharCode[\"U_Combining_Left_Right_Arrow_Below\"] = 845] = \"U_Combining_Left_Right_Arrow_Below\";\n    CharCode[CharCode[\"U_Combining_Upwards_Arrow_Below\"] = 846] = \"U_Combining_Upwards_Arrow_Below\";\n    CharCode[CharCode[\"U_Combining_Grapheme_Joiner\"] = 847] = \"U_Combining_Grapheme_Joiner\";\n    CharCode[CharCode[\"U_Combining_Right_Arrowhead_Above\"] = 848] = \"U_Combining_Right_Arrowhead_Above\";\n    CharCode[CharCode[\"U_Combining_Left_Half_Ring_Above\"] = 849] = \"U_Combining_Left_Half_Ring_Above\";\n    CharCode[CharCode[\"U_Combining_Fermata\"] = 850] = \"U_Combining_Fermata\";\n    CharCode[CharCode[\"U_Combining_X_Below\"] = 851] = \"U_Combining_X_Below\";\n    CharCode[CharCode[\"U_Combining_Left_Arrowhead_Below\"] = 852] = \"U_Combining_Left_Arrowhead_Below\";\n    CharCode[CharCode[\"U_Combining_Right_Arrowhead_Below\"] = 853] = \"U_Combining_Right_Arrowhead_Below\";\n    CharCode[CharCode[\"U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below\"] = 854] = \"U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below\";\n    CharCode[CharCode[\"U_Combining_Right_Half_Ring_Above\"] = 855] = \"U_Combining_Right_Half_Ring_Above\";\n    CharCode[CharCode[\"U_Combining_Dot_Above_Right\"] = 856] = \"U_Combining_Dot_Above_Right\";\n    CharCode[CharCode[\"U_Combining_Asterisk_Below\"] = 857] = \"U_Combining_Asterisk_Below\";\n    CharCode[CharCode[\"U_Combining_Double_Ring_Below\"] = 858] = \"U_Combining_Double_Ring_Below\";\n    CharCode[CharCode[\"U_Combining_Zigzag_Above\"] = 859] = \"U_Combining_Zigzag_Above\";\n    CharCode[CharCode[\"U_Combining_Double_Breve_Below\"] = 860] = \"U_Combining_Double_Breve_Below\";\n    CharCode[CharCode[\"U_Combining_Double_Breve\"] = 861] = \"U_Combining_Double_Breve\";\n    CharCode[CharCode[\"U_Combining_Double_Macron\"] = 862] = \"U_Combining_Double_Macron\";\n    CharCode[CharCode[\"U_Combining_Double_Macron_Below\"] = 863] = \"U_Combining_Double_Macron_Below\";\n    CharCode[CharCode[\"U_Combining_Double_Tilde\"] = 864] = \"U_Combining_Double_Tilde\";\n    CharCode[CharCode[\"U_Combining_Double_Inverted_Breve\"] = 865] = \"U_Combining_Double_Inverted_Breve\";\n    CharCode[CharCode[\"U_Combining_Double_Rightwards_Arrow_Below\"] = 866] = \"U_Combining_Double_Rightwards_Arrow_Below\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_A\"] = 867] = \"U_Combining_Latin_Small_Letter_A\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_E\"] = 868] = \"U_Combining_Latin_Small_Letter_E\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_I\"] = 869] = \"U_Combining_Latin_Small_Letter_I\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_O\"] = 870] = \"U_Combining_Latin_Small_Letter_O\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_U\"] = 871] = \"U_Combining_Latin_Small_Letter_U\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_C\"] = 872] = \"U_Combining_Latin_Small_Letter_C\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_D\"] = 873] = \"U_Combining_Latin_Small_Letter_D\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_H\"] = 874] = \"U_Combining_Latin_Small_Letter_H\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_M\"] = 875] = \"U_Combining_Latin_Small_Letter_M\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_R\"] = 876] = \"U_Combining_Latin_Small_Letter_R\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_T\"] = 877] = \"U_Combining_Latin_Small_Letter_T\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_V\"] = 878] = \"U_Combining_Latin_Small_Letter_V\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_X\"] = 879] = \"U_Combining_Latin_Small_Letter_X\";\n    CharCode[CharCode[\"LINE_SEPARATOR\"] = 8232] = \"LINE_SEPARATOR\";\n    CharCode[CharCode[\"PARAGRAPH_SEPARATOR\"] = 8233] = \"PARAGRAPH_SEPARATOR\";\n    CharCode[CharCode[\"NEXT_LINE\"] = 133] = \"NEXT_LINE\";\n    CharCode[CharCode[\"U_CIRCUMFLEX\"] = 94] = \"U_CIRCUMFLEX\";\n    CharCode[CharCode[\"U_GRAVE_ACCENT\"] = 96] = \"U_GRAVE_ACCENT\";\n    CharCode[CharCode[\"U_DIAERESIS\"] = 168] = \"U_DIAERESIS\";\n    CharCode[CharCode[\"U_MACRON\"] = 175] = \"U_MACRON\";\n    CharCode[CharCode[\"U_ACUTE_ACCENT\"] = 180] = \"U_ACUTE_ACCENT\";\n    CharCode[CharCode[\"U_CEDILLA\"] = 184] = \"U_CEDILLA\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LEFT_ARROWHEAD\"] = 706] = \"U_MODIFIER_LETTER_LEFT_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_RIGHT_ARROWHEAD\"] = 707] = \"U_MODIFIER_LETTER_RIGHT_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_UP_ARROWHEAD\"] = 708] = \"U_MODIFIER_LETTER_UP_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_DOWN_ARROWHEAD\"] = 709] = \"U_MODIFIER_LETTER_DOWN_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING\"] = 722] = \"U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING\"] = 723] = \"U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_UP_TACK\"] = 724] = \"U_MODIFIER_LETTER_UP_TACK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_DOWN_TACK\"] = 725] = \"U_MODIFIER_LETTER_DOWN_TACK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_PLUS_SIGN\"] = 726] = \"U_MODIFIER_LETTER_PLUS_SIGN\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MINUS_SIGN\"] = 727] = \"U_MODIFIER_LETTER_MINUS_SIGN\";\n    CharCode[CharCode[\"U_BREVE\"] = 728] = \"U_BREVE\";\n    CharCode[CharCode[\"U_DOT_ABOVE\"] = 729] = \"U_DOT_ABOVE\";\n    CharCode[CharCode[\"U_RING_ABOVE\"] = 730] = \"U_RING_ABOVE\";\n    CharCode[CharCode[\"U_OGONEK\"] = 731] = \"U_OGONEK\";\n    CharCode[CharCode[\"U_SMALL_TILDE\"] = 732] = \"U_SMALL_TILDE\";\n    CharCode[CharCode[\"U_DOUBLE_ACUTE_ACCENT\"] = 733] = \"U_DOUBLE_ACUTE_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_RHOTIC_HOOK\"] = 734] = \"U_MODIFIER_LETTER_RHOTIC_HOOK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_CROSS_ACCENT\"] = 735] = \"U_MODIFIER_LETTER_CROSS_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR\"] = 741] = \"U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_HIGH_TONE_BAR\"] = 742] = \"U_MODIFIER_LETTER_HIGH_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MID_TONE_BAR\"] = 743] = \"U_MODIFIER_LETTER_MID_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_TONE_BAR\"] = 744] = \"U_MODIFIER_LETTER_LOW_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR\"] = 745] = \"U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK\"] = 746] = \"U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK\"] = 747] = \"U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_UNASPIRATED\"] = 749] = \"U_MODIFIER_LETTER_UNASPIRATED\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD\"] = 751] = \"U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_UP_ARROWHEAD\"] = 752] = \"U_MODIFIER_LETTER_LOW_UP_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD\"] = 753] = \"U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD\"] = 754] = \"U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_RING\"] = 755] = \"U_MODIFIER_LETTER_LOW_RING\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT\"] = 756] = \"U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT\"] = 757] = \"U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT\"] = 758] = \"U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_TILDE\"] = 759] = \"U_MODIFIER_LETTER_LOW_TILDE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_RAISED_COLON\"] = 760] = \"U_MODIFIER_LETTER_RAISED_COLON\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_BEGIN_HIGH_TONE\"] = 761] = \"U_MODIFIER_LETTER_BEGIN_HIGH_TONE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_END_HIGH_TONE\"] = 762] = \"U_MODIFIER_LETTER_END_HIGH_TONE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_BEGIN_LOW_TONE\"] = 763] = \"U_MODIFIER_LETTER_BEGIN_LOW_TONE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_END_LOW_TONE\"] = 764] = \"U_MODIFIER_LETTER_END_LOW_TONE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_SHELF\"] = 765] = \"U_MODIFIER_LETTER_SHELF\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_OPEN_SHELF\"] = 766] = \"U_MODIFIER_LETTER_OPEN_SHELF\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_LEFT_ARROW\"] = 767] = \"U_MODIFIER_LETTER_LOW_LEFT_ARROW\";\n    CharCode[CharCode[\"U_GREEK_LOWER_NUMERAL_SIGN\"] = 885] = \"U_GREEK_LOWER_NUMERAL_SIGN\";\n    CharCode[CharCode[\"U_GREEK_TONOS\"] = 900] = \"U_GREEK_TONOS\";\n    CharCode[CharCode[\"U_GREEK_DIALYTIKA_TONOS\"] = 901] = \"U_GREEK_DIALYTIKA_TONOS\";\n    CharCode[CharCode[\"U_GREEK_KORONIS\"] = 8125] = \"U_GREEK_KORONIS\";\n    CharCode[CharCode[\"U_GREEK_PSILI\"] = 8127] = \"U_GREEK_PSILI\";\n    CharCode[CharCode[\"U_GREEK_PERISPOMENI\"] = 8128] = \"U_GREEK_PERISPOMENI\";\n    CharCode[CharCode[\"U_GREEK_DIALYTIKA_AND_PERISPOMENI\"] = 8129] = \"U_GREEK_DIALYTIKA_AND_PERISPOMENI\";\n    CharCode[CharCode[\"U_GREEK_PSILI_AND_VARIA\"] = 8141] = \"U_GREEK_PSILI_AND_VARIA\";\n    CharCode[CharCode[\"U_GREEK_PSILI_AND_OXIA\"] = 8142] = \"U_GREEK_PSILI_AND_OXIA\";\n    CharCode[CharCode[\"U_GREEK_PSILI_AND_PERISPOMENI\"] = 8143] = \"U_GREEK_PSILI_AND_PERISPOMENI\";\n    CharCode[CharCode[\"U_GREEK_DASIA_AND_VARIA\"] = 8157] = \"U_GREEK_DASIA_AND_VARIA\";\n    CharCode[CharCode[\"U_GREEK_DASIA_AND_OXIA\"] = 8158] = \"U_GREEK_DASIA_AND_OXIA\";\n    CharCode[CharCode[\"U_GREEK_DASIA_AND_PERISPOMENI\"] = 8159] = \"U_GREEK_DASIA_AND_PERISPOMENI\";\n    CharCode[CharCode[\"U_GREEK_DIALYTIKA_AND_VARIA\"] = 8173] = \"U_GREEK_DIALYTIKA_AND_VARIA\";\n    CharCode[CharCode[\"U_GREEK_DIALYTIKA_AND_OXIA\"] = 8174] = \"U_GREEK_DIALYTIKA_AND_OXIA\";\n    CharCode[CharCode[\"U_GREEK_VARIA\"] = 8175] = \"U_GREEK_VARIA\";\n    CharCode[CharCode[\"U_GREEK_OXIA\"] = 8189] = \"U_GREEK_OXIA\";\n    CharCode[CharCode[\"U_GREEK_DASIA\"] = 8190] = \"U_GREEK_DASIA\";\n    CharCode[CharCode[\"U_IDEOGRAPHIC_FULL_STOP\"] = 12290] = \"U_IDEOGRAPHIC_FULL_STOP\";\n    CharCode[CharCode[\"U_LEFT_CORNER_BRACKET\"] = 12300] = \"U_LEFT_CORNER_BRACKET\";\n    CharCode[CharCode[\"U_RIGHT_CORNER_BRACKET\"] = 12301] = \"U_RIGHT_CORNER_BRACKET\";\n    CharCode[CharCode[\"U_LEFT_BLACK_LENTICULAR_BRACKET\"] = 12304] = \"U_LEFT_BLACK_LENTICULAR_BRACKET\";\n    CharCode[CharCode[\"U_RIGHT_BLACK_LENTICULAR_BRACKET\"] = 12305] = \"U_RIGHT_BLACK_LENTICULAR_BRACKET\";\n    CharCode[CharCode[\"U_OVERLINE\"] = 8254] = \"U_OVERLINE\";\n    CharCode[CharCode[\"UTF8_BOM\"] = 65279] = \"UTF8_BOM\";\n    CharCode[CharCode[\"U_FULLWIDTH_SEMICOLON\"] = 65307] = \"U_FULLWIDTH_SEMICOLON\";\n    CharCode[CharCode[\"U_FULLWIDTH_COMMA\"] = 65292] = \"U_FULLWIDTH_COMMA\";\n})(CharCode || (CharCode = {}));\n\nexport { CharCode };\n","\n\nclass ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw ( new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack));\n                    }\n                    throw ( new Error(e.message + '\\n\\n' + e.stack));\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n        return () => {\n            this._removeListener(listener);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    _removeListener(listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n    setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    }\n    getUnexpectedErrorHandler() {\n        return this.unexpectedErrorHandler;\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nconst errorHandler = ( new ErrorHandler());\nfunction setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nfunction onBugIndicatingError(e) {\n    errorHandler.onUnexpectedError(e);\n    return undefined;\n}\nfunction onUnexpectedError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message, cause } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error),\n            cause: cause ? transformErrorForSerialization(cause) : undefined,\n            code: error.code\n        };\n    }\n    return error;\n}\nfunction transformErrorFromSerialization(data) {\n    let error;\n    if (data.noTelemetry) {\n        error = ( new ErrorNoTelemetry());\n    }\n    else {\n        error = ( new Error());\n        error.name = data.name;\n    }\n    error.message = data.message;\n    error.stack = data.stack;\n    if (data.code) {\n        error.code = data.code;\n    }\n    if (data.cause) {\n        error.cause = transformErrorFromSerialization(data.cause);\n    }\n    return error;\n}\nconst canceledName = 'Canceled';\nfunction isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\nclass CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\nfunction canceled() {\n    const error = ( new Error(canceledName));\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return ( new Error(`Illegal argument: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal argument'));\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return ( new Error(`Illegal state: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal state'));\n    }\n}\nclass ReadonlyError extends TypeError {\n    constructor(name) {\n        super(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n    }\n}\nfunction getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\nclass NotImplementedError extends Error {\n    constructor(message) {\n        super('NotImplemented');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = ( new ErrorNoTelemetry());\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\nclass BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n    }\n}\n\nexport { BugIndicatingError, CancellationError, ErrorHandler, ErrorNoTelemetry, NotImplementedError, NotSupportedError, ReadonlyError, canceled, errorHandler, getErrorMessage, illegalArgument, illegalState, isCancellationError, onBugIndicatingError, onUnexpectedError, onUnexpectedExternalError, setUnexpectedErrorHandler, transformErrorForSerialization, transformErrorFromSerialization };\n","\n\nvar _a;\nfunction groupBy(data, groupFn) {\n    const result = Object.create(null);\n    for (const element of data) {\n        const key = groupFn(element);\n        let target = result[key];\n        if (!target) {\n            target = result[key] = [];\n        }\n        target.push(element);\n    }\n    return result;\n}\nfunction diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!( after.has(element))) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!( before.has(element))) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\nfunction diffMaps(before, after) {\n    const removed = [];\n    const added = [];\n    for (const [index, value] of before) {\n        if (!( after.has(index))) {\n            removed.push(value);\n        }\n    }\n    for (const [index, value] of after) {\n        if (!( before.has(index))) {\n            added.push(value);\n        }\n    }\n    return { removed, added };\n}\nfunction intersection(setA, setB) {\n    const result = ( new Set());\n    for (const elem of setB) {\n        if (( setA.has(elem))) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\nclass SetWithKey {\n    static { _a = Symbol.toStringTag; }\n    constructor(values, toKey) {\n        this.toKey = toKey;\n        this._map = ( new Map());\n        this[_a] = 'SetWithKey';\n        for (const value of values) {\n            this.add(value);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        const key = this.toKey(value);\n        this._map.set(key, value);\n        return this;\n    }\n    delete(value) {\n        return this._map.delete(this.toKey(value));\n    }\n    has(value) {\n        return ( this._map.has(this.toKey(value)));\n    }\n    *entries() {\n        for (const entry of ( this._map.values())) {\n            yield [entry, entry];\n        }\n    }\n    keys() {\n        return ( this.values());\n    }\n    *values() {\n        for (const entry of ( this._map.values())) {\n            yield entry;\n        }\n    }\n    clear() {\n        this._map.clear();\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach(entry => callbackfn.call(thisArg, entry, entry, this));\n    }\n    [Symbol.iterator]() {\n        return ( this.values());\n    }\n}\n\nexport { SetWithKey, diffMaps, diffSets, groupBy, intersection };\n","\nimport { findFirstIdxMonotonousOrArrLen } from './arraysFind.js';\n\nfunction tail(arr) {\n    if (arr.length === 0) {\n        throw ( new Error('Invalid tail call'));\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nfunction equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\nfunction binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\nfunction binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nfunction quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw ( new TypeError('invalid index'));\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nfunction groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\nfunction* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nfunction forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nfunction forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\nfunction sortedDiff(before, after, compare) {\n    const result = [];\n    function pushSplice(start, deleteCount, toInsert) {\n        if (deleteCount === 0 && toInsert.length === 0) {\n            return;\n        }\n        const latest = result[result.length - 1];\n        if (latest && latest.start + latest.deleteCount === start) {\n            latest.deleteCount += deleteCount;\n            latest.toInsert.push(...toInsert);\n        }\n        else {\n            result.push({ start, deleteCount, toInsert });\n        }\n    }\n    let beforeIdx = 0;\n    let afterIdx = 0;\n    while (true) {\n        if (beforeIdx === before.length) {\n            pushSplice(beforeIdx, 0, after.slice(afterIdx));\n            break;\n        }\n        if (afterIdx === after.length) {\n            pushSplice(beforeIdx, before.length - beforeIdx, []);\n            break;\n        }\n        const beforeElement = before[beforeIdx];\n        const afterElement = after[afterIdx];\n        const n = compare(beforeElement, afterElement);\n        if (n === 0) {\n            beforeIdx += 1;\n            afterIdx += 1;\n        }\n        else if (n < 0) {\n            pushSplice(beforeIdx, 1, []);\n            beforeIdx += 1;\n        }\n        else if (n > 0) {\n            pushSplice(beforeIdx, 0, [afterElement]);\n            afterIdx += 1;\n        }\n    }\n    return result;\n}\nfunction delta(before, after, compare) {\n    const splices = sortedDiff(before, after, compare);\n    const removed = [];\n    const added = [];\n    for (const splice of splices) {\n        removed.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n        added.push(...splice.toInsert);\n    }\n    return { removed, added };\n}\nfunction top(array, compare, n) {\n    if (n === 0) {\n        return [];\n    }\n    const result = array.slice(0, n).sort(compare);\n    topStep(array, compare, result, n, array.length);\n    return result;\n}\nfunction topStep(array, compare, result, i, m) {\n    for (const n = result.length; i < m; i++) {\n        const element = array[i];\n        if (compare(element, result[n - 1]) < 0) {\n            result.pop();\n            const j = findFirstIdxMonotonousOrArrLen(result, e => compare(element, e) < 0);\n            result.splice(j, 0, element);\n        }\n    }\n}\nfunction coalesce(array) {\n    return array.filter((e) => !!e);\n}\nfunction coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\nfunction move(array, from, to) {\n    array.splice(to, 0, array.splice(from, 1)[0]);\n}\nfunction isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nfunction isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\nfunction distinct(array, keyFn = value => value) {\n    const seen = ( new Set());\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nfunction uniqueFilter(keyFn) {\n    const seen = ( new Set());\n    return element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    };\n}\nfunction commonPrefixLength(one, other, equals = (a, b) => a === b) {\n    let result = 0;\n    for (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n        result++;\n    }\n    return result;\n}\nfunction range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nfunction index(array, indexer, mapper) {\n    return array.reduce((r, t) => {\n        r[indexer(t)] = mapper ? mapper(t) : t;\n        return r;\n    }, Object.create(null));\n}\nfunction insert(array, element) {\n    array.push(element);\n    return () => remove(array, element);\n}\nfunction remove(array, element) {\n    const index = array.indexOf(element);\n    if (index > -1) {\n        array.splice(index, 1);\n        return element;\n    }\n    return undefined;\n}\nfunction arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\nfunction shuffle(array, _seed) {\n    let rand;\n    if (typeof _seed === 'number') {\n        let seed = _seed;\n        rand = () => {\n            const x = Math.sin(seed++) * 179426549;\n            return x - Math.floor(x);\n        };\n    }\n    else {\n        rand = Math.random;\n    }\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(rand() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\nfunction pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\nfunction pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nfunction pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nfunction mapArrayOrNot(items, fn) {\n    return Array.isArray(items) ?\n        ( items.map(fn)) :\n        fn(items);\n}\nfunction asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\nfunction insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\nfunction splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nvar CompareResult;\n(function (CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {}));\nfunction compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nfunction tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\nconst numberComparator = (a, b) => a - b;\nconst booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nfunction reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nfunction compareUndefinedSmallest(comparator) {\n    return (a, b) => {\n        if (a === undefined) {\n            return b === undefined ? CompareResult.neitherLessOrGreaterThan : CompareResult.lessThan;\n        }\n        else if (b === undefined) {\n            return CompareResult.greaterThan;\n        }\n        return comparator(a, b);\n    };\n}\nclass ArrayQueue {\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    takeWhile(predicate) {\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    takeFromEndWhile(predicate) {\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    peekLast() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.lastIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    removeLast() {\n        const result = this.items[this.lastIdx];\n        this.lastIdx--;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\nclass CallbackIterable {\n    static { this.empty = ( new CallbackIterable(_callback => { })); }\n    constructor(\n    iterate) {\n        this.iterate = iterate;\n    }\n    forEach(handler) {\n        this.iterate(item => { handler(item); return true; });\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return ( new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true)));\n    }\n    map(mapFn) {\n        return ( new CallbackIterable(cb => this.iterate(item => cb(mapFn(item)))));\n    }\n    some(predicate) {\n        let result = false;\n        this.iterate(item => { result = predicate(item); return !result; });\n        return result;\n    }\n    findFirst(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\nclass Permutation {\n    constructor(_indexMap) {\n        this._indexMap = _indexMap;\n    }\n    static createSortPermutation(arr, compareFn) {\n        const sortIndices = Array.from(( arr.keys())).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n        return ( new Permutation(sortIndices));\n    }\n    apply(arr) {\n        return ( arr.map((_, index) => arr[this._indexMap[index]]));\n    }\n    inverse() {\n        const inverseIndexMap = this._indexMap.slice();\n        for (let i = 0; i < this._indexMap.length; i++) {\n            inverseIndexMap[this._indexMap[i]] = i;\n        }\n        return ( new Permutation(inverseIndexMap));\n    }\n}\nasync function findAsync(array, predicate) {\n    const results = await Promise.all(( array.map(\n        async (element, index) => ({ element, ok: await predicate(element, index) })\n    )));\n    return results.find(r => r.ok)?.element;\n}\n\nexport { ArrayQueue, CallbackIterable, CompareResult, Permutation, arrayInsert, asArray, binarySearch, binarySearch2, booleanComparator, coalesce, coalesceInPlace, commonPrefixLength, compareBy, compareUndefinedSmallest, delta, distinct, equals, findAsync, forEachAdjacent, forEachWithNeighbors, groupAdjacentBy, groupBy, index, insert, insertInto, isFalsyOrEmpty, isNonEmptyArray, mapArrayOrNot, move, numberComparator, pushMany, pushToEnd, pushToStart, quickSelect, range, remove, removeFastWithoutKeepingOrder, reverseOrder, shuffle, sortedDiff, splice, tail, tieBreakComparators, top, uniqueFilter };\n","\n\nfunction findLast(array, predicate, fromIndex = array.length - 1) {\n    const idx = findLastIdx(array, predicate, fromIndex);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nfunction findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\nfunction findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\nfunction findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\nfunction findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\nclass MonotonousArray {\n    static { this.assertInvariants = false; }\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw ( new Error(\n                            'MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.'\n                        ));\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\nfunction findFirstMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findLastMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findFirstMin(array, comparator) {\n    return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nfunction findMaxIdx(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\nfunction mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\n\nexport { MonotonousArray, findFirstIdxMonotonousOrArrLen, findFirstMax, findFirstMin, findFirstMonotonous, findLast, findLastIdx, findLastIdxMonotonous, findLastMax, findLastMonotonous, findMaxIdx, mapFindFirst };\n","\n\nvar _a, _b, _c;\nfunction getOrSet(map, key, value) {\n    let result = map.get(key);\n    if (result === undefined) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nclass ResourceMap {\n    static { this.defaultToKey = (resource) => ( resource.toString()); }\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = ( new Map(arg.map));\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = ( new Map());\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = ( new Map());\n            this.toKey = arg ?? ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), ( new ResourceMapEntry(resource, value)));\n        return this;\n    }\n    get(resource) {\n        return this.map.get(this.toKey(resource))?.value;\n    }\n    has(resource) {\n        return ( this.map.has(this.toKey(resource)));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of ( this.map.values())) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of ( this.map.values())) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of ( this.map.values())) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nclass ResourceSet {\n    constructor(entriesOrKey, toKey) {\n        this[_b] = 'ResourceSet';\n        if (!entriesOrKey || typeof entriesOrKey === 'function') {\n            this._map = ( new ResourceMap(entriesOrKey));\n        }\n        else {\n            this._map = ( new ResourceMap(toKey));\n            entriesOrKey.forEach(this.add, this);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        this._map.set(value, value);\n        return this;\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(value) {\n        return this._map.delete(value);\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n    }\n    has(value) {\n        return ( this._map.has(value));\n    }\n    entries() {\n        return this._map.entries();\n    }\n    keys() {\n        return ( this._map.keys());\n    }\n    values() {\n        return ( this._map.keys());\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return ( this.keys());\n    }\n}\nvar Touch;\n(function (Touch) {\n    Touch[Touch[\"None\"] = 0] = \"None\";\n    Touch[Touch[\"AsOld\"] = 1] = \"AsOld\";\n    Touch[Touch[\"AsNew\"] = 2] = \"AsNew\";\n})(Touch || (Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[_c] = 'LinkedMap';\n        this._map = ( new Map());\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return ( this._map.has(key));\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.AsOld:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.AsNew:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw ( new Error(`LinkedMap got modified during iteration.`));\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_c = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    trimNew(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._tail;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.previous;\n            currentSize--;\n        }\n        this._tail = current;\n        this._size = currentSize;\n        if (current) {\n            current.next = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw ( new Error('Invalid list'));\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            if (!item.next) {\n                throw ( new Error('Invalid list'));\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            if (!item.previous) {\n                throw ( new Error('Invalid list'));\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw ( new Error('Invalid list'));\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        if ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n            return;\n        }\n        if (touch === Touch.AsOld) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._tail) {\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.AsNew) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._head) {\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nclass Cache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.AsNew);\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trim(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nclass LRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimOld(newSize);\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.checkTrim();\n        return this;\n    }\n}\nclass MRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimNew(newSize);\n    }\n    set(key, value) {\n        if (this._limit <= this.size && !( this.has(key))) {\n            this.trim(Math.round(this._limit * this._ratio) - 1);\n        }\n        super.set(key, value);\n        return this;\n    }\n}\nclass CounterSet {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(value) {\n        this.map.set(value, (this.map.get(value) || 0) + 1);\n        return this;\n    }\n    delete(value) {\n        let counter = this.map.get(value) || 0;\n        if (counter === 0) {\n            return false;\n        }\n        counter--;\n        if (counter === 0) {\n            this.map.delete(value);\n        }\n        else {\n            this.map.set(value, counter);\n        }\n        return true;\n    }\n    has(value) {\n        return ( this.map.has(value));\n    }\n}\nclass BidirectionalMap {\n    constructor(entries) {\n        this._m1 = ( new Map());\n        this._m2 = ( new Map());\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    forEach(callbackfn, thisArg) {\n        this._m1.forEach((value, key) => {\n            callbackfn.call(thisArg, value, key, this);\n        });\n    }\n    keys() {\n        return ( this._m1.keys());\n    }\n    values() {\n        return ( this._m1.values());\n    }\n}\nclass SetMap {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = ( new Set());\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return ( new Set());\n        }\n        return values;\n    }\n}\nfunction mapsStrictEqualIgnoreOrder(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const [key, value] of a) {\n        if (!( b.has(key)) || b.get(key) !== value) {\n            return false;\n        }\n    }\n    for (const [key] of b) {\n        if (!( a.has(key))) {\n            return false;\n        }\n    }\n    return true;\n}\nclass NKeyMap {\n    constructor() {\n        this._data = ( new Map());\n    }\n    set(value, ...keys) {\n        let currentMap = this._data;\n        for (let i = 0; i < keys.length - 1; i++) {\n            if (!( currentMap.has(keys[i]))) {\n                currentMap.set(keys[i], ( new Map()));\n            }\n            currentMap = currentMap.get(keys[i]);\n        }\n        currentMap.set(keys[keys.length - 1], value);\n    }\n    get(...keys) {\n        let currentMap = this._data;\n        for (let i = 0; i < keys.length - 1; i++) {\n            if (!( currentMap.has(keys[i]))) {\n                return undefined;\n            }\n            currentMap = currentMap.get(keys[i]);\n        }\n        return currentMap.get(keys[keys.length - 1]);\n    }\n    clear() {\n        this._data.clear();\n    }\n    *values() {\n        function* iterate(map) {\n            for (const value of ( map.values())) {\n                if (value instanceof Map) {\n                    yield* iterate(value);\n                }\n                else {\n                    yield value;\n                }\n            }\n        }\n        yield* iterate(this._data);\n    }\n    toString() {\n        const printMap = (map, depth) => {\n            let result = '';\n            for (const [key, value] of map) {\n                result += `${'  '.repeat(depth)}${key}: `;\n                if (value instanceof Map) {\n                    result += '\\n' + printMap(value, depth + 1);\n                }\n                else {\n                    result += `${value}\\n`;\n                }\n            }\n            return result;\n        };\n        return printMap(this._data, 0);\n    }\n}\n\nexport { BidirectionalMap, CounterSet, LRUCache, LinkedMap, MRUCache, NKeyMap, ResourceMap, ResourceSet, SetMap, Touch, getOrSet, mapsStrictEqualIgnoreOrder };\n","\n\nfunction createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\n\nexport { createSingleCallFunction };\n","\nimport { BugIndicatingError, onUnexpectedError } from './errors.js';\n\nfunction ok(value, message) {\n    if (!value) {\n        throw ( new Error(message ? `Assertion failed (${message})` : 'Assertion Failed'));\n    }\n}\nfunction assertNever(value, message = 'Unreachable') {\n    throw ( new Error(message));\n}\nfunction assert(condition, messageOrError = 'unexpected state') {\n    if (!condition) {\n        const errorToThrow = typeof messageOrError === 'string'\n            ? ( new BugIndicatingError(`Assertion Failed: ${messageOrError}`))\n            : messageOrError;\n        throw errorToThrow;\n    }\n}\nfunction softAssert(condition, message = 'Soft Assertion Failed') {\n    if (!condition) {\n        onUnexpectedError(( new BugIndicatingError(message)));\n    }\n}\nfunction assertFn(condition) {\n    if (!condition()) {\n        debugger;\n        condition();\n        onUnexpectedError(( new BugIndicatingError('Assertion Failed')));\n    }\n}\nfunction checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\n\nexport { assert, assertFn, assertNever, checkAdjacentItems, ok, softAssert };\n","\nimport { assert } from './assert.js';\n\nfunction isString(str) {\n    return (typeof str === 'string');\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && value.every(elem => isString(elem));\n}\nfunction isObject(obj) {\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\nfunction isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\nfunction isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\nfunction isBoolean(obj) {\n    return (obj === true || obj === false);\n}\nfunction isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\nfunction isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\nfunction isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nfunction assertType(condition, type) {\n    if (!condition) {\n        throw ( new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type'));\n    }\n}\nfunction assertIsDefined(arg) {\n    assert(arg !== null && arg !== undefined, 'Argument is `undefined` or `null`.');\n    return arg;\n}\nfunction assertDefined(value, error) {\n    if (value === null || value === undefined) {\n        const errorToThrow = typeof error === 'string' ? ( new Error(error)) : error;\n        throw errorToThrow;\n    }\n}\nfunction assertAllDefined(...args) {\n    const result = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (isUndefinedOrNull(arg)) {\n            throw ( new Error(`Assertion Failed: argument at index ${i} is undefined or null`));\n        }\n        result.push(arg);\n    }\n    return result;\n}\nfunction assertOneOf(item, list, errorPrefix) {\n    assert(list.includes(item), `${errorPrefix}: Expected '${item}' to be one of [${list.join(', ')}].`);\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (const key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isFunction(obj) {\n    return (typeof obj === 'function');\n}\nfunction areFunctions(...objects) {\n    return objects.length > 0 && objects.every(isFunction);\n}\nfunction validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nfunction validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw ( new Error(`argument does not match constraint: typeof ${constraint}`));\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch {\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw ( new Error(\n            `argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`\n        ));\n    }\n}\nfunction upcast(x) {\n    return x;\n}\n\nexport { areFunctions, assertAllDefined, assertDefined, assertIsDefined, assertOneOf, assertType, isBoolean, isDefined, isEmptyObject, isFunction, isIterable, isNumber, isObject, isString, isStringArray, isTypedArray, isUndefined, isUndefinedOrNull, upcast, validateConstraint, validateConstraints };\n","\nimport { isIterable } from './types.js';\n\nvar Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = ( Object.freeze([]));\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        let i = 0;\n        for (const element of iterable) {\n            if (predicate(element, i++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* flatMap(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield* fn(element, index++);\n        }\n    }\n    Iterable.flatMap = flatMap;\n    function* concat(...iterables) {\n        for (const item of iterables) {\n            if (isIterable(item)) {\n                yield* item;\n            }\n            else {\n                yield item;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    function* slice(arr, from, to = arr.length) {\n        if (from < -arr.length) {\n            from = 0;\n        }\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    async function asyncToArray(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return Promise.resolve(result);\n    }\n    Iterable.asyncToArray = asyncToArray;\n})(Iterable || (Iterable = {}));\n\nexport { Iterable };\n","\nimport { compareBy, numberComparator } from './arrays.js';\nimport { groupBy } from './collections.js';\nimport { SetMap } from './map.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\n\nlet disposableTracker = null;\nclass GCBasedDisposableTracker {\n    constructor() {\n        this._registry = ( new FinalizationRegistry(heldValue => {\n            console.warn(`[LEAKED DISPOSABLE] ${heldValue}`);\n        }));\n    }\n    trackDisposable(disposable) {\n        const stack = ( new Error('CREATED via:')).stack;\n        this._registry.register(disposable, stack, disposable);\n    }\n    setParent(child, parent) {\n        if (parent) {\n            this._registry.unregister(child);\n        }\n        else {\n            this.trackDisposable(child);\n        }\n    }\n    markAsDisposed(disposable) {\n        this._registry.unregister(disposable);\n    }\n    markAsSingleton(disposable) {\n        this._registry.unregister(disposable);\n    }\n}\nclass DisposableTracker {\n    constructor() {\n        this.livingDisposables = ( new Map());\n    }\n    static { this.idx = 0; }\n    getDisposableData(d) {\n        let val = this.livingDisposables.get(d);\n        if (!val) {\n            val = { parent: null, source: null, isSingleton: false, value: d, idx: DisposableTracker.idx++ };\n            this.livingDisposables.set(d, val);\n        }\n        return val;\n    }\n    trackDisposable(d) {\n        const data = this.getDisposableData(d);\n        if (!data.source) {\n            data.source =\n                ( new Error()).stack;\n        }\n    }\n    setParent(child, parent) {\n        const data = this.getDisposableData(child);\n        data.parent = parent;\n    }\n    markAsDisposed(x) {\n        this.livingDisposables.delete(x);\n    }\n    markAsSingleton(disposable) {\n        this.getDisposableData(disposable).isSingleton = true;\n    }\n    getRootParent(data, cache) {\n        const cacheValue = cache.get(data);\n        if (cacheValue) {\n            return cacheValue;\n        }\n        const result = data.parent ? this.getRootParent(this.getDisposableData(data.parent), cache) : data;\n        cache.set(data, result);\n        return result;\n    }\n    getTrackedDisposables() {\n        const rootParentCache = ( new Map());\n        const leaking = [...this.livingDisposables.entries()]\n            .filter(([, v]) => v.source !== null && !this.getRootParent(v, rootParentCache).isSingleton)\n            .flatMap(([k]) => k);\n        return leaking;\n    }\n    computeLeakingDisposables(maxReported = 10, preComputedLeaks) {\n        let uncoveredLeakingObjs;\n        if (preComputedLeaks) {\n            uncoveredLeakingObjs = preComputedLeaks;\n        }\n        else {\n            const rootParentCache = ( new Map());\n            const leakingObjects = [...( this.livingDisposables.values())]\n                .filter((info) => info.source !== null && !this.getRootParent(info, rootParentCache).isSingleton);\n            if (leakingObjects.length === 0) {\n                return;\n            }\n            const leakingObjsSet = ( new Set(( leakingObjects.map(o => o.value))));\n            uncoveredLeakingObjs = leakingObjects.filter(l => {\n                return !(l.parent && ( leakingObjsSet.has(l.parent)));\n            });\n            if (uncoveredLeakingObjs.length === 0) {\n                throw ( new Error('There are cyclic diposable chains!'));\n            }\n        }\n        if (!uncoveredLeakingObjs) {\n            return undefined;\n        }\n        function getStackTracePath(leaking) {\n            function removePrefix(array, linesToRemove) {\n                while (array.length > 0 && ( linesToRemove.some(\n                    regexp => typeof regexp === 'string' ? regexp === array[0] : array[0].match(regexp)\n                ))) {\n                    array.shift();\n                }\n            }\n            const lines = ( leaking.source.split('\\n').map(p => p.trim().replace('at ', ''))).filter(l => l !== '');\n            removePrefix(lines, ['Error', /^trackDisposable \\(.*\\)$/, /^DisposableTracker.trackDisposable \\(.*\\)$/]);\n            return lines.reverse();\n        }\n        const stackTraceStarts = ( new SetMap());\n        for (const leaking of uncoveredLeakingObjs) {\n            const stackTracePath = getStackTracePath(leaking);\n            for (let i = 0; i <= stackTracePath.length; i++) {\n                stackTraceStarts.add(stackTracePath.slice(0, i).join('\\n'), leaking);\n            }\n        }\n        uncoveredLeakingObjs.sort(compareBy(l => l.idx, numberComparator));\n        let message = '';\n        let i = 0;\n        for (const leaking of uncoveredLeakingObjs.slice(0, maxReported)) {\n            i++;\n            const stackTracePath = getStackTracePath(leaking);\n            const stackTraceFormattedLines = [];\n            for (let i = 0; i < stackTracePath.length; i++) {\n                let line = stackTracePath[i];\n                const starts = stackTraceStarts.get(stackTracePath.slice(0, i + 1).join('\\n'));\n                line = `(shared with ${starts.size}/${uncoveredLeakingObjs.length} leaks) at ${line}`;\n                const prevStarts = stackTraceStarts.get(stackTracePath.slice(0, i).join('\\n'));\n                const continuations = groupBy(( [...prevStarts].map(d => getStackTracePath(d)[i])), v => v);\n                delete continuations[stackTracePath[i]];\n                for (const [cont, set] of Object.entries(continuations)) {\n                    stackTraceFormattedLines.unshift(`    - stacktraces of ${set.length} other leaks continue with ${cont}`);\n                }\n                stackTraceFormattedLines.unshift(line);\n            }\n            message += `\\n\\n\\n==================== Leaking disposable ${i}/${uncoveredLeakingObjs.length}: ${leaking.value.constructor.name} ====================\\n${stackTraceFormattedLines.join('\\n')}\\n============================================================\\n\\n`;\n        }\n        if (uncoveredLeakingObjs.length > maxReported) {\n            message += `\\n\\n\\n... and ${uncoveredLeakingObjs.length - maxReported} more leaking disposables\\n\\n`;\n        }\n        return { leaks: uncoveredLeakingObjs, details: message };\n    }\n}\nfunction setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nfunction trackDisposable(x) {\n    disposableTracker?.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker?.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker?.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\nfunction markAsSingleton(singleton) {\n    disposableTracker?.markAsSingleton(singleton);\n    return singleton;\n}\nfunction isDisposable(thing) {\n    return typeof thing === 'object' && thing !== null && typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nfunction dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw ( new AggregateError(errors, 'Encountered errors while disposing of store'));\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nfunction disposeIfDisposable(disposables) {\n    for (const d of disposables) {\n        if (isDisposable(d)) {\n            d.dispose();\n        }\n    }\n    return [];\n}\nfunction combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nfunction toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nclass DisposableStore {\n    static { this.DISABLE_DISPOSED_WARNING = false; }\n    constructor() {\n        this._toDispose = ( new Set());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw ( new Error('Cannot register a disposable on itself!'));\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(( new Error(\n                    'Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!'\n                )).stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    delete(o) {\n        if (!o) {\n            return;\n        }\n        if (o === this) {\n            throw ( new Error('Cannot dispose a disposable on itself!'));\n        }\n        this._toDispose.delete(o);\n        o.dispose();\n    }\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (( this._toDispose.has(o))) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\nclass Disposable {\n    static { this.None = ( Object.freeze({ dispose() { } })); }\n    constructor() {\n        this._store = ( new DisposableStore());\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw ( new Error('Cannot register a disposable on itself!'));\n        }\n        return this._store.add(o);\n    }\n}\nclass MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        this._value?.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        this._isDisposed = true;\n        markAsDisposed(this);\n        this._value?.dispose();\n        this._value = undefined;\n    }\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nclass MandatoryMutableDisposable {\n    constructor(initialValue) {\n        this._disposable = ( new MutableDisposable());\n        this._isDisposed = false;\n        this._disposable.value = initialValue;\n    }\n    get value() {\n        return this._disposable.value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._disposable.value) {\n            return;\n        }\n        this._disposable.value = value;\n    }\n    dispose() {\n        this._isDisposed = true;\n        this._disposable.dispose();\n    }\n}\nclass RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nclass ReferenceCollection {\n    constructor() {\n        this.references = ( new Map());\n    }\n    acquire(key, ...args) {\n        let reference = this.references.get(key);\n        if (!reference) {\n            reference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n            this.references.set(key, reference);\n        }\n        const { object } = reference;\n        const dispose = createSingleCallFunction(() => {\n            if (--reference.counter === 0) {\n                this.destroyReferencedObject(key, reference.object);\n                this.references.delete(key);\n            }\n        });\n        reference.counter++;\n        return { object, dispose };\n    }\n}\nclass AsyncReferenceCollection {\n    constructor(referenceCollection) {\n        this.referenceCollection = referenceCollection;\n    }\n    async acquire(key, ...args) {\n        const ref = this.referenceCollection.acquire(key, ...args);\n        try {\n            const object = await ref.object;\n            return {\n                object,\n                dispose: () => ref.dispose()\n            };\n        }\n        catch (error) {\n            ref.dispose();\n            throw error;\n        }\n    }\n}\nclass ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\nclass DisposableMap {\n    constructor() {\n        this._store = ( new Map());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(( this._store.values()));\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    has(key) {\n        return ( this._store.has(key));\n    }\n    get size() {\n        return this._store.size;\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        if (this._isDisposed) {\n            console.warn(( new Error(\n                'Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!'\n            )).stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            this._store.get(key)?.dispose();\n        }\n        this._store.set(key, value);\n    }\n    deleteAndDispose(key) {\n        this._store.get(key)?.dispose();\n        this._store.delete(key);\n    }\n    deleteAndLeak(key) {\n        const value = this._store.get(key);\n        this._store.delete(key);\n        return value;\n    }\n    keys() {\n        return ( this._store.keys());\n    }\n    values() {\n        return ( this._store.values());\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\n\nexport { AsyncReferenceCollection, Disposable, DisposableMap, DisposableStore, DisposableTracker, GCBasedDisposableTracker, ImmortalReference, MandatoryMutableDisposable, MutableDisposable, RefCountedDisposable, ReferenceCollection, combinedDisposable, dispose, disposeIfDisposable, isDisposable, markAsDisposed, markAsSingleton, setDisposableTracker, toDisposable, trackDisposable };\n","\n\nclass Node {\n    static { this.Undefined = ( new Node(undefined)); }\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nclass LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = ( new Node(element));\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n\nexport { LinkedList };\n","\n\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nclass StopWatch {\n    static create(highResolution) {\n        return ( new StopWatch(highResolution));\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    reset() {\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n\nexport { StopWatch };\n","\nimport { diffSets } from './collections.js';\nimport { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Disposable, combinedDisposable, DisposableStore, toDisposable, DisposableMap } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\n\nvar Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    function onceIf(event, condition) {\n        return Event.once(Event.filter(event, condition));\n    }\n    Event.onceIf = onceIf;\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, ( map(i))), null, disposables), disposable);\n    }\n    Event.map = map;\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...( events.map(event => event(e => listener.call(thisArgs, e)))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return ( map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable));\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener?.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire?.();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer?.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = ( new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        }));\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(( new ChainableSynthesis()));\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event, disposables) {\n        return ( new Promise(resolve => once(event)(resolve, null, disposables)));\n    }\n    Event.toPromise = toPromise;\n    function fromPromise(promise) {\n        const result = ( new Emitter());\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    function forward(from, to) {\n        return from(e => to.fire(e));\n    }\n    Event.forward = forward;\n    function runAndSubscribe(event, handler, initial) {\n        handler(initial);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                    this._observable.reportChanges();\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            this.emitter = ( new Emitter(options));\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n        }\n        handleChange(_observable, _change) {\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    function fromObservable(obs, store) {\n        const observer = ( new EmitterObserver(obs, store));\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    function fromObservableLight(observable) {\n        return (listener, thisArgs, disposables) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener.call(thisArgs);\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            const disposable = {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n            if (disposables instanceof DisposableStore) {\n                disposables.add(disposable);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(disposable);\n            }\n            return disposable;\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {}));\nclass EventProfiling {\n    static { this.all = ( new Set()); }\n    static { this._idPool = 0; }\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = ( new StopWatch());\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nlet _globalLeakWarningThreshold = -1;\nfunction setGlobalLeakWarningThreshold(n) {\n    const oldValue = _globalLeakWarningThreshold;\n    _globalLeakWarningThreshold = n;\n    return {\n        dispose() {\n            _globalLeakWarningThreshold = oldValue;\n        }\n    };\n}\nclass LeakageMonitor {\n    static { this._idPool = 1; }\n    constructor(_errorHandler, threshold, name = ( (LeakageMonitor._idPool++).toString(16)).padStart(3, '0')) {\n        this._errorHandler = _errorHandler;\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        this._stacks?.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = ( new Map());\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            this._warnCountdown = threshold * 0.5;\n            const [topStack, topCount] = this.getMostFrequentStack();\n            const message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n            console.warn(message);\n            console.warn(topStack);\n            const error = ( new ListenerLeakError(message, topStack));\n            this._errorHandler(error);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n    getMostFrequentStack() {\n        if (!this._stacks) {\n            return undefined;\n        }\n        let topStack;\n        let topCount = 0;\n        for (const [stack, count] of this._stacks) {\n            if (!topStack || topCount < count) {\n                topStack = [stack, count];\n                topCount = count;\n            }\n        }\n        return topStack;\n    }\n}\nclass Stacktrace {\n    static create() {\n        const err = ( new Error());\n        return ( new Stacktrace(err.stack ?? ''));\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nclass ListenerLeakError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerLeakError';\n        this.stack = stack;\n    }\n}\nclass ListenerRefusalError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerRefusalError';\n        this.stack = stack;\n    }\n}\nlet id = 0;\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n        this.id = id++;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\nclass Emitter {\n    constructor(options) {\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n            ? ( new LeakageMonitor(\n            options?.onListenerError ?? onUnexpectedError,\n            this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold\n        )) :\n            undefined;\n        this._perfMon = this._options?._profName ? ( new EventProfiling(this._options._profName)) : undefined;\n        this._deliveryQueue = this._options?.deliveryQueue;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._deliveryQueue?.current === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            this._options?.onDidRemoveLastListener?.();\n            this._leakageMon?.dispose();\n        }\n    }\n    get event() {\n        this._event ??= (callback, thisArgs, disposables) => {\n            if (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n                const message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n                console.warn(message);\n                const tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n                const error = ( new ListenerRefusalError(\n                    `${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`,\n                    tuple[0]\n                ));\n                const errorHandler = this._options?.onListenerError || onUnexpectedError;\n                errorHandler(error);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = ( new UniqueContainer(callback));\n            let removeMonitor;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (!this._listeners) {\n                this._options?.onWillAddFirstListener?.(this);\n                this._listeners = contained;\n                this._options?.onDidAddFirstListener?.(this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                this._deliveryQueue ??= ( new EventDeliveryQueuePrivate());\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._options?.onDidAddListener?.(this);\n            this._size++;\n            const result = toDisposable(() => {\n                removeMonitor?.();\n                this._removeListener(contained);\n            });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        };\n        return this._event;\n    }\n    _removeListener(listener) {\n        this._options?.onWillRemoveListener?.(this);\n        if (!this._listeners) {\n            return;\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            this._options?.onDidRemoveLastListener?.(this);\n            this._size = 0;\n            return;\n        }\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw ( new Error('Attempted to dispose unknown listener'));\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue && n < this._deliveryQueue.end) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        if (!listener) {\n            return;\n        }\n        const errorHandler = this._options?.onListenerError || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    fire(event) {\n        if (this._deliveryQueue?.current) {\n            this._deliverQueue(this._deliveryQueue);\n            this._perfMon?.stop();\n        }\n        this._perfMon?.start(this._size);\n        if (!this._listeners) ;\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        this._perfMon?.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nconst createEventDeliveryQueue = () => ( new EventDeliveryQueuePrivate());\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        this.i = -1;\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end;\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nclass AsyncEmitter extends Emitter {\n    async fireAsync(data, token, promiseJoin) {\n        if (!this._listeners) {\n            return;\n        }\n        if (!this._asyncDeliveryQueue) {\n            this._asyncDeliveryQueue = ( new LinkedList());\n        }\n        forEachListener(this._listeners, listener => this._asyncDeliveryQueue.push([listener.value, data]));\n        while (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n            const [listener, data] = this._asyncDeliveryQueue.shift();\n            const thenables = [];\n            const event = {\n                ...data,\n                token,\n                waitUntil: (p) => {\n                    if (Object.isFrozen(thenables)) {\n                        throw ( new Error('waitUntil can NOT be called asynchronous'));\n                    }\n                    if (promiseJoin) {\n                        p = promiseJoin(p, listener);\n                    }\n                    thenables.push(p);\n                }\n            };\n            try {\n                listener(event);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n                continue;\n            }\n            await Promise.allSettled(thenables).then(values => {\n                for (const value of values) {\n                    if (value.status === 'rejected') {\n                        onUnexpectedError(value.reason);\n                    }\n                }\n            });\n        }\n    }\n}\nclass PauseableEmitter extends Emitter {\n    get isPaused() {\n        return this._isPaused !== 0;\n    }\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = ( new LinkedList());\n        this._mergeFn = options?.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nclass DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        super(options);\n        this._delay = options.delay ?? 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\nclass MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options?.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\nclass EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = ( new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        }));\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        e.listener?.dispose();\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n        for (const e of this.events) {\n            e.listener?.dispose();\n        }\n        this.events = [];\n    }\n}\nclass DynamicListEventMultiplexer {\n    constructor(items, onAddItem, onRemoveItem, getEvent) {\n        this._store = ( new DisposableStore());\n        const multiplexer = this._store.add(( new EventMultiplexer()));\n        const itemListeners = this._store.add(( new DisposableMap()));\n        function addItem(instance) {\n            itemListeners.set(instance, multiplexer.add(getEvent(instance)));\n        }\n        for (const instance of items) {\n            addItem(instance);\n        }\n        this._store.add(onAddItem(instance => {\n            addItem(instance);\n        }));\n        this._store.add(onRemoveItem(instance => {\n            itemListeners.deleteAndDispose(instance);\n        }));\n        this.event = multiplexer.event;\n    }\n    dispose() {\n        this._store.dispose();\n    }\n}\nclass EventBufferer {\n    constructor() {\n        this.data = [];\n    }\n    wrapEvent(event, reduce, initial) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const data = this.data[this.data.length - 1];\n                if (!reduce) {\n                    if (data) {\n                        data.buffers.push(() => listener.call(thisArgs, i));\n                    }\n                    else {\n                        listener.call(thisArgs, i);\n                    }\n                    return;\n                }\n                const reduceData = data;\n                if (!reduceData) {\n                    listener.call(thisArgs, reduce(initial, i));\n                    return;\n                }\n                reduceData.items ??= [];\n                reduceData.items.push(i);\n                if (reduceData.buffers.length === 0) {\n                    data.buffers.push(() => {\n                        reduceData.reducedResult ??= initial\n                            ? reduceData.items.reduce(reduce, initial)\n                            : reduceData.items.reduce(reduce);\n                        listener.call(thisArgs, reduceData.reducedResult);\n                    });\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const data = { buffers: ( new Array()) };\n        this.data.push(data);\n        const r = fn();\n        this.data.pop();\n        data.buffers.forEach(flush => flush());\n        return r;\n    }\n}\nclass Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = ( new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        }));\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\nclass ValueWithChangeEvent {\n    static const(value) {\n        return ( new ConstValueWithChangeEvent(value));\n    }\n    constructor(_value) {\n        this._value = _value;\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (value !== this._value) {\n            this._value = value;\n            this._onDidChange.fire(undefined);\n        }\n    }\n}\nclass ConstValueWithChangeEvent {\n    constructor(value) {\n        this.value = value;\n        this.onDidChange = Event.None;\n    }\n}\nfunction trackSetChanges(getData, onDidChangeData, handleItem) {\n    const map = ( new DisposableMap());\n    let oldData = ( new Set(getData()));\n    for (const d of oldData) {\n        map.set(d, handleItem(d));\n    }\n    const store = ( new DisposableStore());\n    store.add(onDidChangeData(() => {\n        const newData = getData();\n        const diff = diffSets(oldData, newData);\n        for (const r of diff.removed) {\n            map.deleteAndDispose(r);\n        }\n        for (const a of diff.added) {\n            map.set(a, handleItem(a));\n        }\n        oldData = ( new Set(newData));\n    }));\n    store.add(map);\n    return store;\n}\n\nexport { AsyncEmitter, DebounceEmitter, DynamicListEventMultiplexer, Emitter, Event, EventBufferer, EventMultiplexer, EventProfiling, ListenerLeakError, ListenerRefusalError, MicrotaskEmitter, PauseableEmitter, Relay, ValueWithChangeEvent, createEventDeliveryQueue, setGlobalLeakWarningThreshold, trackSetChanges };\n","\n\nfunction getNLSMessages() {\n    return globalThis._VSCODE_NLS_MESSAGES;\n}\nfunction getNLSLanguage() {\n    return globalThis._VSCODE_NLS_LANGUAGE;\n}\n\nexport { getNLSLanguage, getNLSMessages };\n","\nimport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n\nconst isPseudo = getNLSLanguage() === 'pseudo' || (typeof document !== 'undefined' && document.location && typeof document.location.hash === 'string' && document.location.hash.indexOf('pseudo=true') >= 0);\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nlet initialized = false;\nfunction isInitialized() {\n    return initialized;\n}\nfunction localize(data , message , ...args) {\n    if (typeof data === 'number') {\n        return _format(lookupMessage(data, message), args);\n    }\n    return _format(message, args);\n}\nfunction lookupMessage(index, fallback) {\n    initialized = true;\n    const message = getNLSMessages()?.[index];\n    if (typeof message !== 'string') {\n        if (typeof fallback === 'string') {\n            return fallback;\n        }\n        throw ( new Error(`!!! NLS MISSING: ${index} !!!`));\n    }\n    return message;\n}\nfunction localize2(data , originalMessage, ...args) {\n    let message;\n    if (typeof data === 'number') {\n        message = lookupMessage(data, originalMessage);\n    }\n    else {\n        message = originalMessage;\n    }\n    const value = _format(message, args);\n    return {\n        value,\n        original: originalMessage === message ? value : _format(originalMessage, args)\n    };\n}\n\nexport { getNLSLanguage, getNLSMessages, isInitialized, localize, localize2 };\n","\nimport '../../nls.js';\nimport { getNLSLanguage } from '../../nls.messages.js';\n\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n    nodeProcess = $globalThis.vscode.process;\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nif (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            _locale = nlsConfig.userLocale;\n            _platformLocale = nlsConfig.osLocale;\n            _language = nlsConfig.resolvedLanguage || LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig.languagePack?.translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n    _isWeb = true;\n    _language = getNLSLanguage() || LANGUAGE_DEFAULT;\n    _locale = navigator.language.toLowerCase();\n    _platformLocale = _locale;\n}\nelse {\n    console.error('Unable to resolve platform.');\n}\nvar Platform;\n(function (Platform) {\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n})(Platform || (Platform = {}));\nfunction PlatformToString(platform) {\n    switch (platform) {\n        case Platform.Web: return 'Web';\n        case Platform.Mac: return 'Mac';\n        case Platform.Linux: return 'Linux';\n        case Platform.Windows: return 'Windows';\n    }\n}\nlet _platform = Platform.Web;\nif (_isMacintosh) {\n    _platform = Platform.Mac;\n}\nelse if (_isWindows) {\n    _platform = Platform.Windows;\n}\nelse if (_isLinux) {\n    _platform = Platform.Linux;\n}\nconst isWindows = _isWindows;\nconst isMacintosh = _isMacintosh;\nconst isLinux = _isLinux;\nconst isLinuxSnap = _isLinuxSnap;\nconst isNative = _isNative;\nconst isElectron = _isElectron;\nconst isWeb = _isWeb;\nconst isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nconst webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nconst isIOS = _isIOS;\nconst isMobile = _isMobile;\nconst isCI = _isCI;\nconst platform = _platform;\nconst userAgent = _userAgent;\nconst language = _language;\nvar Language;\n(function (Language) {\n    function value() {\n        return language;\n    }\n    Language.value = value;\n    function isDefaultVariant() {\n        if (language.length === 2) {\n            return language === 'en';\n        }\n        else if (language.length >= 3) {\n            return language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n        }\n        else {\n            return false;\n        }\n    }\n    Language.isDefaultVariant = isDefaultVariant;\n    function isDefault() {\n        return language === 'en';\n    }\n    Language.isDefault = isDefault;\n})(Language || (Language = {}));\nconst locale = _locale;\nconst platformLocale = _platformLocale;\nconst setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\nconst setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        $globalThis.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            $globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nvar OperatingSystem;\n(function (OperatingSystem) {\n    OperatingSystem[OperatingSystem[\"Windows\"] = 1] = \"Windows\";\n    OperatingSystem[OperatingSystem[\"Macintosh\"] = 2] = \"Macintosh\";\n    OperatingSystem[OperatingSystem[\"Linux\"] = 3] = \"Linux\";\n})(OperatingSystem || (OperatingSystem = {}));\nconst OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = ( new Uint8Array(2));\n        test[0] = 1;\n        test[1] = 2;\n        const view = ( new Uint16Array(test.buffer));\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nconst isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nconst isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nconst isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nconst isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nconst isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n\nexport { LANGUAGE_DEFAULT, Language, OS, OperatingSystem, Platform, PlatformToString, isAndroid, isCI, isChrome, isEdge, isElectron, isFirefox, isIOS, isLinux, isLinuxSnap, isLittleEndian, isMacintosh, isMobile, isNative, isSafari, isWeb, isWebWorker, isWindows, language, locale, platform, platformLocale, setTimeout0, setTimeout0IsFaster, userAgent, webWorkerOrigin };\n","\nimport { Event, Emitter } from './event.js';\n\nconst shortcutEvent = ( Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n}));\nvar CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = ( Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    }));\n    CancellationToken.Cancelled = ( Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    }));\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = ( new Emitter());\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nclass CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            this._token = ( new MutableToken());\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        this._parentListener?.dispose();\n        if (!this._token) {\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.dispose();\n        }\n    }\n}\nfunction cancelOnDispose(store) {\n    const source = ( new CancellationTokenSource());\n    store.add({ dispose() { source.cancel(); } });\n    return source.token;\n}\n\nexport { CancellationToken, CancellationTokenSource, cancelOnDispose };\n","\n\nvar Constants;\n(function (Constants) {\n    Constants[Constants[\"MAX_SAFE_SMALL_INTEGER\"] = 1073741824] = \"MAX_SAFE_SMALL_INTEGER\";\n    Constants[Constants[\"MIN_SAFE_SMALL_INTEGER\"] = -1073741824] = \"MIN_SAFE_SMALL_INTEGER\";\n    Constants[Constants[\"MAX_UINT_8\"] = 255] = \"MAX_UINT_8\";\n    Constants[Constants[\"MAX_UINT_16\"] = 65535] = \"MAX_UINT_16\";\n    Constants[Constants[\"MAX_UINT_32\"] = 4294967295] = \"MAX_UINT_32\";\n    Constants[Constants[\"UNICODE_SUPPLEMENTARY_PLANE_BEGIN\"] = 65536] = \"UNICODE_SUPPLEMENTARY_PLANE_BEGIN\";\n})(Constants || (Constants = {}));\nfunction toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > Constants.MAX_UINT_8) {\n        return Constants.MAX_UINT_8;\n    }\n    return v | 0;\n}\nfunction toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > Constants.MAX_UINT_32) {\n        return Constants.MAX_UINT_32;\n    }\n    return v | 0;\n}\n\nexport { Constants, toUint32, toUint8 };\n","\nimport { CancellationTokenSource } from './cancellation.js';\n\nclass Cache {\n    constructor(task) {\n        this.task = task;\n        this.result = null;\n    }\n    get() {\n        if (this.result) {\n            return this.result;\n        }\n        const cts = ( new CancellationTokenSource());\n        const promise = this.task(cts.token);\n        this.result = {\n            promise,\n            dispose: () => {\n                this.result = null;\n                cts.cancel();\n                cts.dispose();\n            }\n        };\n        return this.result;\n    }\n}\nfunction identity(t) {\n    return t;\n}\nclass LRUCachedFunction {\n    constructor(arg1, arg2) {\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this._fn(arg);\n        }\n        return this.lastCache;\n    }\n}\nclass CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(arg1, arg2) {\n        this._map = ( new Map());\n        this._map2 = ( new Map());\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (( this._map2.has(key))) {\n            return this._map2.get(key);\n        }\n        const value = this._fn(arg);\n        this._map.set(arg, value);\n        this._map2.set(key, value);\n        return value;\n    }\n}\n\nexport { Cache, CachedFunction, LRUCachedFunction, identity };\n","\n\nclass Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    get hasValue() { return this._didRun; }\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get rawValue() { return this._value; }\n}\n\nexport { Lazy };\n","\nimport { LRUCachedFunction } from './cache.js';\nimport { CharCode } from './charCode.js';\nimport { Lazy } from './lazy.js';\nimport { Constants } from './uint.js';\n\nfunction isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\nfunction format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\nconst _format2Regexp = /{([^}]+)}/g;\nfunction format2(template, values) {\n    if (( Object.keys(values)).length === 0) {\n        return template;\n    }\n    return template.replace(_format2Regexp, (match, group) => (values[group] ?? match));\n}\nfunction htmlAttributeEncodeValue(value) {\n    return value.replace(/[<>\"'&]/g, ch => {\n        switch (ch) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case '\\'': return '&apos;';\n            case '&': return '&amp;';\n        }\n        return ch;\n    });\n}\nfunction escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\nfunction count(value, substr) {\n    let result = 0;\n    let index = value.indexOf(substr);\n    while (index !== -1) {\n        result++;\n        index = value.indexOf(substr, index + substr.length);\n    }\n    return result;\n}\nfunction truncate(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    return `${value.substr(0, maxLength)}${suffix}`;\n}\nfunction truncateMiddle(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    const prefixLength = Math.ceil(maxLength / 2) - suffix.length / 2;\n    const suffixLength = Math.floor(maxLength / 2) - suffix.length / 2;\n    return `${value.substr(0, prefixLength)}${suffix}${value.substr(value.length - suffixLength)}`;\n}\nfunction trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\nfunction ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\nfunction rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nfunction stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nfunction createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw ( new Error('Cannot create regex from empty string'));\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return ( new RegExp(searchString, modifiers));\n}\nfunction regExpLeadsToEndlessLoop(regexp) {\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nfunction joinStrings(items, separator) {\n    return items.filter(item => item !== undefined && item !== null && item !== false).join(separator);\n}\nfunction splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\nfunction firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\nfunction lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getIndentationLength(str) {\n    const idx = firstNonWhitespaceIndex(str);\n    if (idx === -1) {\n        return str.length;\n    }\n    return idx;\n}\nfunction replaceAsync(str, search, replacer) {\n    const parts = [];\n    let last = 0;\n    for (const match of str.matchAll(search)) {\n        parts.push(str.slice(last, match.index));\n        if (match.index === undefined) {\n            throw ( new Error('match.index should be defined'));\n        }\n        last = match.index + match[0].length;\n        parts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n    }\n    parts.push(str.slice(last));\n    return Promise.all(parts).then(p => p.join(''));\n}\nfunction compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nfunction compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction isAsciiDigit(code) {\n    return code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= CharCode.a && code <= CharCode.z;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= CharCode.A && code <= CharCode.Z;\n}\nfunction equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nfunction startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\nfunction commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\nfunction getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nclass CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nclass GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = ( new CodePointIterator(str, offset));\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nfunction nextCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.nextGraphemeLength();\n}\nfunction prevCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.prevGraphemeLength();\n}\nfunction getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\nfunction containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\nfunction isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nconst UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/;\nfunction containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nfunction isFullWidthCharacter(charCode) {\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\nfunction isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\nfunction lcut(text, n, prefix = '') {\n    const trimmed = text.trimStart();\n    if (trimmed.length < n) {\n        return trimmed;\n    }\n    const re = /\\b/g;\n    let i = 0;\n    while (re.test(trimmed)) {\n        if (trimmed.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    if (i === 0) {\n        return trimmed;\n    }\n    return prefix + trimmed.substring(i).trimStart();\n}\nfunction rcut(text, n, suffix = '') {\n    const trimmed = text.trimEnd();\n    if (trimmed.length < n) {\n        return trimmed;\n    }\n    const parts = text.split(/\\b/);\n    let result = '';\n    for (const part of parts) {\n        if (result.length > 0 && result.length + part.length > n) {\n            break;\n        }\n        result += part;\n    }\n    if (result === trimmed) {\n        return result;\n    }\n    return result.trim().replace(/b$/, '') + suffix;\n}\nconst CSI_SEQUENCE = /(?:(?:\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~])|(:?\\x1b\\].*?\\x07)/g;\nfunction* forAnsiStringParts(str) {\n    let last = 0;\n    for (const match of str.matchAll(CSI_SEQUENCE)) {\n        if (last !== match.index) {\n            yield { isCode: false, str: str.substring(last, match.index) };\n        }\n        yield { isCode: true, str: match[0] };\n        last = match.index + match[0].length;\n    }\n    if (last !== str.length) {\n        yield { isCode: false, str: str.substring(last) };\n    }\n}\nfunction removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(CSI_SEQUENCE, '');\n    }\n    return str;\n}\nconst PROMPT_NON_PRINTABLE = /\\\\\\[.*?\\\\\\]/g;\nfunction removeAnsiEscapeCodesFromPrompt(str) {\n    return removeAnsiEscapeCodes(str).replace(PROMPT_NON_PRINTABLE, '');\n}\nconst UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\nfunction startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\nfunction fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false;\n    }\n    if (target.length < query.length) {\n        return false;\n    }\n    const queryLen = query.length;\n    const targetLower = target.toLowerCase();\n    let index = 0;\n    let lastIndexOf = -1;\n    while (index < queryLen) {\n        const indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nfunction containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\nfunction uppercaseFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction getNLines(str, n = 1) {\n    if (n === 0) {\n        return '';\n    }\n    let idx = -1;\n    do {\n        idx = str.indexOf('\\n', idx + 1);\n        n--;\n    } while (n > 0 && idx >= 0);\n    if (idx === -1) {\n        return str;\n    }\n    if (str[idx - 1] === '\\r') {\n        idx--;\n    }\n    return str.substr(0, idx);\n}\nfunction singleLetterHash(n) {\n    const LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(CharCode.a + n);\n    }\n    return String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    if (breakTypeA === GraphemeBreakType.Other) {\n        return (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n    }\n    if (breakTypeA === GraphemeBreakType.CR) {\n        if (breakTypeB === GraphemeBreakType.LF) {\n            return false;\n        }\n    }\n    if (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n        return true;\n    }\n    if (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n        return true;\n    }\n    if (breakTypeA === GraphemeBreakType.L) {\n        if (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n            return false;\n        }\n    }\n    if (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n        if (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n            return false;\n        }\n    }\n    if (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n        if (breakTypeB === GraphemeBreakType.T) {\n            return false;\n        }\n    }\n    if (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n        return false;\n    }\n    if (breakTypeB === GraphemeBreakType.SpacingMark) {\n        return false;\n    }\n    if (breakTypeA === GraphemeBreakType.Prepend) {\n        return false;\n    }\n    if (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n        return false;\n    }\n    if (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n        return false;\n    }\n    return true;\n}\nvar GraphemeBreakType;\n(function (GraphemeBreakType) {\n    GraphemeBreakType[GraphemeBreakType[\"Other\"] = 0] = \"Other\";\n    GraphemeBreakType[GraphemeBreakType[\"Prepend\"] = 1] = \"Prepend\";\n    GraphemeBreakType[GraphemeBreakType[\"CR\"] = 2] = \"CR\";\n    GraphemeBreakType[GraphemeBreakType[\"LF\"] = 3] = \"LF\";\n    GraphemeBreakType[GraphemeBreakType[\"Control\"] = 4] = \"Control\";\n    GraphemeBreakType[GraphemeBreakType[\"Extend\"] = 5] = \"Extend\";\n    GraphemeBreakType[GraphemeBreakType[\"Regional_Indicator\"] = 6] = \"Regional_Indicator\";\n    GraphemeBreakType[GraphemeBreakType[\"SpacingMark\"] = 7] = \"SpacingMark\";\n    GraphemeBreakType[GraphemeBreakType[\"L\"] = 8] = \"L\";\n    GraphemeBreakType[GraphemeBreakType[\"V\"] = 9] = \"V\";\n    GraphemeBreakType[GraphemeBreakType[\"T\"] = 10] = \"T\";\n    GraphemeBreakType[GraphemeBreakType[\"LV\"] = 11] = \"LV\";\n    GraphemeBreakType[GraphemeBreakType[\"LVT\"] = 12] = \"LVT\";\n    GraphemeBreakType[GraphemeBreakType[\"ZWJ\"] = 13] = \"ZWJ\";\n    GraphemeBreakType[GraphemeBreakType[\"Extended_Pictographic\"] = 14] = \"Extended_Pictographic\";\n})(GraphemeBreakType || (GraphemeBreakType = {}));\nclass GraphemeBreakTree {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = ( new GraphemeBreakTree());\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        if (codePoint < 32) {\n            if (codePoint === CharCode.LineFeed) {\n                return GraphemeBreakType.LF;\n            }\n            if (codePoint === CharCode.CarriageReturn) {\n                return GraphemeBreakType.CR;\n            }\n            return GraphemeBreakType.Control;\n        }\n        if (codePoint < 127) {\n            return GraphemeBreakType.Other;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return GraphemeBreakType.Other;\n    }\n}\nfunction getGraphemeBreakRawData() {\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\nfunction getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    const iterator = ( new CodePointIterator(str, offset));\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    const iterator = ( new CodePointIterator(str, initialOffset));\n    let codePoint = iterator.prevCodePoint();\n    while ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n        if (iterator.offset === 0) {\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    if (!isEmojiImprecise(codePoint)) {\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === CodePoint.zwj) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nvar CodePoint;\n(function (CodePoint) {\n    CodePoint[CodePoint[\"zwj\"] = 8205] = \"zwj\";\n    CodePoint[CodePoint[\"emojiVariantSelector\"] = 65039] = \"emojiVariantSelector\";\n    CodePoint[CodePoint[\"enclosingKeyCap\"] = 8419] = \"enclosingKeyCap\";\n    CodePoint[CodePoint[\"space\"] = 32] = \"space\";\n})(CodePoint || (CodePoint = {}));\nconst noBreakWhitespace = '\\xa0';\nclass AmbiguousCharacters {\n    static { this.ambiguousCharacterData = ( new Lazy(() => {\n        return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,1523,96,8242,96,1370,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,118002,50,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,118003,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,118004,52,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,118005,53,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,118006,54,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,118007,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,118008,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,118009,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,117974,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,117975,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71913,67,71922,67,65315,67,8557,67,8450,67,8493,67,117976,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,117977,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,117978,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,117979,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,117980,71,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,117981,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,117983,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,117984,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,118001,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,117982,108,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,117985,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,117986,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,117987,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,118000,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,117988,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,117989,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,117990,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,117991,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,117992,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,117993,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,117994,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,117995,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71910,87,71919,87,117996,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,117997,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,117998,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,71909,90,66293,90,65338,90,8484,90,8488,90,117999,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65283,35,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"cs\\\":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"fr\\\":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"ja\\\":[8211,45,8218,44,65281,33,8216,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65292,44,65297,49,65307,59],\\\"ko\\\":[8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"ru\\\":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"zh-hans\\\":[160,32,65374,126,8218,44,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65297,49],\\\"zh-hant\\\":[8211,45,65374,126,8218,44,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89]}');\n    })); }\n    static { this.cache = ( new LRUCachedFunction({ getCacheKey: JSON.stringify }, (locales) => {\n        function arrayToMap(arr) {\n            const result = ( new Map());\n            for (let i = 0; i < arr.length; i += 2) {\n                result.set(arr[i], arr[i + 1]);\n            }\n            return result;\n        }\n        function mergeMaps(map1, map2) {\n            const result = ( new Map(map1));\n            for (const [key, value] of map2) {\n                result.set(key, value);\n            }\n            return result;\n        }\n        function intersectMaps(map1, map2) {\n            if (!map1) {\n                return map2;\n            }\n            const result = ( new Map());\n            for (const [key, value] of map1) {\n                if (( map2.has(key))) {\n                    result.set(key, value);\n                }\n            }\n            return result;\n        }\n        const data = this.ambiguousCharacterData.value;\n        let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n        if (filteredLocales.length === 0) {\n            filteredLocales = ['_default'];\n        }\n        let languageSpecificMap = undefined;\n        for (const locale of filteredLocales) {\n            const map = arrayToMap(data[locale]);\n            languageSpecificMap = intersectMaps(languageSpecificMap, map);\n        }\n        const commonMap = arrayToMap(data['_common']);\n        const map = mergeMaps(commonMap, languageSpecificMap);\n        return ( new AmbiguousCharacters(map));\n    })); }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static { this._locales = ( new Lazy(() => ( Object.keys(AmbiguousCharacters.ambiguousCharacterData.value)).filter((k) => !k.startsWith('_')))); }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return ( this.confusableDictionary.has(codePoint));\n    }\n    containsAmbiguousCharacter(str) {\n        for (let i = 0; i < str.length; i++) {\n            const codePoint = str.codePointAt(i);\n            if (typeof codePoint === 'number' && this.isAmbiguous(codePoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return ( new Set(( this.confusableDictionary.keys())));\n    }\n}\nclass InvisibleCharacters {\n    static getRawData() {\n        return JSON.parse('{\\\"_common\\\":[11,12,13,127,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999],\\\"cs\\\":[173,8203,12288],\\\"de\\\":[173,8203,12288],\\\"es\\\":[8203,12288],\\\"fr\\\":[173,8203,12288],\\\"it\\\":[160,173,12288],\\\"ja\\\":[173],\\\"ko\\\":[173,12288],\\\"pl\\\":[173,8203,12288],\\\"pt-BR\\\":[173,8203,12288],\\\"qps-ploc\\\":[160,173,8203,12288],\\\"ru\\\":[173,12288],\\\"tr\\\":[160,173,8203,12288],\\\"zh-hans\\\":[160,173,8203,12288],\\\"zh-hant\\\":[173,12288]}');\n    }\n    static { this._data = undefined; }\n    static getData() {\n        if (!this._data) {\n            this._data = ( new Set([...( Object.values(InvisibleCharacters.getRawData()))].flat()));\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return ( InvisibleCharacters.getData().has(codePoint));\n    }\n    static containsInvisibleCharacter(str) {\n        for (let i = 0; i < str.length; i++) {\n            const codePoint = str.codePointAt(i);\n            if (typeof codePoint === 'number' && (InvisibleCharacters.isInvisibleCharacter(codePoint) || codePoint === CodePoint.space)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\n\nexport { AmbiguousCharacters, CodePointIterator, GraphemeBreakType, GraphemeIterator, InvisibleCharacters, UNUSUAL_LINE_TERMINATORS, UTF8_BOM_CHARACTER, commonPrefixLength, commonSuffixLength, compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase, computeCodePoint, containsRTL, containsUnusualLineTerminators, containsUppercaseCharacter, convertSimple2RegExpPattern, count, createRegExp, equalsIgnoreCase, escape, escapeRegExpCharacters, firstNonWhitespaceIndex, forAnsiStringParts, format, format2, fuzzyContains, getCharContainingOffset, getIndentationLength, getLeadingWhitespace, getLeftDeleteOffset, getNLines, getNextCodePoint, htmlAttributeEncodeValue, isAsciiDigit, isBasicASCII, isEmojiImprecise, isFalsyOrWhitespace, isFullWidthCharacter, isHighSurrogate, isLowSurrogate, isLowerAsciiLetter, isUpperAsciiLetter, joinStrings, lastNonWhitespaceIndex, lcut, ltrim, nextCharLength, noBreakWhitespace, prevCharLength, rcut, regExpLeadsToEndlessLoop, removeAnsiEscapeCodes, removeAnsiEscapeCodesFromPrompt, replaceAsync, rtrim, singleLetterHash, splitLines, startsWithIgnoreCase, startsWithUTF8BOM, stripWildcards, trim, truncate, truncateMiddle, uppercaseFirstLetter };\n","\nimport { CharCode } from '../charCode.js';\nimport { transformErrorForSerialization, onUnexpectedError } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { isUpperAsciiLetter } from '../strings.js';\n\nconst DEFAULT_CHANNEL = 'default';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nfunction logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"Request\"] = 0] = \"Request\";\n    MessageType[MessageType[\"Reply\"] = 1] = \"Reply\";\n    MessageType[MessageType[\"SubscribeEvent\"] = 2] = \"SubscribeEvent\";\n    MessageType[MessageType[\"Event\"] = 3] = \"Event\";\n    MessageType[MessageType[\"UnsubscribeEvent\"] = 4] = \"UnsubscribeEvent\";\n})(MessageType || (MessageType = {}));\nclass RequestMessage {\n    constructor(vsWorker, req, channel, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.method = method;\n        this.args = args;\n        this.type = MessageType.Request;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = MessageType.Reply;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, channel, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = MessageType.SubscribeEvent;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = MessageType.Event;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = MessageType.UnsubscribeEvent;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = ( new Map());\n        this._pendingEvents = ( new Map());\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(channel, method, args) {\n        const req = String(++this._lastSentReq);\n        return ( new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(( new RequestMessage(this._workerId, req, channel, method, args)));\n        }));\n    }\n    listen(channel, eventName, arg) {\n        let req = null;\n        const emitter = ( new Emitter({\n            onWillAddFirstListener: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(( new SubscribeEventMessage(this._workerId, req, channel, eventName, arg)));\n            },\n            onDidRemoveLastListener: () => {\n                this._pendingEmitters.delete(req);\n                this._send(( new UnsubscribeEventMessage(this._workerId, req)));\n                req = null;\n            }\n        }));\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    createProxyToRemoteChannel(channel, sendMessageBarrier) {\n        const handler = {\n            get: (target, name) => {\n                if (typeof name === 'string' && !target[name]) {\n                    if (propertyIsDynamicEvent(name)) {\n                        target[name] = (arg) => {\n                            return this.listen(channel, name, arg);\n                        };\n                    }\n                    else if (propertyIsEvent(name)) {\n                        target[name] = this.listen(channel, name, undefined);\n                    }\n                    else if (name.charCodeAt(0) === CharCode.DollarSign) {\n                        target[name] = async (...myArgs) => {\n                            await sendMessageBarrier?.();\n                            return this.sendMessage(channel, name, myArgs);\n                        };\n                    }\n                }\n                return target[name];\n            }\n        };\n        return ( new Proxy(Object.create(null), handler));\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case MessageType.Reply:\n                return this._handleReplyMessage(msg);\n            case MessageType.Request:\n                return this._handleRequestMessage(msg);\n            case MessageType.SubscribeEvent:\n                return this._handleSubscribeEventMessage(msg);\n            case MessageType.Event:\n                return this._handleEventMessage(msg);\n            case MessageType.UnsubscribeEvent:\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        const reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = ( new Error());\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        const req = requestMessage.req;\n        const result = this._handler.handleMessage(requestMessage.channel, requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(( new ReplyMessage(this._workerId, req, r, undefined)));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(( new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e))));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.channel, msg.eventName, msg.arg)((event) => {\n            this._send(( new EventMessage(this._workerId, req, event)));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!( this._pendingEmitters.has(msg.req))) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!( this._pendingEvents.has(msg.req))) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        const transfer = [];\n        if (msg.type === MessageType.Request) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === MessageType.Reply) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\nclass SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, workerDescriptor) {\n        super();\n        this._localChannels = ( new Map());\n        this._remoteChannels = ( new Map());\n        this._worker = this._register(workerFactory.create({\n            moduleId: 'vs/base/common/worker/simpleWorker',\n            esmModuleLocation: workerDescriptor.esmModuleLocation,\n            label: workerDescriptor.label\n        }, (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            onUnexpectedError(err);\n        }));\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => {\n                return this._handleMessage(channel, method, args);\n            },\n            handleEvent: (channel, eventName, arg) => {\n                return this._handleEvent(channel, eventName, arg);\n            }\n        }));\n        this._protocol.setWorkerId(this._worker.getId());\n        let loaderConfiguration = null;\n        if (typeof globalThis.requirejs !== 'undefined') {\n            loaderConfiguration = globalThis.requirejs.s.contexts._.config;\n        }\n        this._onModuleLoaded = this._protocol.sendMessage(DEFAULT_CHANNEL, INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            workerDescriptor.moduleId,\n        ]);\n        this.proxy = this._protocol.createProxyToRemoteChannel(DEFAULT_CHANNEL, async () => { await this._onModuleLoaded; });\n        this._onModuleLoaded.catch((e) => {\n            this._onError('Worker failed to load ' + workerDescriptor.moduleId, e);\n        });\n    }\n    _handleMessage(channelName, method, args) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            return Promise.reject(( new Error(`Missing channel ${channelName} on main thread`)));\n        }\n        if (typeof channel[method] !== 'function') {\n            return Promise.reject(( new Error(`Missing method ${method} on main thread channel ${channelName}`)));\n        }\n        try {\n            return Promise.resolve(channel[method].apply(channel, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channelName, eventName, arg) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            throw ( new Error(`Missing channel ${channelName} on main thread`));\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = channel[eventName].call(channel, arg);\n            if (typeof event !== 'function') {\n                throw ( new Error(\n                    `Missing dynamic event ${eventName} on main thread channel ${channelName}.`\n                ));\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = channel[eventName];\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing event ${eventName} on main thread channel ${channelName}.`));\n            }\n            return event;\n        }\n        throw ( new Error(`Malformed event name ${eventName}`));\n    }\n    setChannel(channel, handler) {\n        this._localChannels.set(channel, handler);\n    }\n    getChannel(channel) {\n        if (!( this._remoteChannels.has(channel))) {\n            const inst = this._protocol.createProxyToRemoteChannel(channel, async () => { await this._onModuleLoaded; });\n            this._remoteChannels.set(channel, inst);\n        }\n        return this._remoteChannels.get(channel);\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    return name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    return /^onDynamic/.test(name) && isUpperAsciiLetter(name.charCodeAt(9));\n}\nclass SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._localChannels = ( new Map());\n        this._remoteChannels = ( new Map());\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => this._handleMessage(channel, method, args),\n            handleEvent: (channel, eventName, arg) => this._handleEvent(channel, eventName, arg)\n        }));\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(channel, method, args) {\n        if (channel === DEFAULT_CHANNEL && method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            return Promise.reject(( new Error(`Missing channel ${channel} on worker thread`)));\n        }\n        if (typeof requestHandler[method] !== 'function') {\n            return Promise.reject(( new Error(`Missing method ${method} on worker thread channel ${channel}`)));\n        }\n        try {\n            return Promise.resolve(requestHandler[method].apply(requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channel, eventName, arg) {\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            throw ( new Error(`Missing channel ${channel} on worker thread`));\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = requestHandler[eventName].call(requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing dynamic event ${eventName} on request handler.`));\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing event ${eventName} on request handler.`));\n            }\n            return event;\n        }\n        throw ( new Error(`Malformed event name ${eventName}`));\n    }\n    setChannel(channel, handler) {\n        this._localChannels.set(channel, handler);\n    }\n    getChannel(channel) {\n        if (!( this._remoteChannels.has(channel))) {\n            const inst = this._protocol.createProxyToRemoteChannel(channel);\n            this._remoteChannels.set(channel, inst);\n        }\n        return this._remoteChannels.get(channel);\n    }\n    async initialize(workerId, loaderConfig, moduleId) {\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandlerFactory) {\n            this._requestHandler = this._requestHandlerFactory(this);\n            return;\n        }\n        if (loaderConfig) {\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== 'undefined') {\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            loaderConfig.catchError = true;\n            globalThis.require.config(loaderConfig);\n        }\n        return Promise.reject(( new Error(`Unexpected usage`)));\n    }\n}\n\nexport { SimpleWorkerClient, SimpleWorkerServer, logOnceWebWorkerWarning };\n","\n\nclass DiffChange {\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n\nexport { DiffChange };\n","\nimport { Lazy } from './lazy.js';\nimport { consumeReadable, toReadable, consumeStream, toStream, newWriteableStream, prefixedReadable, prefixedStream } from './stream.js';\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = ( new Lazy(() => ( new Uint8Array(256))));\nlet textEncoder;\nlet textDecoder;\nclass VSBuffer {\n    static alloc(byteLength) {\n        if (hasBuffer) {\n            return ( new VSBuffer(Buffer.allocUnsafe(byteLength)));\n        }\n        else {\n            return ( new VSBuffer(( new Uint8Array(byteLength))));\n        }\n    }\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return ( new VSBuffer(actual));\n    }\n    static fromString(source, options) {\n        const dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n        if (!dontUseNodeBuffer && hasBuffer) {\n            return ( new VSBuffer(Buffer.from(source)));\n        }\n        else {\n            if (!textEncoder) {\n                textEncoder = ( new TextEncoder());\n            }\n            return ( new VSBuffer(textEncoder.encode(source)));\n        }\n    }\n    static fromByteArray(source) {\n        const result = VSBuffer.alloc(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            result.buffer[i] = source[i];\n        }\n        return result;\n    }\n    static concat(buffers, totalLength) {\n        if (typeof totalLength === 'undefined') {\n            totalLength = 0;\n            for (let i = 0, len = buffers.length; i < len; i++) {\n                totalLength += buffers[i].byteLength;\n            }\n        }\n        const ret = VSBuffer.alloc(totalLength);\n        let offset = 0;\n        for (let i = 0, len = buffers.length; i < len; i++) {\n            const element = buffers[i];\n            ret.set(element, offset);\n            offset += element.byteLength;\n        }\n        return ret;\n    }\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    clone() {\n        const result = VSBuffer.alloc(this.byteLength);\n        result.set(this);\n        return result;\n    }\n    toString() {\n        if (hasBuffer) {\n            return ( this.buffer.toString());\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = ( new TextDecoder());\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n    slice(start, end) {\n        return ( new VSBuffer(this.buffer.subarray(start, end)));\n    }\n    set(array, offset) {\n        if (array instanceof VSBuffer) {\n            this.buffer.set(array.buffer, offset);\n        }\n        else if (array instanceof Uint8Array) {\n            this.buffer.set(array, offset);\n        }\n        else if (array instanceof ArrayBuffer) {\n            this.buffer.set(( new Uint8Array(array)), offset);\n        }\n        else if (ArrayBuffer.isView(array)) {\n            this.buffer.set(( new Uint8Array(array.buffer, array.byteOffset, array.byteLength)), offset);\n        }\n        else {\n            throw ( new Error(`Unknown argument 'array'`));\n        }\n    }\n    readUInt32BE(offset) {\n        return readUInt32BE(this.buffer, offset);\n    }\n    writeUInt32BE(value, offset) {\n        writeUInt32BE(this.buffer, value, offset);\n    }\n    readUInt32LE(offset) {\n        return readUInt32LE(this.buffer, offset);\n    }\n    writeUInt32LE(value, offset) {\n        writeUInt32LE(this.buffer, value, offset);\n    }\n    readUInt8(offset) {\n        return readUInt8(this.buffer, offset);\n    }\n    writeUInt8(value, offset) {\n        writeUInt8(this.buffer, value, offset);\n    }\n    indexOf(subarray, offset = 0) {\n        return binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n    }\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (this.byteLength !== other.byteLength) {\n            return false;\n        }\n        return this.buffer.every((value, index) => value === other.buffer[index]);\n    }\n}\nfunction binaryIndexOf(haystack, needle, offset = 0) {\n    const needleLen = needle.byteLength;\n    const haystackLen = haystack.byteLength;\n    if (needleLen === 0) {\n        return 0;\n    }\n    if (needleLen === 1) {\n        return haystack.indexOf(needle[0]);\n    }\n    if (needleLen > haystackLen - offset) {\n        return -1;\n    }\n    const table = indexOfTable.value;\n    table.fill(needle.length);\n    for (let i = 0; i < needle.length; i++) {\n        table[needle[i]] = needle.length - i - 1;\n    }\n    let i = offset + needle.length - 1;\n    let j = i;\n    let result = -1;\n    while (i < haystackLen) {\n        if (haystack[i] === needle[j]) {\n            if (j === 0) {\n                result = i;\n                break;\n            }\n            i--;\n            j--;\n        }\n        else {\n            i += Math.max(needle.length - j, table[haystack[i]]);\n            j = needle.length - 1;\n        }\n    }\n    return result;\n}\nfunction readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nfunction writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nfunction readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24\n        + source[offset + 1] * 2 ** 16\n        + source[offset + 2] * 2 ** 8\n        + source[offset + 3]);\n}\nfunction writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nfunction readUInt32LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0) |\n        ((source[offset + 2] << 16) >>> 0) |\n        ((source[offset + 3] << 24) >>> 0));\n}\nfunction writeUInt32LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 2] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 3] = (value & 0b11111111);\n}\nfunction readUInt8(source, offset) {\n    return source[offset];\n}\nfunction writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\nfunction readableToBuffer(readable) {\n    return consumeReadable(readable, chunks => VSBuffer.concat(chunks));\n}\nfunction bufferToReadable(buffer) {\n    return toReadable(buffer);\n}\nfunction streamToBuffer(stream) {\n    return consumeStream(stream, chunks => VSBuffer.concat(chunks));\n}\nasync function bufferedStreamToBuffer(bufferedStream) {\n    if (bufferedStream.ended) {\n        return VSBuffer.concat(bufferedStream.buffer);\n    }\n    return VSBuffer.concat([\n        ...bufferedStream.buffer,\n        await streamToBuffer(bufferedStream.stream)\n    ]);\n}\nfunction bufferToStream(buffer) {\n    return toStream(buffer, chunks => VSBuffer.concat(chunks));\n}\nfunction newWriteableBufferStream(options) {\n    return newWriteableStream(chunks => VSBuffer.concat(chunks), options);\n}\nfunction prefixedBufferReadable(prefix, readable) {\n    return prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\nfunction prefixedBufferStream(prefix, stream) {\n    return prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\nfunction decodeBase64(encoded) {\n    let building = 0;\n    let remainder = 0;\n    let bufi = 0;\n    const buffer = ( new Uint8Array(Math.floor(encoded.length / 4 * 3)));\n    const append = (value) => {\n        switch (remainder) {\n            case 3:\n                buffer[bufi++] = building | value;\n                remainder = 0;\n                break;\n            case 2:\n                buffer[bufi++] = building | (value >>> 2);\n                building = value << 6;\n                remainder = 3;\n                break;\n            case 1:\n                buffer[bufi++] = building | (value >>> 4);\n                building = value << 4;\n                remainder = 2;\n                break;\n            default:\n                building = value << 2;\n                remainder = 1;\n        }\n    };\n    for (let i = 0; i < encoded.length; i++) {\n        const code = encoded.charCodeAt(i);\n        if (code >= 65 && code <= 90) {\n            append(code - 65);\n        }\n        else if (code >= 97 && code <= 122) {\n            append(code - 97 + 26);\n        }\n        else if (code >= 48 && code <= 57) {\n            append(code - 48 + 52);\n        }\n        else if (code === 43 || code === 45) {\n            append(62);\n        }\n        else if (code === 47 || code === 95) {\n            append(63);\n        }\n        else if (code === 61) {\n            break;\n        }\n        else {\n            throw ( new SyntaxError(`Unexpected base64 character ${encoded[i]}`));\n        }\n    }\n    const unpadded = bufi;\n    while (remainder > 0) {\n        append(0);\n    }\n    return VSBuffer.wrap(buffer).slice(0, unpadded);\n}\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\nfunction encodeBase64({ buffer }, padded = true, urlSafe = false) {\n    const dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n    let output = '';\n    const remainder = buffer.byteLength % 3;\n    let i = 0;\n    for (; i < buffer.byteLength - remainder; i += 3) {\n        const a = buffer[i + 0];\n        const b = buffer[i + 1];\n        const c = buffer[i + 2];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4 | b >>> 4) & 0b111111];\n        output += dictionary[(b << 2 | c >>> 6) & 0b111111];\n        output += dictionary[c & 0b111111];\n    }\n    if (remainder === 1) {\n        const a = buffer[i + 0];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4) & 0b111111];\n        if (padded) {\n            output += '==';\n        }\n    }\n    else if (remainder === 2) {\n        const a = buffer[i + 0];\n        const b = buffer[i + 1];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4 | b >>> 4) & 0b111111];\n        output += dictionary[(b << 2) & 0b111111];\n        if (padded) {\n            output += '=';\n        }\n    }\n    return output;\n}\n\nexport { VSBuffer, binaryIndexOf, bufferToReadable, bufferToStream, bufferedStreamToBuffer, decodeBase64, encodeBase64, newWriteableBufferStream, prefixedBufferReadable, prefixedBufferStream, readUInt16LE, readUInt32BE, readUInt32LE, readUInt8, readableToBuffer, streamToBuffer, writeUInt16LE, writeUInt32BE, writeUInt32LE, writeUInt8 };\n","\nimport { VSBuffer } from './buffer.js';\nimport { isHighSurrogate, isLowSurrogate, computeCodePoint } from './strings.js';\n\nfunction hash(obj) {\n    return doHash(obj, 0);\n}\nfunction doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nfunction numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0;\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nfunction stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return ( Object.keys(obj)).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nconst hashAsync = (input) => {\n    if (typeof input === 'string' && input.length < 250) {\n        const sha = ( new StringSHA1());\n        sha.update(input);\n        return Promise.resolve(sha.digest());\n    }\n    let buff;\n    if (typeof input === 'string') {\n        buff = ( new TextEncoder()).encode(input);\n    }\n    else if (input instanceof VSBuffer) {\n        buff = input.buffer;\n    }\n    else {\n        buff = input;\n    }\n    return crypto.subtle.digest('sha-1', buff).then(toHexString);\n};\nvar SHA1Constant;\n(function (SHA1Constant) {\n    SHA1Constant[SHA1Constant[\"BLOCK_SIZE\"] = 64] = \"BLOCK_SIZE\";\n    SHA1Constant[SHA1Constant[\"UNICODE_REPLACEMENT\"] = 65533] = \"UNICODE_REPLACEMENT\";\n})(SHA1Constant || (SHA1Constant = {}));\nfunction leftRotate(value, bits, totalBits = 32) {\n    const delta = totalBits - bits;\n    const mask = ~((1 << delta) - 1);\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return ( Array.from(( new Uint8Array(bufferOrValue))).map(b => ( b.toString(16)).padStart(2, '0'))).join('');\n    }\n    return ( (bufferOrValue >>> 0).toString(16)).padStart(bitsize / 4, '0');\n}\nclass StringSHA1 {\n    static { this._bigBlock32 = ( new DataView(( new ArrayBuffer(320)))); }\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = ( new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 ));\n        this._buffDV = ( new DataView(this._buff.buffer));\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        codePoint = SHA1Constant.UNICODE_REPLACEMENT;\n                    }\n                }\n                else {\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (isLowSurrogate(charCode)) {\n                codePoint = SHA1Constant.UNICODE_REPLACEMENT;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= SHA1Constant.BLOCK_SIZE) {\n            this._step();\n            buffLen -= SHA1Constant.BLOCK_SIZE;\n            this._totalLen += SHA1Constant.BLOCK_SIZE;\n            buff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n            buff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n            buff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        this._buff.subarray(this._buffLen).fill(0);\n        if (this._buffLen > 56) {\n            this._step();\n            this._buff.fill(0);\n        }\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 ; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 ; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\n\nexport { StringSHA1, doHash, hash, hashAsync, numberHash, stringHash };\n","\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nimport { Constants } from '../uint.js';\n\nclass StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = ( new Int32Array(source.length));\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nfunction stringDiff(original, modified, pretty) {\n    return ( new LcsDiff(( new StringDiffSequence(original)), ( new StringDiffSequence(modified)))).ComputeDiff(pretty).changes;\n}\nclass Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw ( new Error(message));\n        }\n    }\n}\nclass MyArray {\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\nvar LocalConstants;\n(function (LocalConstants) {\n    LocalConstants[LocalConstants[\"MaxDifferencesHistory\"] = 1447] = \"MaxDifferencesHistory\";\n})(LocalConstants || (LocalConstants = {}));\nclass DiffChangeHelper {\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n        this.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    MarkNextChange() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.m_changes.push(( new DiffChange(\n                this.m_originalStart,\n                this.m_originalCount,\n                this.m_modifiedStart,\n                this.m_modifiedCount\n            )));\n        }\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n        this.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n    }\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\nclass LcsDiff {\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = ( new Int32Array(elements.length));\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], ( new Int32Array(elements)), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                changes = [\n                    ( new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1))\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                changes = [\n                    ( new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0))\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                changes = [];\n            }\n            return changes;\n        }\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                rightChanges = [\n                    ( new DiffChange(\n                        midOriginal + 1,\n                        originalEnd - (midOriginal + 1) + 1,\n                        midModified + 1,\n                        modifiedEnd - (midModified + 1) + 1\n                    ))\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        return [\n            ( new DiffChange(\n                originalStart,\n                originalEnd - originalStart + 1,\n                modifiedStart,\n                modifiedEnd - modifiedStart + 1\n            ))\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        let changeHelper = ( new DiffChangeHelper());\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = Constants.MIN_SAFE_SMALL_INTEGER;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase;\n            }\n            else {\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase;\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0];\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                ( new DiffChange(\n                    originalStartPoint,\n                    originalEnd - originalStartPoint + 1,\n                    modifiedStartPoint,\n                    modifiedEnd - modifiedStartPoint + 1\n                ))\n            ];\n        }\n        else {\n            changeHelper = ( new DiffChangeHelper());\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Constants.MAX_SAFE_SMALL_INTEGER;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase;\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0];\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        originalStart--;\n        modifiedStart--;\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = ( new Int32Array(numDiagonals));\n        const reversePoints = ( new Int32Array(numDiagonals));\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        quitEarlyArr[0] = false;\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                const tempOriginalIndex = originalIndex;\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            return null;\n                        }\n                    }\n                }\n            }\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                quitEarlyArr[0] = true;\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        ( new DiffChange(\n                            originalStart,\n                            originalEnd - originalStart + 1,\n                            modifiedStart,\n                            modifiedEnd - modifiedStart + 1\n                        ))\n                    ];\n                }\n            }\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                const tempOriginalIndex = originalIndex;\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            return null;\n                        }\n                    }\n                }\n            }\n            if (numDifferences <= LocalConstants.MaxDifferencesHistory) {\n                let temp = ( new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2));\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = ( new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2));\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    PrettifyChanges(changes) {\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            const mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    ConcatenateChanges(left, right) {\n        const mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            const result = ( new Array(left.length + right.length - 1));\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = ( new Array(left.length + right.length));\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = ( new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength));\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            return diagonal;\n        }\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n\nexport { LcsDiff, StringDiffSequence, stringDiff };\n","\nimport { toUint8 } from '../../../base/common/uint.js';\n\nclass CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = ( new Map());\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = ( new Uint8Array(256));\n        asciiMap.fill(defaultValue);\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n    clear() {\n        this._asciiMap.fill(this._defaultValue);\n        this._map.clear();\n    }\n}\nvar Boolean;\n(function (Boolean) {\n    Boolean[Boolean[\"False\"] = 0] = \"False\";\n    Boolean[Boolean[\"True\"] = 1] = \"True\";\n})(Boolean || (Boolean = {}));\nclass CharacterSet {\n    constructor() {\n        this._actual = ( new CharacterClassifier(Boolean.False));\n    }\n    add(charCode) {\n        this._actual.set(charCode, Boolean.True);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === Boolean.True);\n    }\n    clear() {\n        return this._actual.clear();\n    }\n}\n\nexport { CharacterClassifier, CharacterSet };\n","\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { CharacterClassifier } from '../core/characterClassifier.js';\n\nvar State;\n(function (State) {\n    State[State[\"Invalid\"] = 0] = \"Invalid\";\n    State[State[\"Start\"] = 1] = \"Start\";\n    State[State[\"H\"] = 2] = \"H\";\n    State[State[\"HT\"] = 3] = \"HT\";\n    State[State[\"HTT\"] = 4] = \"HTT\";\n    State[State[\"HTTP\"] = 5] = \"HTTP\";\n    State[State[\"F\"] = 6] = \"F\";\n    State[State[\"FI\"] = 7] = \"FI\";\n    State[State[\"FIL\"] = 8] = \"FIL\";\n    State[State[\"BeforeColon\"] = 9] = \"BeforeColon\";\n    State[State[\"AfterColon\"] = 10] = \"AfterColon\";\n    State[State[\"AlmostThere\"] = 11] = \"AlmostThere\";\n    State[State[\"End\"] = 12] = \"End\";\n    State[State[\"Accept\"] = 13] = \"Accept\";\n    State[State[\"LastKnownState\"] = 14] = \"LastKnownState\";\n})(State || (State = {}));\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = ( new Uint8Array(rows * cols));\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nclass StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = State.Invalid;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = ( new Uint8Matrix(maxState, maxCharCode, State.Invalid));\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return State.Invalid;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = ( new StateMachine([\n            [State.Start, CharCode.h, State.H],\n            [State.Start, CharCode.H, State.H],\n            [State.Start, CharCode.f, State.F],\n            [State.Start, CharCode.F, State.F],\n            [State.H, CharCode.t, State.HT],\n            [State.H, CharCode.T, State.HT],\n            [State.HT, CharCode.t, State.HTT],\n            [State.HT, CharCode.T, State.HTT],\n            [State.HTT, CharCode.p, State.HTTP],\n            [State.HTT, CharCode.P, State.HTTP],\n            [State.HTTP, CharCode.s, State.BeforeColon],\n            [State.HTTP, CharCode.S, State.BeforeColon],\n            [State.HTTP, CharCode.Colon, State.AfterColon],\n            [State.F, CharCode.i, State.FI],\n            [State.F, CharCode.I, State.FI],\n            [State.FI, CharCode.l, State.FIL],\n            [State.FI, CharCode.L, State.FIL],\n            [State.FIL, CharCode.e, State.BeforeColon],\n            [State.FIL, CharCode.E, State.BeforeColon],\n            [State.BeforeColon, CharCode.Colon, State.AfterColon],\n            [State.AfterColon, CharCode.Slash, State.AlmostThere],\n            [State.AlmostThere, CharCode.Slash, State.End],\n        ]));\n    }\n    return _stateMachine;\n}\nvar CharacterClass;\n(function (CharacterClass) {\n    CharacterClass[CharacterClass[\"None\"] = 0] = \"None\";\n    CharacterClass[CharacterClass[\"ForceTermination\"] = 1] = \"ForceTermination\";\n    CharacterClass[CharacterClass[\"CannotEndIn\"] = 2] = \"CannotEndIn\";\n})(CharacterClass || (CharacterClass = {}));\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = ( new CharacterClassifier(CharacterClass.None));\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n        }\n    }\n    return _classifier;\n}\nclass LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== CharacterClass.CannotEndIn) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n                || (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n                || (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)) {\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = State.Start;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === State.Accept) {\n                    let chClass;\n                    switch (chCode) {\n                        case CharCode.OpenParen:\n                            hasOpenParens = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseParen:\n                            chClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        case CharCode.OpenSquareBracket:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseSquareBracket:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        case CharCode.OpenCurlyBrace:\n                            hasOpenCurlyBracket = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseCurlyBrace:\n                            chClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        case CharCode.SingleQuote:\n                        case CharCode.DoubleQuote:\n                        case CharCode.BackTick:\n                            if (linkBeginChCode === chCode) {\n                                chClass = CharacterClass.ForceTermination;\n                            }\n                            else if (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) {\n                                chClass = CharacterClass.None;\n                            }\n                            else {\n                                chClass = CharacterClass.ForceTermination;\n                            }\n                            break;\n                        case CharCode.Asterisk:\n                            chClass = (linkBeginChCode === CharCode.Asterisk) ? CharacterClass.ForceTermination : CharacterClass.None;\n                            break;\n                        case CharCode.Pipe:\n                            chClass = (linkBeginChCode === CharCode.Pipe) ? CharacterClass.ForceTermination : CharacterClass.None;\n                            break;\n                        case CharCode.Space:\n                            chClass = (inSquareBrackets ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    if (chClass === CharacterClass.ForceTermination) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === State.End) {\n                    let chClass;\n                    if (chCode === CharCode.OpenSquareBracket) {\n                        hasOpenSquareBracket = true;\n                        chClass = CharacterClass.None;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    if (chClass === CharacterClass.ForceTermination) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = State.Accept;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === State.Invalid) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = State.Start;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === State.Accept) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\nfunction computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n\nexport { LinkComputer, State, StateMachine, computeLinks };\n","\n\nclass Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return ( new Position(newLineNumber, newColumn));\n        }\n    }\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(Math.max(1, this.lineNumber + deltaLineNumber), Math.max(1, this.column + deltaColumn));\n    }\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    clone() {\n        return ( new Position(this.lineNumber, this.column));\n    }\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    static lift(pos) {\n        return ( new Position(pos.lineNumber, pos.column));\n    }\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n    toJSON() {\n        return {\n            lineNumber: this.lineNumber,\n            column: this.column\n        };\n    }\n}\n\nexport { Position };\n","\nimport { Position } from './position.js';\n\nclass Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return ( new Range(startLineNumber, startColumn, endLineNumber, endColumn));\n    }\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        const otherStartLineNumber = b.startLineNumber;\n        const otherStartColumn = b.startColumn;\n        const otherEndLineNumber = b.endLineNumber;\n        const otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return ( new Range(\n            resultStartLineNumber,\n            resultStartColumn,\n            resultEndLineNumber,\n            resultEndColumn\n        ));\n    }\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    static equalsRange(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    static getEndPosition(range) {\n        return ( new Position(range.endLineNumber, range.endColumn));\n    }\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    static getStartPosition(range) {\n        return ( new Position(range.startLineNumber, range.startColumn));\n    }\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    setEndPosition(endLineNumber, endColumn) {\n        return ( new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn));\n    }\n    setStartPosition(startLineNumber, startColumn) {\n        return ( new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn));\n    }\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    static collapseToStart(range) {\n        return ( new Range(\n            range.startLineNumber,\n            range.startColumn,\n            range.startLineNumber,\n            range.startColumn\n        ));\n    }\n    collapseToEnd() {\n        return Range.collapseToEnd(this);\n    }\n    static collapseToEnd(range) {\n        return ( new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn));\n    }\n    delta(lineCount) {\n        return ( new Range(\n            this.startLineNumber + lineCount,\n            this.startColumn,\n            this.endLineNumber + lineCount,\n            this.endColumn\n        ));\n    }\n    isSingleLine() {\n        return this.startLineNumber === this.endLineNumber;\n    }\n    static fromPositions(start, end = start) {\n        return ( new Range(start.lineNumber, start.column, end.lineNumber, end.column));\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return ( new Range(\n            range.startLineNumber,\n            range.startColumn,\n            range.endLineNumber,\n            range.endColumn\n        ));\n    }\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    static areIntersectingOrTouching(a, b) {\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        return true;\n    }\n    static areIntersecting(a, b) {\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        return true;\n    }\n    static areOnlyIntersecting(a, b) {\n        if (a.endLineNumber < (b.startLineNumber - 1) || (a.endLineNumber === b.startLineNumber && a.endColumn < (b.startColumn - 1))) {\n            return false;\n        }\n        if (b.endLineNumber < (a.startLineNumber - 1) || (b.endLineNumber === a.startLineNumber && b.endColumn < (a.startColumn - 1))) {\n            return false;\n        }\n        return true;\n    }\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\n\nexport { Range };\n","\n\nclass BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    static { this.INSTANCE = ( new BasicInplaceReplace()); }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null;\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? 1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\n\nexport { BasicInplaceReplace };\n","\n\nvar KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nvar ScanCode;\n(function (ScanCode) {\n    ScanCode[ScanCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    ScanCode[ScanCode[\"None\"] = 0] = \"None\";\n    ScanCode[ScanCode[\"Hyper\"] = 1] = \"Hyper\";\n    ScanCode[ScanCode[\"Super\"] = 2] = \"Super\";\n    ScanCode[ScanCode[\"Fn\"] = 3] = \"Fn\";\n    ScanCode[ScanCode[\"FnLock\"] = 4] = \"FnLock\";\n    ScanCode[ScanCode[\"Suspend\"] = 5] = \"Suspend\";\n    ScanCode[ScanCode[\"Resume\"] = 6] = \"Resume\";\n    ScanCode[ScanCode[\"Turbo\"] = 7] = \"Turbo\";\n    ScanCode[ScanCode[\"Sleep\"] = 8] = \"Sleep\";\n    ScanCode[ScanCode[\"WakeUp\"] = 9] = \"WakeUp\";\n    ScanCode[ScanCode[\"KeyA\"] = 10] = \"KeyA\";\n    ScanCode[ScanCode[\"KeyB\"] = 11] = \"KeyB\";\n    ScanCode[ScanCode[\"KeyC\"] = 12] = \"KeyC\";\n    ScanCode[ScanCode[\"KeyD\"] = 13] = \"KeyD\";\n    ScanCode[ScanCode[\"KeyE\"] = 14] = \"KeyE\";\n    ScanCode[ScanCode[\"KeyF\"] = 15] = \"KeyF\";\n    ScanCode[ScanCode[\"KeyG\"] = 16] = \"KeyG\";\n    ScanCode[ScanCode[\"KeyH\"] = 17] = \"KeyH\";\n    ScanCode[ScanCode[\"KeyI\"] = 18] = \"KeyI\";\n    ScanCode[ScanCode[\"KeyJ\"] = 19] = \"KeyJ\";\n    ScanCode[ScanCode[\"KeyK\"] = 20] = \"KeyK\";\n    ScanCode[ScanCode[\"KeyL\"] = 21] = \"KeyL\";\n    ScanCode[ScanCode[\"KeyM\"] = 22] = \"KeyM\";\n    ScanCode[ScanCode[\"KeyN\"] = 23] = \"KeyN\";\n    ScanCode[ScanCode[\"KeyO\"] = 24] = \"KeyO\";\n    ScanCode[ScanCode[\"KeyP\"] = 25] = \"KeyP\";\n    ScanCode[ScanCode[\"KeyQ\"] = 26] = \"KeyQ\";\n    ScanCode[ScanCode[\"KeyR\"] = 27] = \"KeyR\";\n    ScanCode[ScanCode[\"KeyS\"] = 28] = \"KeyS\";\n    ScanCode[ScanCode[\"KeyT\"] = 29] = \"KeyT\";\n    ScanCode[ScanCode[\"KeyU\"] = 30] = \"KeyU\";\n    ScanCode[ScanCode[\"KeyV\"] = 31] = \"KeyV\";\n    ScanCode[ScanCode[\"KeyW\"] = 32] = \"KeyW\";\n    ScanCode[ScanCode[\"KeyX\"] = 33] = \"KeyX\";\n    ScanCode[ScanCode[\"KeyY\"] = 34] = \"KeyY\";\n    ScanCode[ScanCode[\"KeyZ\"] = 35] = \"KeyZ\";\n    ScanCode[ScanCode[\"Digit1\"] = 36] = \"Digit1\";\n    ScanCode[ScanCode[\"Digit2\"] = 37] = \"Digit2\";\n    ScanCode[ScanCode[\"Digit3\"] = 38] = \"Digit3\";\n    ScanCode[ScanCode[\"Digit4\"] = 39] = \"Digit4\";\n    ScanCode[ScanCode[\"Digit5\"] = 40] = \"Digit5\";\n    ScanCode[ScanCode[\"Digit6\"] = 41] = \"Digit6\";\n    ScanCode[ScanCode[\"Digit7\"] = 42] = \"Digit7\";\n    ScanCode[ScanCode[\"Digit8\"] = 43] = \"Digit8\";\n    ScanCode[ScanCode[\"Digit9\"] = 44] = \"Digit9\";\n    ScanCode[ScanCode[\"Digit0\"] = 45] = \"Digit0\";\n    ScanCode[ScanCode[\"Enter\"] = 46] = \"Enter\";\n    ScanCode[ScanCode[\"Escape\"] = 47] = \"Escape\";\n    ScanCode[ScanCode[\"Backspace\"] = 48] = \"Backspace\";\n    ScanCode[ScanCode[\"Tab\"] = 49] = \"Tab\";\n    ScanCode[ScanCode[\"Space\"] = 50] = \"Space\";\n    ScanCode[ScanCode[\"Minus\"] = 51] = \"Minus\";\n    ScanCode[ScanCode[\"Equal\"] = 52] = \"Equal\";\n    ScanCode[ScanCode[\"BracketLeft\"] = 53] = \"BracketLeft\";\n    ScanCode[ScanCode[\"BracketRight\"] = 54] = \"BracketRight\";\n    ScanCode[ScanCode[\"Backslash\"] = 55] = \"Backslash\";\n    ScanCode[ScanCode[\"IntlHash\"] = 56] = \"IntlHash\";\n    ScanCode[ScanCode[\"Semicolon\"] = 57] = \"Semicolon\";\n    ScanCode[ScanCode[\"Quote\"] = 58] = \"Quote\";\n    ScanCode[ScanCode[\"Backquote\"] = 59] = \"Backquote\";\n    ScanCode[ScanCode[\"Comma\"] = 60] = \"Comma\";\n    ScanCode[ScanCode[\"Period\"] = 61] = \"Period\";\n    ScanCode[ScanCode[\"Slash\"] = 62] = \"Slash\";\n    ScanCode[ScanCode[\"CapsLock\"] = 63] = \"CapsLock\";\n    ScanCode[ScanCode[\"F1\"] = 64] = \"F1\";\n    ScanCode[ScanCode[\"F2\"] = 65] = \"F2\";\n    ScanCode[ScanCode[\"F3\"] = 66] = \"F3\";\n    ScanCode[ScanCode[\"F4\"] = 67] = \"F4\";\n    ScanCode[ScanCode[\"F5\"] = 68] = \"F5\";\n    ScanCode[ScanCode[\"F6\"] = 69] = \"F6\";\n    ScanCode[ScanCode[\"F7\"] = 70] = \"F7\";\n    ScanCode[ScanCode[\"F8\"] = 71] = \"F8\";\n    ScanCode[ScanCode[\"F9\"] = 72] = \"F9\";\n    ScanCode[ScanCode[\"F10\"] = 73] = \"F10\";\n    ScanCode[ScanCode[\"F11\"] = 74] = \"F11\";\n    ScanCode[ScanCode[\"F12\"] = 75] = \"F12\";\n    ScanCode[ScanCode[\"PrintScreen\"] = 76] = \"PrintScreen\";\n    ScanCode[ScanCode[\"ScrollLock\"] = 77] = \"ScrollLock\";\n    ScanCode[ScanCode[\"Pause\"] = 78] = \"Pause\";\n    ScanCode[ScanCode[\"Insert\"] = 79] = \"Insert\";\n    ScanCode[ScanCode[\"Home\"] = 80] = \"Home\";\n    ScanCode[ScanCode[\"PageUp\"] = 81] = \"PageUp\";\n    ScanCode[ScanCode[\"Delete\"] = 82] = \"Delete\";\n    ScanCode[ScanCode[\"End\"] = 83] = \"End\";\n    ScanCode[ScanCode[\"PageDown\"] = 84] = \"PageDown\";\n    ScanCode[ScanCode[\"ArrowRight\"] = 85] = \"ArrowRight\";\n    ScanCode[ScanCode[\"ArrowLeft\"] = 86] = \"ArrowLeft\";\n    ScanCode[ScanCode[\"ArrowDown\"] = 87] = \"ArrowDown\";\n    ScanCode[ScanCode[\"ArrowUp\"] = 88] = \"ArrowUp\";\n    ScanCode[ScanCode[\"NumLock\"] = 89] = \"NumLock\";\n    ScanCode[ScanCode[\"NumpadDivide\"] = 90] = \"NumpadDivide\";\n    ScanCode[ScanCode[\"NumpadMultiply\"] = 91] = \"NumpadMultiply\";\n    ScanCode[ScanCode[\"NumpadSubtract\"] = 92] = \"NumpadSubtract\";\n    ScanCode[ScanCode[\"NumpadAdd\"] = 93] = \"NumpadAdd\";\n    ScanCode[ScanCode[\"NumpadEnter\"] = 94] = \"NumpadEnter\";\n    ScanCode[ScanCode[\"Numpad1\"] = 95] = \"Numpad1\";\n    ScanCode[ScanCode[\"Numpad2\"] = 96] = \"Numpad2\";\n    ScanCode[ScanCode[\"Numpad3\"] = 97] = \"Numpad3\";\n    ScanCode[ScanCode[\"Numpad4\"] = 98] = \"Numpad4\";\n    ScanCode[ScanCode[\"Numpad5\"] = 99] = \"Numpad5\";\n    ScanCode[ScanCode[\"Numpad6\"] = 100] = \"Numpad6\";\n    ScanCode[ScanCode[\"Numpad7\"] = 101] = \"Numpad7\";\n    ScanCode[ScanCode[\"Numpad8\"] = 102] = \"Numpad8\";\n    ScanCode[ScanCode[\"Numpad9\"] = 103] = \"Numpad9\";\n    ScanCode[ScanCode[\"Numpad0\"] = 104] = \"Numpad0\";\n    ScanCode[ScanCode[\"NumpadDecimal\"] = 105] = \"NumpadDecimal\";\n    ScanCode[ScanCode[\"IntlBackslash\"] = 106] = \"IntlBackslash\";\n    ScanCode[ScanCode[\"ContextMenu\"] = 107] = \"ContextMenu\";\n    ScanCode[ScanCode[\"Power\"] = 108] = \"Power\";\n    ScanCode[ScanCode[\"NumpadEqual\"] = 109] = \"NumpadEqual\";\n    ScanCode[ScanCode[\"F13\"] = 110] = \"F13\";\n    ScanCode[ScanCode[\"F14\"] = 111] = \"F14\";\n    ScanCode[ScanCode[\"F15\"] = 112] = \"F15\";\n    ScanCode[ScanCode[\"F16\"] = 113] = \"F16\";\n    ScanCode[ScanCode[\"F17\"] = 114] = \"F17\";\n    ScanCode[ScanCode[\"F18\"] = 115] = \"F18\";\n    ScanCode[ScanCode[\"F19\"] = 116] = \"F19\";\n    ScanCode[ScanCode[\"F20\"] = 117] = \"F20\";\n    ScanCode[ScanCode[\"F21\"] = 118] = \"F21\";\n    ScanCode[ScanCode[\"F22\"] = 119] = \"F22\";\n    ScanCode[ScanCode[\"F23\"] = 120] = \"F23\";\n    ScanCode[ScanCode[\"F24\"] = 121] = \"F24\";\n    ScanCode[ScanCode[\"Open\"] = 122] = \"Open\";\n    ScanCode[ScanCode[\"Help\"] = 123] = \"Help\";\n    ScanCode[ScanCode[\"Select\"] = 124] = \"Select\";\n    ScanCode[ScanCode[\"Again\"] = 125] = \"Again\";\n    ScanCode[ScanCode[\"Undo\"] = 126] = \"Undo\";\n    ScanCode[ScanCode[\"Cut\"] = 127] = \"Cut\";\n    ScanCode[ScanCode[\"Copy\"] = 128] = \"Copy\";\n    ScanCode[ScanCode[\"Paste\"] = 129] = \"Paste\";\n    ScanCode[ScanCode[\"Find\"] = 130] = \"Find\";\n    ScanCode[ScanCode[\"AudioVolumeMute\"] = 131] = \"AudioVolumeMute\";\n    ScanCode[ScanCode[\"AudioVolumeUp\"] = 132] = \"AudioVolumeUp\";\n    ScanCode[ScanCode[\"AudioVolumeDown\"] = 133] = \"AudioVolumeDown\";\n    ScanCode[ScanCode[\"NumpadComma\"] = 134] = \"NumpadComma\";\n    ScanCode[ScanCode[\"IntlRo\"] = 135] = \"IntlRo\";\n    ScanCode[ScanCode[\"KanaMode\"] = 136] = \"KanaMode\";\n    ScanCode[ScanCode[\"IntlYen\"] = 137] = \"IntlYen\";\n    ScanCode[ScanCode[\"Convert\"] = 138] = \"Convert\";\n    ScanCode[ScanCode[\"NonConvert\"] = 139] = \"NonConvert\";\n    ScanCode[ScanCode[\"Lang1\"] = 140] = \"Lang1\";\n    ScanCode[ScanCode[\"Lang2\"] = 141] = \"Lang2\";\n    ScanCode[ScanCode[\"Lang3\"] = 142] = \"Lang3\";\n    ScanCode[ScanCode[\"Lang4\"] = 143] = \"Lang4\";\n    ScanCode[ScanCode[\"Lang5\"] = 144] = \"Lang5\";\n    ScanCode[ScanCode[\"Abort\"] = 145] = \"Abort\";\n    ScanCode[ScanCode[\"Props\"] = 146] = \"Props\";\n    ScanCode[ScanCode[\"NumpadParenLeft\"] = 147] = \"NumpadParenLeft\";\n    ScanCode[ScanCode[\"NumpadParenRight\"] = 148] = \"NumpadParenRight\";\n    ScanCode[ScanCode[\"NumpadBackspace\"] = 149] = \"NumpadBackspace\";\n    ScanCode[ScanCode[\"NumpadMemoryStore\"] = 150] = \"NumpadMemoryStore\";\n    ScanCode[ScanCode[\"NumpadMemoryRecall\"] = 151] = \"NumpadMemoryRecall\";\n    ScanCode[ScanCode[\"NumpadMemoryClear\"] = 152] = \"NumpadMemoryClear\";\n    ScanCode[ScanCode[\"NumpadMemoryAdd\"] = 153] = \"NumpadMemoryAdd\";\n    ScanCode[ScanCode[\"NumpadMemorySubtract\"] = 154] = \"NumpadMemorySubtract\";\n    ScanCode[ScanCode[\"NumpadClear\"] = 155] = \"NumpadClear\";\n    ScanCode[ScanCode[\"NumpadClearEntry\"] = 156] = \"NumpadClearEntry\";\n    ScanCode[ScanCode[\"ControlLeft\"] = 157] = \"ControlLeft\";\n    ScanCode[ScanCode[\"ShiftLeft\"] = 158] = \"ShiftLeft\";\n    ScanCode[ScanCode[\"AltLeft\"] = 159] = \"AltLeft\";\n    ScanCode[ScanCode[\"MetaLeft\"] = 160] = \"MetaLeft\";\n    ScanCode[ScanCode[\"ControlRight\"] = 161] = \"ControlRight\";\n    ScanCode[ScanCode[\"ShiftRight\"] = 162] = \"ShiftRight\";\n    ScanCode[ScanCode[\"AltRight\"] = 163] = \"AltRight\";\n    ScanCode[ScanCode[\"MetaRight\"] = 164] = \"MetaRight\";\n    ScanCode[ScanCode[\"BrightnessUp\"] = 165] = \"BrightnessUp\";\n    ScanCode[ScanCode[\"BrightnessDown\"] = 166] = \"BrightnessDown\";\n    ScanCode[ScanCode[\"MediaPlay\"] = 167] = \"MediaPlay\";\n    ScanCode[ScanCode[\"MediaRecord\"] = 168] = \"MediaRecord\";\n    ScanCode[ScanCode[\"MediaFastForward\"] = 169] = \"MediaFastForward\";\n    ScanCode[ScanCode[\"MediaRewind\"] = 170] = \"MediaRewind\";\n    ScanCode[ScanCode[\"MediaTrackNext\"] = 171] = \"MediaTrackNext\";\n    ScanCode[ScanCode[\"MediaTrackPrevious\"] = 172] = \"MediaTrackPrevious\";\n    ScanCode[ScanCode[\"MediaStop\"] = 173] = \"MediaStop\";\n    ScanCode[ScanCode[\"Eject\"] = 174] = \"Eject\";\n    ScanCode[ScanCode[\"MediaPlayPause\"] = 175] = \"MediaPlayPause\";\n    ScanCode[ScanCode[\"MediaSelect\"] = 176] = \"MediaSelect\";\n    ScanCode[ScanCode[\"LaunchMail\"] = 177] = \"LaunchMail\";\n    ScanCode[ScanCode[\"LaunchApp2\"] = 178] = \"LaunchApp2\";\n    ScanCode[ScanCode[\"LaunchApp1\"] = 179] = \"LaunchApp1\";\n    ScanCode[ScanCode[\"SelectTask\"] = 180] = \"SelectTask\";\n    ScanCode[ScanCode[\"LaunchScreenSaver\"] = 181] = \"LaunchScreenSaver\";\n    ScanCode[ScanCode[\"BrowserSearch\"] = 182] = \"BrowserSearch\";\n    ScanCode[ScanCode[\"BrowserHome\"] = 183] = \"BrowserHome\";\n    ScanCode[ScanCode[\"BrowserBack\"] = 184] = \"BrowserBack\";\n    ScanCode[ScanCode[\"BrowserForward\"] = 185] = \"BrowserForward\";\n    ScanCode[ScanCode[\"BrowserStop\"] = 186] = \"BrowserStop\";\n    ScanCode[ScanCode[\"BrowserRefresh\"] = 187] = \"BrowserRefresh\";\n    ScanCode[ScanCode[\"BrowserFavorites\"] = 188] = \"BrowserFavorites\";\n    ScanCode[ScanCode[\"ZoomToggle\"] = 189] = \"ZoomToggle\";\n    ScanCode[ScanCode[\"MailReply\"] = 190] = \"MailReply\";\n    ScanCode[ScanCode[\"MailForward\"] = 191] = \"MailForward\";\n    ScanCode[ScanCode[\"MailSend\"] = 192] = \"MailSend\";\n    ScanCode[ScanCode[\"MAX_VALUE\"] = 193] = \"MAX_VALUE\";\n})(ScanCode || (ScanCode = {}));\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n    }\n}\nconst uiMap = ( new KeyCodeStrMap());\nconst userSettingsUSMap = ( new KeyCodeStrMap());\nconst userSettingsGeneralMap = ( new KeyCodeStrMap());\nconst EVENT_KEY_CODE_MAP = ( new Array(230));\nconst NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\nconst ScanCodeUtils = {\n    lowerCaseToEnum: (scanCode) => scanCodeLowerCaseStrToInt[scanCode] || ScanCode.None,\n    toEnum: (scanCode) => scanCodeStrToInt[scanCode] || ScanCode.None,\n    toString: (scanCode) => scanCodeIntToStr[scanCode] || 'None'\n};\nconst IMMUTABLE_CODE_TO_KEY_CODE = [];\nconst IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= ScanCode.MAX_VALUE; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = KeyCode.DependsOnKbLayout;\n}\nfor (let i = 0; i <= KeyCode.MAX_VALUE; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = ScanCode.DependsOnKbLayout;\n}\n(function () {\n    const empty = '';\n    const mappings = [\n        [1, ScanCode.None, 'None', KeyCode.Unknown, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, ScanCode.Hyper, 'Hyper', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Super, 'Super', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Fn, 'Fn', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.FnLock, 'FnLock', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Suspend, 'Suspend', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Resume, 'Resume', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Turbo, 'Turbo', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Sleep, 'Sleep', KeyCode.Unknown, empty, 0, 'VK_SLEEP', empty, empty],\n        [1, ScanCode.WakeUp, 'WakeUp', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [0, ScanCode.KeyA, 'KeyA', KeyCode.KeyA, 'A', 65, 'VK_A', empty, empty],\n        [0, ScanCode.KeyB, 'KeyB', KeyCode.KeyB, 'B', 66, 'VK_B', empty, empty],\n        [0, ScanCode.KeyC, 'KeyC', KeyCode.KeyC, 'C', 67, 'VK_C', empty, empty],\n        [0, ScanCode.KeyD, 'KeyD', KeyCode.KeyD, 'D', 68, 'VK_D', empty, empty],\n        [0, ScanCode.KeyE, 'KeyE', KeyCode.KeyE, 'E', 69, 'VK_E', empty, empty],\n        [0, ScanCode.KeyF, 'KeyF', KeyCode.KeyF, 'F', 70, 'VK_F', empty, empty],\n        [0, ScanCode.KeyG, 'KeyG', KeyCode.KeyG, 'G', 71, 'VK_G', empty, empty],\n        [0, ScanCode.KeyH, 'KeyH', KeyCode.KeyH, 'H', 72, 'VK_H', empty, empty],\n        [0, ScanCode.KeyI, 'KeyI', KeyCode.KeyI, 'I', 73, 'VK_I', empty, empty],\n        [0, ScanCode.KeyJ, 'KeyJ', KeyCode.KeyJ, 'J', 74, 'VK_J', empty, empty],\n        [0, ScanCode.KeyK, 'KeyK', KeyCode.KeyK, 'K', 75, 'VK_K', empty, empty],\n        [0, ScanCode.KeyL, 'KeyL', KeyCode.KeyL, 'L', 76, 'VK_L', empty, empty],\n        [0, ScanCode.KeyM, 'KeyM', KeyCode.KeyM, 'M', 77, 'VK_M', empty, empty],\n        [0, ScanCode.KeyN, 'KeyN', KeyCode.KeyN, 'N', 78, 'VK_N', empty, empty],\n        [0, ScanCode.KeyO, 'KeyO', KeyCode.KeyO, 'O', 79, 'VK_O', empty, empty],\n        [0, ScanCode.KeyP, 'KeyP', KeyCode.KeyP, 'P', 80, 'VK_P', empty, empty],\n        [0, ScanCode.KeyQ, 'KeyQ', KeyCode.KeyQ, 'Q', 81, 'VK_Q', empty, empty],\n        [0, ScanCode.KeyR, 'KeyR', KeyCode.KeyR, 'R', 82, 'VK_R', empty, empty],\n        [0, ScanCode.KeyS, 'KeyS', KeyCode.KeyS, 'S', 83, 'VK_S', empty, empty],\n        [0, ScanCode.KeyT, 'KeyT', KeyCode.KeyT, 'T', 84, 'VK_T', empty, empty],\n        [0, ScanCode.KeyU, 'KeyU', KeyCode.KeyU, 'U', 85, 'VK_U', empty, empty],\n        [0, ScanCode.KeyV, 'KeyV', KeyCode.KeyV, 'V', 86, 'VK_V', empty, empty],\n        [0, ScanCode.KeyW, 'KeyW', KeyCode.KeyW, 'W', 87, 'VK_W', empty, empty],\n        [0, ScanCode.KeyX, 'KeyX', KeyCode.KeyX, 'X', 88, 'VK_X', empty, empty],\n        [0, ScanCode.KeyY, 'KeyY', KeyCode.KeyY, 'Y', 89, 'VK_Y', empty, empty],\n        [0, ScanCode.KeyZ, 'KeyZ', KeyCode.KeyZ, 'Z', 90, 'VK_Z', empty, empty],\n        [0, ScanCode.Digit1, 'Digit1', KeyCode.Digit1, '1', 49, 'VK_1', empty, empty],\n        [0, ScanCode.Digit2, 'Digit2', KeyCode.Digit2, '2', 50, 'VK_2', empty, empty],\n        [0, ScanCode.Digit3, 'Digit3', KeyCode.Digit3, '3', 51, 'VK_3', empty, empty],\n        [0, ScanCode.Digit4, 'Digit4', KeyCode.Digit4, '4', 52, 'VK_4', empty, empty],\n        [0, ScanCode.Digit5, 'Digit5', KeyCode.Digit5, '5', 53, 'VK_5', empty, empty],\n        [0, ScanCode.Digit6, 'Digit6', KeyCode.Digit6, '6', 54, 'VK_6', empty, empty],\n        [0, ScanCode.Digit7, 'Digit7', KeyCode.Digit7, '7', 55, 'VK_7', empty, empty],\n        [0, ScanCode.Digit8, 'Digit8', KeyCode.Digit8, '8', 56, 'VK_8', empty, empty],\n        [0, ScanCode.Digit9, 'Digit9', KeyCode.Digit9, '9', 57, 'VK_9', empty, empty],\n        [0, ScanCode.Digit0, 'Digit0', KeyCode.Digit0, '0', 48, 'VK_0', empty, empty],\n        [1, ScanCode.Enter, 'Enter', KeyCode.Enter, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, ScanCode.Escape, 'Escape', KeyCode.Escape, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, ScanCode.Backspace, 'Backspace', KeyCode.Backspace, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, ScanCode.Tab, 'Tab', KeyCode.Tab, 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, ScanCode.Space, 'Space', KeyCode.Space, 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, ScanCode.Minus, 'Minus', KeyCode.Minus, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, ScanCode.Equal, 'Equal', KeyCode.Equal, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, ScanCode.BracketLeft, 'BracketLeft', KeyCode.BracketLeft, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, ScanCode.BracketRight, 'BracketRight', KeyCode.BracketRight, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, ScanCode.Backslash, 'Backslash', KeyCode.Backslash, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, ScanCode.IntlHash, 'IntlHash', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [0, ScanCode.Semicolon, 'Semicolon', KeyCode.Semicolon, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, ScanCode.Quote, 'Quote', KeyCode.Quote, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, ScanCode.Backquote, 'Backquote', KeyCode.Backquote, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, ScanCode.Comma, 'Comma', KeyCode.Comma, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, ScanCode.Period, 'Period', KeyCode.Period, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, ScanCode.Slash, 'Slash', KeyCode.Slash, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, ScanCode.CapsLock, 'CapsLock', KeyCode.CapsLock, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, ScanCode.F1, 'F1', KeyCode.F1, 'F1', 112, 'VK_F1', empty, empty],\n        [1, ScanCode.F2, 'F2', KeyCode.F2, 'F2', 113, 'VK_F2', empty, empty],\n        [1, ScanCode.F3, 'F3', KeyCode.F3, 'F3', 114, 'VK_F3', empty, empty],\n        [1, ScanCode.F4, 'F4', KeyCode.F4, 'F4', 115, 'VK_F4', empty, empty],\n        [1, ScanCode.F5, 'F5', KeyCode.F5, 'F5', 116, 'VK_F5', empty, empty],\n        [1, ScanCode.F6, 'F6', KeyCode.F6, 'F6', 117, 'VK_F6', empty, empty],\n        [1, ScanCode.F7, 'F7', KeyCode.F7, 'F7', 118, 'VK_F7', empty, empty],\n        [1, ScanCode.F8, 'F8', KeyCode.F8, 'F8', 119, 'VK_F8', empty, empty],\n        [1, ScanCode.F9, 'F9', KeyCode.F9, 'F9', 120, 'VK_F9', empty, empty],\n        [1, ScanCode.F10, 'F10', KeyCode.F10, 'F10', 121, 'VK_F10', empty, empty],\n        [1, ScanCode.F11, 'F11', KeyCode.F11, 'F11', 122, 'VK_F11', empty, empty],\n        [1, ScanCode.F12, 'F12', KeyCode.F12, 'F12', 123, 'VK_F12', empty, empty],\n        [1, ScanCode.PrintScreen, 'PrintScreen', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.ScrollLock, 'ScrollLock', KeyCode.ScrollLock, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, ScanCode.Pause, 'Pause', KeyCode.PauseBreak, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, ScanCode.Insert, 'Insert', KeyCode.Insert, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, ScanCode.Home, 'Home', KeyCode.Home, 'Home', 36, 'VK_HOME', empty, empty],\n        [1, ScanCode.PageUp, 'PageUp', KeyCode.PageUp, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, ScanCode.Delete, 'Delete', KeyCode.Delete, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, ScanCode.End, 'End', KeyCode.End, 'End', 35, 'VK_END', empty, empty],\n        [1, ScanCode.PageDown, 'PageDown', KeyCode.PageDown, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, ScanCode.ArrowRight, 'ArrowRight', KeyCode.RightArrow, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, ScanCode.ArrowLeft, 'ArrowLeft', KeyCode.LeftArrow, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, ScanCode.ArrowDown, 'ArrowDown', KeyCode.DownArrow, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, ScanCode.ArrowUp, 'ArrowUp', KeyCode.UpArrow, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, ScanCode.NumLock, 'NumLock', KeyCode.NumLock, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, ScanCode.NumpadDivide, 'NumpadDivide', KeyCode.NumpadDivide, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, ScanCode.NumpadMultiply, 'NumpadMultiply', KeyCode.NumpadMultiply, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, ScanCode.NumpadSubtract, 'NumpadSubtract', KeyCode.NumpadSubtract, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, ScanCode.NumpadAdd, 'NumpadAdd', KeyCode.NumpadAdd, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, ScanCode.NumpadEnter, 'NumpadEnter', KeyCode.Enter, empty, 0, empty, empty, empty],\n        [1, ScanCode.Numpad1, 'Numpad1', KeyCode.Numpad1, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, ScanCode.Numpad2, 'Numpad2', KeyCode.Numpad2, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, ScanCode.Numpad3, 'Numpad3', KeyCode.Numpad3, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, ScanCode.Numpad4, 'Numpad4', KeyCode.Numpad4, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, ScanCode.Numpad5, 'Numpad5', KeyCode.Numpad5, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, ScanCode.Numpad6, 'Numpad6', KeyCode.Numpad6, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, ScanCode.Numpad7, 'Numpad7', KeyCode.Numpad7, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, ScanCode.Numpad8, 'Numpad8', KeyCode.Numpad8, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, ScanCode.Numpad9, 'Numpad9', KeyCode.Numpad9, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, ScanCode.Numpad0, 'Numpad0', KeyCode.Numpad0, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, ScanCode.NumpadDecimal, 'NumpadDecimal', KeyCode.NumpadDecimal, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, ScanCode.IntlBackslash, 'IntlBackslash', KeyCode.IntlBackslash, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, ScanCode.ContextMenu, 'ContextMenu', KeyCode.ContextMenu, 'ContextMenu', 93, empty, empty, empty],\n        [1, ScanCode.Power, 'Power', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadEqual, 'NumpadEqual', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.F13, 'F13', KeyCode.F13, 'F13', 124, 'VK_F13', empty, empty],\n        [1, ScanCode.F14, 'F14', KeyCode.F14, 'F14', 125, 'VK_F14', empty, empty],\n        [1, ScanCode.F15, 'F15', KeyCode.F15, 'F15', 126, 'VK_F15', empty, empty],\n        [1, ScanCode.F16, 'F16', KeyCode.F16, 'F16', 127, 'VK_F16', empty, empty],\n        [1, ScanCode.F17, 'F17', KeyCode.F17, 'F17', 128, 'VK_F17', empty, empty],\n        [1, ScanCode.F18, 'F18', KeyCode.F18, 'F18', 129, 'VK_F18', empty, empty],\n        [1, ScanCode.F19, 'F19', KeyCode.F19, 'F19', 130, 'VK_F19', empty, empty],\n        [1, ScanCode.F20, 'F20', KeyCode.F20, 'F20', 131, 'VK_F20', empty, empty],\n        [1, ScanCode.F21, 'F21', KeyCode.F21, 'F21', 132, 'VK_F21', empty, empty],\n        [1, ScanCode.F22, 'F22', KeyCode.F22, 'F22', 133, 'VK_F22', empty, empty],\n        [1, ScanCode.F23, 'F23', KeyCode.F23, 'F23', 134, 'VK_F23', empty, empty],\n        [1, ScanCode.F24, 'F24', KeyCode.F24, 'F24', 135, 'VK_F24', empty, empty],\n        [1, ScanCode.Open, 'Open', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Help, 'Help', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Select, 'Select', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Again, 'Again', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Undo, 'Undo', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Cut, 'Cut', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Copy, 'Copy', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Paste, 'Paste', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Find, 'Find', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.AudioVolumeMute, 'AudioVolumeMute', KeyCode.AudioVolumeMute, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, ScanCode.AudioVolumeUp, 'AudioVolumeUp', KeyCode.AudioVolumeUp, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, ScanCode.AudioVolumeDown, 'AudioVolumeDown', KeyCode.AudioVolumeDown, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, ScanCode.NumpadComma, 'NumpadComma', KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, ScanCode.IntlRo, 'IntlRo', KeyCode.ABNT_C1, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, ScanCode.KanaMode, 'KanaMode', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [0, ScanCode.IntlYen, 'IntlYen', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Convert, 'Convert', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NonConvert, 'NonConvert', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang1, 'Lang1', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang2, 'Lang2', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang3, 'Lang3', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang4, 'Lang4', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang5, 'Lang5', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Abort, 'Abort', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Props, 'Props', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadParenLeft, 'NumpadParenLeft', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadParenRight, 'NumpadParenRight', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadBackspace, 'NumpadBackspace', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemoryStore, 'NumpadMemoryStore', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemoryRecall, 'NumpadMemoryRecall', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemoryClear, 'NumpadMemoryClear', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemoryAdd, 'NumpadMemoryAdd', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemorySubtract, 'NumpadMemorySubtract', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadClear, 'NumpadClear', KeyCode.Clear, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, ScanCode.NumpadClearEntry, 'NumpadClearEntry', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Ctrl, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Shift, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Alt, 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Meta, 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, ScanCode.ControlLeft, 'ControlLeft', KeyCode.Ctrl, empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, ScanCode.ShiftLeft, 'ShiftLeft', KeyCode.Shift, empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, ScanCode.AltLeft, 'AltLeft', KeyCode.Alt, empty, 0, 'VK_LMENU', empty, empty],\n        [1, ScanCode.MetaLeft, 'MetaLeft', KeyCode.Meta, empty, 0, 'VK_LWIN', empty, empty],\n        [1, ScanCode.ControlRight, 'ControlRight', KeyCode.Ctrl, empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, ScanCode.ShiftRight, 'ShiftRight', KeyCode.Shift, empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, ScanCode.AltRight, 'AltRight', KeyCode.Alt, empty, 0, 'VK_RMENU', empty, empty],\n        [1, ScanCode.MetaRight, 'MetaRight', KeyCode.Meta, empty, 0, 'VK_RWIN', empty, empty],\n        [1, ScanCode.BrightnessUp, 'BrightnessUp', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.BrightnessDown, 'BrightnessDown', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaPlay, 'MediaPlay', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaRecord, 'MediaRecord', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaFastForward, 'MediaFastForward', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaRewind, 'MediaRewind', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaTrackNext, 'MediaTrackNext', KeyCode.MediaTrackNext, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, ScanCode.MediaTrackPrevious, 'MediaTrackPrevious', KeyCode.MediaTrackPrevious, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, ScanCode.MediaStop, 'MediaStop', KeyCode.MediaStop, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, ScanCode.Eject, 'Eject', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaPlayPause, 'MediaPlayPause', KeyCode.MediaPlayPause, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, ScanCode.MediaSelect, 'MediaSelect', KeyCode.LaunchMediaPlayer, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, ScanCode.LaunchMail, 'LaunchMail', KeyCode.LaunchMail, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, ScanCode.LaunchApp2, 'LaunchApp2', KeyCode.LaunchApp2, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, ScanCode.LaunchApp1, 'LaunchApp1', KeyCode.Unknown, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, ScanCode.SelectTask, 'SelectTask', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.LaunchScreenSaver, 'LaunchScreenSaver', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.BrowserSearch, 'BrowserSearch', KeyCode.BrowserSearch, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, ScanCode.BrowserHome, 'BrowserHome', KeyCode.BrowserHome, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, ScanCode.BrowserBack, 'BrowserBack', KeyCode.BrowserBack, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, ScanCode.BrowserForward, 'BrowserForward', KeyCode.BrowserForward, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, ScanCode.BrowserStop, 'BrowserStop', KeyCode.Unknown, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, ScanCode.BrowserRefresh, 'BrowserRefresh', KeyCode.Unknown, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, ScanCode.BrowserFavorites, 'BrowserFavorites', KeyCode.Unknown, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, ScanCode.ZoomToggle, 'ZoomToggle', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MailReply, 'MailReply', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MailForward, 'MailForward', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MailSend, 'MailSend', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.None, empty, KeyCode.KEY_IN_COMPOSITION, 'KeyInComposition', 229, empty, empty, empty],\n        [1, ScanCode.None, empty, KeyCode.ABNT_C2, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.OEM_8, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_KANA', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HANGUL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_JUNJA', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_FINAL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HANJA', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_KANJI', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CONVERT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_SELECT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PRINT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HELP', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_APPS', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PACKET', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ATTN', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CRSEL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EXSEL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EREOF', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PLAY', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ZOOM', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_NONAME', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PA1', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== KeyCode.Unknown)\n                    && (keyCode !== KeyCode.Enter)\n                    && (keyCode !== KeyCode.Ctrl)\n                    && (keyCode !== KeyCode.Shift)\n                    && (keyCode !== KeyCode.Alt)\n                    && (keyCode !== KeyCode.Meta)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw ( new Error(\n                    `String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`\n                ));\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    IMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Enter] = ScanCode.Enter;\n})();\nvar KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= KeyCode.Numpad0 && keyCode <= KeyCode.NumpadDivide) {\n            return null;\n        }\n        switch (keyCode) {\n            case KeyCode.UpArrow:\n                return 'Up';\n            case KeyCode.DownArrow:\n                return 'Down';\n            case KeyCode.LeftArrow:\n                return 'Left';\n            case KeyCode.RightArrow:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nvar KeyMod$1;\n(function (KeyMod) {\n    KeyMod[KeyMod[\"CtrlCmd\"] = 2048] = \"CtrlCmd\";\n    KeyMod[KeyMod[\"Shift\"] = 1024] = \"Shift\";\n    KeyMod[KeyMod[\"Alt\"] = 512] = \"Alt\";\n    KeyMod[KeyMod[\"WinCtrl\"] = 256] = \"WinCtrl\";\n})(KeyMod$1 || (KeyMod$1 = {}));\nfunction KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n\nexport { EVENT_KEY_CODE_MAP, IMMUTABLE_CODE_TO_KEY_CODE, IMMUTABLE_KEY_CODE_TO_CODE, KeyChord, KeyCode, KeyCodeUtils, KeyMod$1 as KeyMod, NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE, ScanCode, ScanCodeUtils };\n","\n\nvar MarshalledId;\n(function (MarshalledId) {\n    MarshalledId[MarshalledId[\"Uri\"] = 1] = \"Uri\";\n    MarshalledId[MarshalledId[\"Regexp\"] = 2] = \"Regexp\";\n    MarshalledId[MarshalledId[\"ScmResource\"] = 3] = \"ScmResource\";\n    MarshalledId[MarshalledId[\"ScmResourceGroup\"] = 4] = \"ScmResourceGroup\";\n    MarshalledId[MarshalledId[\"ScmProvider\"] = 5] = \"ScmProvider\";\n    MarshalledId[MarshalledId[\"CommentController\"] = 6] = \"CommentController\";\n    MarshalledId[MarshalledId[\"CommentThread\"] = 7] = \"CommentThread\";\n    MarshalledId[MarshalledId[\"CommentThreadInstance\"] = 8] = \"CommentThreadInstance\";\n    MarshalledId[MarshalledId[\"CommentThreadReply\"] = 9] = \"CommentThreadReply\";\n    MarshalledId[MarshalledId[\"CommentNode\"] = 10] = \"CommentNode\";\n    MarshalledId[MarshalledId[\"CommentThreadNode\"] = 11] = \"CommentThreadNode\";\n    MarshalledId[MarshalledId[\"TimelineActionContext\"] = 12] = \"TimelineActionContext\";\n    MarshalledId[MarshalledId[\"NotebookCellActionContext\"] = 13] = \"NotebookCellActionContext\";\n    MarshalledId[MarshalledId[\"NotebookActionContext\"] = 14] = \"NotebookActionContext\";\n    MarshalledId[MarshalledId[\"TerminalContext\"] = 15] = \"TerminalContext\";\n    MarshalledId[MarshalledId[\"TestItemContext\"] = 16] = \"TestItemContext\";\n    MarshalledId[MarshalledId[\"Date\"] = 17] = \"Date\";\n    MarshalledId[MarshalledId[\"TestMessageMenuArgs\"] = 18] = \"TestMessageMenuArgs\";\n    MarshalledId[MarshalledId[\"ChatViewContext\"] = 19] = \"ChatViewContext\";\n    MarshalledId[MarshalledId[\"LanguageModelToolResult\"] = 20] = \"LanguageModelToolResult\";\n    MarshalledId[MarshalledId[\"LanguageModelTextPart\"] = 21] = \"LanguageModelTextPart\";\n    MarshalledId[MarshalledId[\"LanguageModelPromptTsxPart\"] = 22] = \"LanguageModelPromptTsxPart\";\n})(MarshalledId || (MarshalledId = {}));\n\nexport { MarshalledId };\n","\nimport { isWindows, isMacintosh } from './platform.js';\n\nlet safeProcess;\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n    const sandboxProcess = vscodeGlobal.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\nelse {\n    safeProcess = {\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined;  },\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\nconst cwd = safeProcess.cwd;\nconst env = safeProcess.env;\nconst platform = safeProcess.platform;\nconst arch = safeProcess.arch;\n\nexport { arch, cwd, env, platform };\n","\nimport { platform, cwd, env } from './process.js';\n\nconst CHAR_UPPERCASE_A = 65;\nconst CHAR_LOWERCASE_A = 97;\nconst CHAR_UPPERCASE_Z = 90;\nconst CHAR_LOWERCASE_Z = 122;\nconst CHAR_DOT = 46;\nconst CHAR_FORWARD_SLASH = 47;\nconst CHAR_BACKWARD_SLASH = 92;\nconst CHAR_COLON = 58;\nconst CHAR_QUESTION_MARK = 63;\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw ( new ErrorInvalidArgType(name, 'Object', pathObject));\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw ( new ErrorInvalidArgType(name, 'string', value));\n    }\n}\nconst platformIsWin32 = (platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction formatExt(ext) {\n    return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nconst win32 = {\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, `paths[${i}]`);\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = cwd();\n            }\n            else {\n                path = env[`=${resolvedDevice}`] || cwd();\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    let j = 2;\n                    let last = j;\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        last = j;\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            last = j;\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (!isAbsolute && device === undefined && path.includes(':')) {\n            if (tail.length >= 2 &&\n                isWindowsDeviceRoot(tail.charCodeAt(0)) &&\n                tail.charCodeAt(1) === CHAR_COLON) {\n                return `.\\\\${tail}`;\n            }\n            let index = path.indexOf(':');\n            do {\n                if (index === len - 1 || isPathSeparator(path.charCodeAt(index + 1))) {\n                    return `.\\\\${tail}`;\n                }\n            } while ((index = path.indexOf(':', index + 1)) !== -1);\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        if (fromOrig.length !== from.length || toOrig.length !== to.length) {\n            const fromSplit = fromOrig.split('\\\\');\n            const toSplit = toOrig.split('\\\\');\n            if (fromSplit[fromSplit.length - 1] === '') {\n                fromSplit.pop();\n            }\n            if (toSplit[toSplit.length - 1] === '') {\n                toSplit.pop();\n            }\n            const fromLen = fromSplit.length;\n            const toLen = toSplit.length;\n            const length = fromLen < toLen ? fromLen : toLen;\n            let i;\n            for (i = 0; i < length; i++) {\n                if (fromSplit[i].toLowerCase() !== toSplit[i].toLowerCase()) {\n                    break;\n                }\n            }\n            if (i === 0) {\n                return toOrig;\n            }\n            else if (i === length) {\n                if (toLen > length) {\n                    return toSplit.slice(i).join('\\\\');\n                }\n                if (fromLen > length) {\n                    return '..\\\\'.repeat(fromLen - 1 - i) + '..';\n                }\n                return '';\n            }\n            return '..\\\\'.repeat(fromLen - i) + toSplit.slice(i).join('\\\\');\n        }\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return resolvedPath;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPathSeparator(code) ? path : '.';\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return path;\n                        }\n                        if (j !== last) {\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'suffix');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            if (len <= 2) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd$1 = cwd().replace(regexp, '/');\n            return cwd$1.slice(cwd$1.indexOf('/'));\n        };\n    }\n    return () => cwd();\n})();\nconst posix = {\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= 0 && !resolvedAbsolute; i--) {\n            const path = pathSegments[i];\n            validateString(path, `paths[${i}]`);\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        if (!resolvedAbsolute) {\n            const cwd = posixCwd();\n            resolvedPath = `${cwd}/${resolvedPath}`;\n            resolvedAbsolute =\n                cwd.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        const path = [];\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                path.push(arg);\n            }\n        }\n        if (path.length === 0) {\n            return '.';\n        }\n        return posix.normalize(path.join('/'));\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'suffix');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const char = path[i];\n            if (char === '/') {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (char === '.') {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nconst normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nconst isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nconst join = (platformIsWin32 ? win32.join : posix.join);\nconst resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nconst relative = (platformIsWin32 ? win32.relative : posix.relative);\nconst dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nconst basename = (platformIsWin32 ? win32.basename : posix.basename);\nconst extname = (platformIsWin32 ? win32.extname : posix.extname);\nconst parse = (platformIsWin32 ? win32.parse : posix.parse);\nconst sep = (platformIsWin32 ? win32.sep : posix.sep);\n\nexport { basename, dirname, extname, isAbsolute, join, normalize, parse, posix, relative, resolve, sep, win32 };\n","\nimport { CharCode } from './charCode.js';\nimport { MarshalledId } from './marshallingIds.js';\nimport { win32, posix } from './path.js';\nimport { isWindows } from './platform.js';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    if (!ret.scheme && _strict) {\n        throw ( new Error(\n            `[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`\n        ));\n    }\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw ( new Error('[UriError]: Scheme contains illegal characters.'));\n    }\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw ( new Error(\n                    '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character'\n                ));\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw ( new Error(\n                    '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")'\n                ));\n            }\n        }\n    }\n}\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\nfunction _referenceResolution(scheme, path) {\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nclass URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    get fsPath() {\n        return uriToFsPath(this, false);\n    }\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return ( new Uri(scheme, authority, path, query, fragment));\n    }\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return ( new Uri(_empty, _empty, _empty, _empty, _empty));\n        }\n        return ( new Uri(\n            match[2] || _empty,\n            percentDecode(match[4] || _empty),\n            percentDecode(match[5] || _empty),\n            percentDecode(match[7] || _empty),\n            percentDecode(match[9] || _empty),\n            _strict\n        ));\n    }\n    static file(path) {\n        let authority = _empty;\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return ( new Uri('file', authority, path, _empty, _empty));\n    }\n    static from(components, strict) {\n        const result = ( new Uri(\n            components.scheme,\n            components.authority,\n            components.path,\n            components.query,\n            components.fragment,\n            strict\n        ));\n        return result;\n    }\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw ( new Error(`[UriError]: cannot call joinPath on URI without path`));\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = ( new Uri(data));\n            result._formatted = data.external ?? null;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath ?? null : null;\n            return result;\n        }\n    }\n    [Symbol.for('debug.description')]() {\n        return `URI(${( this.toString())})`;\n    }\n}\nfunction isUriComponents(thing) {\n    if (!thing || typeof thing !== 'object') {\n        return false;\n    }\n    return typeof thing.scheme === 'string'\n        && (typeof thing.authority === 'string' || typeof thing.authority === 'undefined')\n        && (typeof thing.path === 'string' || typeof thing.path === 'undefined')\n        && (typeof thing.query === 'string' || typeof thing.query === 'undefined')\n        && (typeof thing.fragment === 'string' || typeof thing.fragment === 'undefined');\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: MarshalledId.Uri\n        };\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\nconst encodeTable = {\n    [CharCode.Colon]: '%3A',\n    [CharCode.Slash]: '%2F',\n    [CharCode.QuestionMark]: '%3F',\n    [CharCode.Hash]: '%23',\n    [CharCode.OpenSquareBracket]: '%5B',\n    [CharCode.CloseSquareBracket]: '%5D',\n    [CharCode.AtSign]: '%40',\n    [CharCode.ExclamationMark]: '%21',\n    [CharCode.DollarSign]: '%24',\n    [CharCode.Ampersand]: '%26',\n    [CharCode.SingleQuote]: '%27',\n    [CharCode.OpenParen]: '%28',\n    [CharCode.CloseParen]: '%29',\n    [CharCode.Asterisk]: '%2A',\n    [CharCode.Plus]: '%2B',\n    [CharCode.Comma]: '%2C',\n    [CharCode.Semicolon]: '%3B',\n    [CharCode.Equals]: '%3D',\n    [CharCode.Space]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        if ((code >= CharCode.a && code <= CharCode.z)\n            || (code >= CharCode.A && code <= CharCode.Z)\n            || (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n            || code === CharCode.Dash\n            || code === CharCode.Period\n            || code === CharCode.Underline\n            || code === CharCode.Tilde\n            || (isPath && code === CharCode.Slash)\n            || (isAuthority && code === CharCode.OpenSquareBracket)\n            || (isAuthority && code === CharCode.CloseSquareBracket)\n            || (isAuthority && code === CharCode.Colon)) {\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === CharCode.Hash || code === CharCode.QuestionMark) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\nfunction uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === CharCode.Slash\n        && (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n        && uri.path.charCodeAt(2) === CharCode.Colon) {\n        if (!keepDriveLetterCasing) {\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        if (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n            const code = path.charCodeAt(1);\n            if (code >= CharCode.A && code <= CharCode.Z) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`;\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n            const code = path.charCodeAt(0);\n            if (code >= CharCode.A && code <= CharCode.Z) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`;\n            }\n        }\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n\nexport { URI, isUriComponents, uriToFsPath };\n","\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n\nvar SelectionDirection;\n(function (SelectionDirection) {\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nclass Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return SelectionDirection.LTR;\n        }\n        return SelectionDirection.RTL;\n    }\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return ( new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn));\n        }\n        return ( new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn));\n    }\n    getPosition() {\n        return ( new Position(this.positionLineNumber, this.positionColumn));\n    }\n    getSelectionStart() {\n        return ( new Position(this.selectionStartLineNumber, this.selectionStartColumn));\n    }\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return ( new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn));\n        }\n        return ( new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn));\n    }\n    static fromPositions(start, end = start) {\n        return ( new Selection(start.lineNumber, start.column, end.lineNumber, end.column));\n    }\n    static fromRange(range, direction) {\n        if (direction === SelectionDirection.LTR) {\n            return ( new Selection(\n                range.startLineNumber,\n                range.startColumn,\n                range.endLineNumber,\n                range.endColumn\n            ));\n        }\n        else {\n            return ( new Selection(\n                range.endLineNumber,\n                range.endColumn,\n                range.startLineNumber,\n                range.startColumn\n            ));\n        }\n    }\n    static liftSelection(sel) {\n        return ( new Selection(\n            sel.selectionStartLineNumber,\n            sel.selectionStartColumn,\n            sel.positionLineNumber,\n            sel.positionColumn\n        ));\n    }\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === SelectionDirection.LTR) {\n            return ( new Selection(startLineNumber, startColumn, endLineNumber, endColumn));\n        }\n        return ( new Selection(endLineNumber, endColumn, startLineNumber, startColumn));\n    }\n}\n\nexport { Selection, SelectionDirection };\n","\nimport { isString } from './types.js';\n\nconst _codiconFontCharacters = Object.create(null);\nfunction register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw ( new Error(`${id} references an unknown codicon: ${fontCharacter}`));\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\nfunction getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\n\nexport { getCodiconFontCharacters, register };\n","\nimport { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\n\nfunction getAllCodicons() {\n    return ( Object.values(Codicon));\n}\nconst codiconsDerived = {\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'),\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left'),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    exportIcon: register('export', 0xebac),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    newLine: register('newline', 0xebea),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    gitFetch: register('git-fetch', 0xec1d),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n};\nconst Codicon = {\n    ...codiconsLibrary,\n    ...codiconsDerived\n};\n\nexport { Codicon, codiconsDerived, getAllCodicons };\n","\nimport { register } from './codiconsUtil.js';\n\nconst codiconsLibrary = {\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    terminalDecorationSuccess: register('terminal-decoration-success', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circleOutline: register('circle-outline', 0xeabc),\n    circle: register('circle', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    terminalDecorationIncomplete: register('terminal-decoration-incomplete', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    diffSidebyside: register('diff-sidebyside', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    compareChanges: register('compare-changes', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    terminalDecorationMark: register('terminal-decoration-mark', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    debugAlt: register('debug-alt', 0xeb91),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    issueClosed: register('issue-closed', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    export: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnknown: register('workspace-unknown', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracket: register('bracket', 0xeb0f),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newline: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    terminalDecorationError: register('terminal-decoration-error', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    blank: register('blank', 0xec03),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapHorizontal: register('map-horizontal', 0xec05),\n    foldHorizontal: register('fold-horizontal', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    mapHorizontalFilled: register('map-horizontal-filled', 0xec06),\n    foldHorizontalFilled: register('fold-horizontal-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    thumbsdownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsupFilled: register('thumbsup-filled', 0xec14),\n    coffee: register('coffee', 0xec15),\n    snake: register('snake', 0xec16),\n    game: register('game', 0xec17),\n    vr: register('vr', 0xec18),\n    chip: register('chip', 0xec19),\n    piano: register('piano', 0xec1a),\n    music: register('music', 0xec1b),\n    micFilled: register('mic-filled', 0xec1c),\n    repoFetch: register('repo-fetch', 0xec1d),\n    copilot: register('copilot', 0xec1e),\n    lightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n    robot: register('robot', 0xec20),\n    sparkleFilled: register('sparkle-filled', 0xec21),\n    diffSingle: register('diff-single', 0xec22),\n    diffMultiple: register('diff-multiple', 0xec23),\n    surroundWith: register('surround-with', 0xec24),\n    share: register('share', 0xec25),\n    gitStash: register('git-stash', 0xec26),\n    gitStashApply: register('git-stash-apply', 0xec27),\n    gitStashPop: register('git-stash-pop', 0xec28),\n    vscode: register('vscode', 0xec29),\n    vscodeInsiders: register('vscode-insiders', 0xec2a),\n    codeOss: register('code-oss', 0xec2b),\n    runCoverage: register('run-coverage', 0xec2c),\n    runAllCoverage: register('run-all-coverage', 0xec2d),\n    coverage: register('coverage', 0xec2e),\n    githubProject: register('github-project', 0xec2f),\n    mapVertical: register('map-vertical', 0xec30),\n    foldVertical: register('fold-vertical', 0xec30),\n    mapVerticalFilled: register('map-vertical-filled', 0xec31),\n    foldVerticalFilled: register('fold-vertical-filled', 0xec31),\n    goToSearch: register('go-to-search', 0xec32),\n    percentage: register('percentage', 0xec33),\n    sortPercentage: register('sort-percentage', 0xec33),\n    attach: register('attach', 0xec34),\n    goToEditingSession: register('go-to-editing-session', 0xec35),\n    editSession: register('edit-session', 0xec36),\n    codeReview: register('code-review', 0xec37),\n    copilotWarning: register('copilot-warning', 0xec38),\n    python: register('python', 0xec39),\n    copilotLarge: register('copilot-large', 0xec3a),\n    copilotWarningLarge: register('copilot-warning-large', 0xec3b),\n    keyboardTab: register('keyboard-tab', 0xec3c),\n    copilotBlocked: register('copilot-blocked', 0xec3d),\n    copilotNotConnected: register('copilot-not-connected', 0xec3e),\n    flag: register('flag', 0xec3f),\n    lightbulbEmpty: register('lightbulb-empty', 0xec40),\n    symbolMethodArrow: register('symbol-method-arrow', 0xec41),\n};\n\nexport { codiconsLibrary };\n","\n\nvar LanguageId;\n(function (LanguageId) {\n    LanguageId[LanguageId[\"Null\"] = 0] = \"Null\";\n    LanguageId[LanguageId[\"PlainText\"] = 1] = \"PlainText\";\n})(LanguageId || (LanguageId = {}));\nvar FontStyle;\n(function (FontStyle) {\n    FontStyle[FontStyle[\"NotSet\"] = -1] = \"NotSet\";\n    FontStyle[FontStyle[\"None\"] = 0] = \"None\";\n    FontStyle[FontStyle[\"Italic\"] = 1] = \"Italic\";\n    FontStyle[FontStyle[\"Bold\"] = 2] = \"Bold\";\n    FontStyle[FontStyle[\"Underline\"] = 4] = \"Underline\";\n    FontStyle[FontStyle[\"Strikethrough\"] = 8] = \"Strikethrough\";\n})(FontStyle || (FontStyle = {}));\nvar ColorId;\n(function (ColorId) {\n    ColorId[ColorId[\"None\"] = 0] = \"None\";\n    ColorId[ColorId[\"DefaultForeground\"] = 1] = \"DefaultForeground\";\n    ColorId[ColorId[\"DefaultBackground\"] = 2] = \"DefaultBackground\";\n})(ColorId || (ColorId = {}));\nvar StandardTokenType;\n(function (StandardTokenType) {\n    StandardTokenType[StandardTokenType[\"Other\"] = 0] = \"Other\";\n    StandardTokenType[StandardTokenType[\"Comment\"] = 1] = \"Comment\";\n    StandardTokenType[StandardTokenType[\"String\"] = 2] = \"String\";\n    StandardTokenType[StandardTokenType[\"RegEx\"] = 3] = \"RegEx\";\n})(StandardTokenType || (StandardTokenType = {}));\nvar MetadataConsts;\n(function (MetadataConsts) {\n    MetadataConsts[MetadataConsts[\"LANGUAGEID_MASK\"] = 255] = \"LANGUAGEID_MASK\";\n    MetadataConsts[MetadataConsts[\"TOKEN_TYPE_MASK\"] = 768] = \"TOKEN_TYPE_MASK\";\n    MetadataConsts[MetadataConsts[\"BALANCED_BRACKETS_MASK\"] = 1024] = \"BALANCED_BRACKETS_MASK\";\n    MetadataConsts[MetadataConsts[\"FONT_STYLE_MASK\"] = 30720] = \"FONT_STYLE_MASK\";\n    MetadataConsts[MetadataConsts[\"FOREGROUND_MASK\"] = 16744448] = \"FOREGROUND_MASK\";\n    MetadataConsts[MetadataConsts[\"BACKGROUND_MASK\"] = 4278190080] = \"BACKGROUND_MASK\";\n    MetadataConsts[MetadataConsts[\"ITALIC_MASK\"] = 2048] = \"ITALIC_MASK\";\n    MetadataConsts[MetadataConsts[\"BOLD_MASK\"] = 4096] = \"BOLD_MASK\";\n    MetadataConsts[MetadataConsts[\"UNDERLINE_MASK\"] = 8192] = \"UNDERLINE_MASK\";\n    MetadataConsts[MetadataConsts[\"STRIKETHROUGH_MASK\"] = 16384] = \"STRIKETHROUGH_MASK\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_ITALIC\"] = 1] = \"SEMANTIC_USE_ITALIC\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_BOLD\"] = 2] = \"SEMANTIC_USE_BOLD\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_UNDERLINE\"] = 4] = \"SEMANTIC_USE_UNDERLINE\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_STRIKETHROUGH\"] = 8] = \"SEMANTIC_USE_STRIKETHROUGH\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_FOREGROUND\"] = 16] = \"SEMANTIC_USE_FOREGROUND\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_BACKGROUND\"] = 32] = \"SEMANTIC_USE_BACKGROUND\";\n    MetadataConsts[MetadataConsts[\"LANGUAGEID_OFFSET\"] = 0] = \"LANGUAGEID_OFFSET\";\n    MetadataConsts[MetadataConsts[\"TOKEN_TYPE_OFFSET\"] = 8] = \"TOKEN_TYPE_OFFSET\";\n    MetadataConsts[MetadataConsts[\"BALANCED_BRACKETS_OFFSET\"] = 10] = \"BALANCED_BRACKETS_OFFSET\";\n    MetadataConsts[MetadataConsts[\"FONT_STYLE_OFFSET\"] = 11] = \"FONT_STYLE_OFFSET\";\n    MetadataConsts[MetadataConsts[\"FOREGROUND_OFFSET\"] = 15] = \"FOREGROUND_OFFSET\";\n    MetadataConsts[MetadataConsts[\"BACKGROUND_OFFSET\"] = 24] = \"BACKGROUND_OFFSET\";\n})(MetadataConsts || (MetadataConsts = {}));\nclass TokenMetadata {\n    static getLanguageId(metadata) {\n        return (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n    }\n    static getTokenType(metadata) {\n        return (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & MetadataConsts.BALANCED_BRACKETS_MASK) !== 0;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n    }\n    static getForeground(metadata) {\n        return (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n    }\n    static getBackground(metadata) {\n        return (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & FontStyle.Italic) {\n            className += ' mtki';\n        }\n        if (fontStyle & FontStyle.Bold) {\n            className += ' mtkb';\n        }\n        if (fontStyle & FontStyle.Underline) {\n            className += ' mtku';\n        }\n        if (fontStyle & FontStyle.Strikethrough) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & FontStyle.Italic) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & FontStyle.Bold) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & FontStyle.Underline) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & FontStyle.Strikethrough) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & FontStyle.Italic),\n            bold: Boolean(fontStyle & FontStyle.Bold),\n            underline: Boolean(fontStyle & FontStyle.Underline),\n            strikethrough: Boolean(fontStyle & FontStyle.Strikethrough),\n        };\n    }\n}\n\nexport { ColorId, FontStyle, LanguageId, MetadataConsts, StandardTokenType, TokenMetadata };\n","\nimport { Codicon } from '../../base/common/codicons.js';\nimport { URI } from '../../base/common/uri.js';\nimport { EditOperation } from './core/editOperation.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistry$1 } from './tokenizationRegistry.js';\nimport { localize } from '../../nls.js';\n\nclass Token {\n    constructor(offset, type, language) {\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n        this._tokenBrand = undefined;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nclass TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._tokenizationResultBrand = undefined;\n    }\n}\nclass EncodedTokenizationResult {\n    constructor(\n    tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._encodedTokenizationResultBrand = undefined;\n    }\n}\nvar HoverVerbosityAction;\n(function (HoverVerbosityAction) {\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}));\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nvar CompletionItemKinds;\n(function (CompletionItemKinds) {\n    const byKind = ( new Map());\n    byKind.set(CompletionItemKind.Method, Codicon.symbolMethod);\n    byKind.set(CompletionItemKind.Function, Codicon.symbolFunction);\n    byKind.set(CompletionItemKind.Constructor, Codicon.symbolConstructor);\n    byKind.set(CompletionItemKind.Field, Codicon.symbolField);\n    byKind.set(CompletionItemKind.Variable, Codicon.symbolVariable);\n    byKind.set(CompletionItemKind.Class, Codicon.symbolClass);\n    byKind.set(CompletionItemKind.Struct, Codicon.symbolStruct);\n    byKind.set(CompletionItemKind.Interface, Codicon.symbolInterface);\n    byKind.set(CompletionItemKind.Module, Codicon.symbolModule);\n    byKind.set(CompletionItemKind.Property, Codicon.symbolProperty);\n    byKind.set(CompletionItemKind.Event, Codicon.symbolEvent);\n    byKind.set(CompletionItemKind.Operator, Codicon.symbolOperator);\n    byKind.set(CompletionItemKind.Unit, Codicon.symbolUnit);\n    byKind.set(CompletionItemKind.Value, Codicon.symbolValue);\n    byKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n    byKind.set(CompletionItemKind.Constant, Codicon.symbolConstant);\n    byKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n    byKind.set(CompletionItemKind.EnumMember, Codicon.symbolEnumMember);\n    byKind.set(CompletionItemKind.Keyword, Codicon.symbolKeyword);\n    byKind.set(CompletionItemKind.Snippet, Codicon.symbolSnippet);\n    byKind.set(CompletionItemKind.Text, Codicon.symbolText);\n    byKind.set(CompletionItemKind.Color, Codicon.symbolColor);\n    byKind.set(CompletionItemKind.File, Codicon.symbolFile);\n    byKind.set(CompletionItemKind.Reference, Codicon.symbolReference);\n    byKind.set(CompletionItemKind.Customcolor, Codicon.symbolCustomColor);\n    byKind.set(CompletionItemKind.Folder, Codicon.symbolFolder);\n    byKind.set(CompletionItemKind.TypeParameter, Codicon.symbolTypeParameter);\n    byKind.set(CompletionItemKind.User, Codicon.account);\n    byKind.set(CompletionItemKind.Issue, Codicon.issues);\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = ( new Map());\n    data.set('method', CompletionItemKind.Method);\n    data.set('function', CompletionItemKind.Function);\n    data.set('constructor', CompletionItemKind.Constructor);\n    data.set('field', CompletionItemKind.Field);\n    data.set('variable', CompletionItemKind.Variable);\n    data.set('class', CompletionItemKind.Class);\n    data.set('struct', CompletionItemKind.Struct);\n    data.set('interface', CompletionItemKind.Interface);\n    data.set('module', CompletionItemKind.Module);\n    data.set('property', CompletionItemKind.Property);\n    data.set('event', CompletionItemKind.Event);\n    data.set('operator', CompletionItemKind.Operator);\n    data.set('unit', CompletionItemKind.Unit);\n    data.set('value', CompletionItemKind.Value);\n    data.set('constant', CompletionItemKind.Constant);\n    data.set('enum', CompletionItemKind.Enum);\n    data.set('enum-member', CompletionItemKind.EnumMember);\n    data.set('enumMember', CompletionItemKind.EnumMember);\n    data.set('keyword', CompletionItemKind.Keyword);\n    data.set('snippet', CompletionItemKind.Snippet);\n    data.set('text', CompletionItemKind.Text);\n    data.set('color', CompletionItemKind.Color);\n    data.set('file', CompletionItemKind.File);\n    data.set('reference', CompletionItemKind.Reference);\n    data.set('customcolor', CompletionItemKind.Customcolor);\n    data.set('folder', CompletionItemKind.Folder);\n    data.set('type-parameter', CompletionItemKind.TypeParameter);\n    data.set('typeParameter', CompletionItemKind.TypeParameter);\n    data.set('account', CompletionItemKind.User);\n    data.set('issue', CompletionItemKind.Issue);\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = CompletionItemKind.Property;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}));\nvar CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\nvar CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nvar PartialAcceptTriggerKind;\n(function (PartialAcceptTriggerKind) {\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Word\"] = 0] = \"Word\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Line\"] = 1] = \"Line\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Suggest\"] = 2] = \"Suggest\";\n})(PartialAcceptTriggerKind || (PartialAcceptTriggerKind = {}));\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nvar InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nclass SelectedSuggestionInfo {\n    constructor(range, text, completionKind, isSnippetText) {\n        this.range = range;\n        this.text = text;\n        this.completionKind = completionKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return Range.lift(this.range).equalsRange(other.range)\n            && this.text === other.text\n            && this.completionKind === other.completionKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n}\nvar CodeActionTriggerType;\n(function (CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {}));\nvar DocumentPasteTriggerKind;\n(function (DocumentPasteTriggerKind) {\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"PasteAs\"] = 1] = \"PasteAs\";\n})(DocumentPasteTriggerKind || (DocumentPasteTriggerKind = {}));\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\nfunction isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\nfunction isLocation(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range);\n}\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nconst symbolKindNames = {\n    [SymbolKind.Array]: ( localize(761, \"array\")),\n    [SymbolKind.Boolean]: ( localize(762, \"boolean\")),\n    [SymbolKind.Class]: ( localize(763, \"class\")),\n    [SymbolKind.Constant]: ( localize(764, \"constant\")),\n    [SymbolKind.Constructor]: ( localize(765, \"constructor\")),\n    [SymbolKind.Enum]: ( localize(766, \"enumeration\")),\n    [SymbolKind.EnumMember]: ( localize(767, \"enumeration member\")),\n    [SymbolKind.Event]: ( localize(768, \"event\")),\n    [SymbolKind.Field]: ( localize(769, \"field\")),\n    [SymbolKind.File]: ( localize(770, \"file\")),\n    [SymbolKind.Function]: ( localize(771, \"function\")),\n    [SymbolKind.Interface]: ( localize(772, \"interface\")),\n    [SymbolKind.Key]: ( localize(773, \"key\")),\n    [SymbolKind.Method]: ( localize(774, \"method\")),\n    [SymbolKind.Module]: ( localize(775, \"module\")),\n    [SymbolKind.Namespace]: ( localize(776, \"namespace\")),\n    [SymbolKind.Null]: ( localize(777, \"null\")),\n    [SymbolKind.Number]: ( localize(778, \"number\")),\n    [SymbolKind.Object]: ( localize(779, \"object\")),\n    [SymbolKind.Operator]: ( localize(780, \"operator\")),\n    [SymbolKind.Package]: ( localize(781, \"package\")),\n    [SymbolKind.Property]: ( localize(782, \"property\")),\n    [SymbolKind.String]: ( localize(783, \"string\")),\n    [SymbolKind.Struct]: ( localize(784, \"struct\")),\n    [SymbolKind.TypeParameter]: ( localize(785, \"type parameter\")),\n    [SymbolKind.Variable]: ( localize(786, \"variable\")),\n};\nfunction getAriaLabelForSymbol(symbolName, kind) {\n    return localize(787, '{0} ({1})', symbolName, symbolKindNames[kind]);\n}\nvar SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\nvar SymbolKinds;\n(function (SymbolKinds) {\n    const byKind = ( new Map());\n    byKind.set(SymbolKind.File, Codicon.symbolFile);\n    byKind.set(SymbolKind.Module, Codicon.symbolModule);\n    byKind.set(SymbolKind.Namespace, Codicon.symbolNamespace);\n    byKind.set(SymbolKind.Package, Codicon.symbolPackage);\n    byKind.set(SymbolKind.Class, Codicon.symbolClass);\n    byKind.set(SymbolKind.Method, Codicon.symbolMethod);\n    byKind.set(SymbolKind.Property, Codicon.symbolProperty);\n    byKind.set(SymbolKind.Field, Codicon.symbolField);\n    byKind.set(SymbolKind.Constructor, Codicon.symbolConstructor);\n    byKind.set(SymbolKind.Enum, Codicon.symbolEnum);\n    byKind.set(SymbolKind.Interface, Codicon.symbolInterface);\n    byKind.set(SymbolKind.Function, Codicon.symbolFunction);\n    byKind.set(SymbolKind.Variable, Codicon.symbolVariable);\n    byKind.set(SymbolKind.Constant, Codicon.symbolConstant);\n    byKind.set(SymbolKind.String, Codicon.symbolString);\n    byKind.set(SymbolKind.Number, Codicon.symbolNumber);\n    byKind.set(SymbolKind.Boolean, Codicon.symbolBoolean);\n    byKind.set(SymbolKind.Array, Codicon.symbolArray);\n    byKind.set(SymbolKind.Object, Codicon.symbolObject);\n    byKind.set(SymbolKind.Key, Codicon.symbolKey);\n    byKind.set(SymbolKind.Null, Codicon.symbolNull);\n    byKind.set(SymbolKind.EnumMember, Codicon.symbolEnumMember);\n    byKind.set(SymbolKind.Struct, Codicon.symbolStruct);\n    byKind.set(SymbolKind.Event, Codicon.symbolEvent);\n    byKind.set(SymbolKind.Operator, Codicon.symbolOperator);\n    byKind.set(SymbolKind.TypeParameter, Codicon.symbolTypeParameter);\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n    const byCompletionKind = ( new Map());\n    byCompletionKind.set(SymbolKind.File, CompletionItemKind.File);\n    byCompletionKind.set(SymbolKind.Module, CompletionItemKind.Module);\n    byCompletionKind.set(SymbolKind.Namespace, CompletionItemKind.Module);\n    byCompletionKind.set(SymbolKind.Package, CompletionItemKind.Module);\n    byCompletionKind.set(SymbolKind.Class, CompletionItemKind.Class);\n    byCompletionKind.set(SymbolKind.Method, CompletionItemKind.Method);\n    byCompletionKind.set(SymbolKind.Property, CompletionItemKind.Property);\n    byCompletionKind.set(SymbolKind.Field, CompletionItemKind.Field);\n    byCompletionKind.set(SymbolKind.Constructor, CompletionItemKind.Constructor);\n    byCompletionKind.set(SymbolKind.Enum, CompletionItemKind.Enum);\n    byCompletionKind.set(SymbolKind.Interface, CompletionItemKind.Interface);\n    byCompletionKind.set(SymbolKind.Function, CompletionItemKind.Function);\n    byCompletionKind.set(SymbolKind.Variable, CompletionItemKind.Variable);\n    byCompletionKind.set(SymbolKind.Constant, CompletionItemKind.Constant);\n    byCompletionKind.set(SymbolKind.String, CompletionItemKind.Text);\n    byCompletionKind.set(SymbolKind.Number, CompletionItemKind.Value);\n    byCompletionKind.set(SymbolKind.Boolean, CompletionItemKind.Value);\n    byCompletionKind.set(SymbolKind.Array, CompletionItemKind.Value);\n    byCompletionKind.set(SymbolKind.Object, CompletionItemKind.Value);\n    byCompletionKind.set(SymbolKind.Key, CompletionItemKind.Keyword);\n    byCompletionKind.set(SymbolKind.Null, CompletionItemKind.Value);\n    byCompletionKind.set(SymbolKind.EnumMember, CompletionItemKind.EnumMember);\n    byCompletionKind.set(SymbolKind.Struct, CompletionItemKind.Struct);\n    byCompletionKind.set(SymbolKind.Event, CompletionItemKind.Event);\n    byCompletionKind.set(SymbolKind.Operator, CompletionItemKind.Operator);\n    byCompletionKind.set(SymbolKind.TypeParameter, CompletionItemKind.TypeParameter);\n    function toCompletionKind(kind) {\n        let completionKind = byCompletionKind.get(kind);\n        if (completionKind === undefined) {\n            console.info('No completion kind found for SymbolKind ' + kind);\n            completionKind = CompletionItemKind.File;\n        }\n        return completionKind;\n    }\n    SymbolKinds.toCompletionKind = toCompletionKind;\n})(SymbolKinds || (SymbolKinds = {}));\nclass TextEdit {\n    static asEditOperation(edit) {\n        return EditOperation.replace(Range.lift(edit.range), edit.text);\n    }\n    static isTextEdit(thing) {\n        const possibleTextEdit = thing;\n        return typeof possibleTextEdit.text === 'string' && Range.isIRange(possibleTextEdit.range);\n    }\n}\nclass FoldingRangeKind {\n    static { this.Comment = ( new FoldingRangeKind('comment')); }\n    static { this.Imports = ( new FoldingRangeKind('imports')); }\n    static { this.Region = ( new FoldingRangeKind('region')); }\n    static fromValue(value) {\n        switch (value) {\n            case 'comment': return FoldingRangeKind.Comment;\n            case 'imports': return FoldingRangeKind.Imports;\n            case 'region': return FoldingRangeKind.Region;\n        }\n        return ( new FoldingRangeKind(value));\n    }\n    constructor(value) {\n        this.value = value;\n    }\n}\nvar NewSymbolNameTag;\n(function (NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}));\nvar NewSymbolNameTriggerKind;\n(function (NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}));\nvar Command;\n(function (Command) {\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}));\nvar CommentThreadCollapsibleState;\n(function (CommentThreadCollapsibleState) {\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Collapsed\"] = 0] = \"Collapsed\";\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Expanded\"] = 1] = \"Expanded\";\n})(CommentThreadCollapsibleState || (CommentThreadCollapsibleState = {}));\nvar CommentThreadState;\n(function (CommentThreadState) {\n    CommentThreadState[CommentThreadState[\"Unresolved\"] = 0] = \"Unresolved\";\n    CommentThreadState[CommentThreadState[\"Resolved\"] = 1] = \"Resolved\";\n})(CommentThreadState || (CommentThreadState = {}));\nvar CommentThreadApplicability;\n(function (CommentThreadApplicability) {\n    CommentThreadApplicability[CommentThreadApplicability[\"Current\"] = 0] = \"Current\";\n    CommentThreadApplicability[CommentThreadApplicability[\"Outdated\"] = 1] = \"Outdated\";\n})(CommentThreadApplicability || (CommentThreadApplicability = {}));\nvar CommentMode;\n(function (CommentMode) {\n    CommentMode[CommentMode[\"Editing\"] = 0] = \"Editing\";\n    CommentMode[CommentMode[\"Preview\"] = 1] = \"Preview\";\n})(CommentMode || (CommentMode = {}));\nvar CommentState;\n(function (CommentState) {\n    CommentState[CommentState[\"Published\"] = 0] = \"Published\";\n    CommentState[CommentState[\"Draft\"] = 1] = \"Draft\";\n})(CommentState || (CommentState = {}));\nvar InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\nclass LazyTokenizationSupport {\n    constructor(createSupport) {\n        this.createSupport = createSupport;\n        this._tokenizationSupport = null;\n    }\n    dispose() {\n        if (this._tokenizationSupport) {\n            this._tokenizationSupport.then((support) => {\n                if (support) {\n                    support.dispose();\n                }\n            });\n        }\n    }\n    get tokenizationSupport() {\n        if (!this._tokenizationSupport) {\n            this._tokenizationSupport = this.createSupport();\n        }\n        return this._tokenizationSupport;\n    }\n}\nconst TokenizationRegistry = ( new TokenizationRegistry$1());\nconst TreeSitterTokenizationRegistry = ( new TokenizationRegistry$1());\nvar ExternalUriOpenerPriority;\n(function (ExternalUriOpenerPriority) {\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"None\"] = 0] = \"None\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Option\"] = 1] = \"Option\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Default\"] = 2] = \"Default\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Preferred\"] = 3] = \"Preferred\";\n})(ExternalUriOpenerPriority || (ExternalUriOpenerPriority = {}));\nvar InlineEditTriggerKind;\n(function (InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}));\n\nexport { CodeActionTriggerType, Command, CommentMode, CommentState, CommentThreadApplicability, CommentThreadCollapsibleState, CommentThreadState, CompletionItemInsertTextRule, CompletionItemKind, CompletionItemKinds, CompletionItemTag, CompletionTriggerKind, DocumentHighlightKind, DocumentPasteTriggerKind, EncodedTokenizationResult, ExternalUriOpenerPriority, FoldingRangeKind, HoverVerbosityAction, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, LazyTokenizationSupport, NewSymbolNameTag, NewSymbolNameTriggerKind, PartialAcceptTriggerKind, SelectedSuggestionInfo, SignatureHelpTriggerKind, SymbolKind, SymbolKinds, SymbolTag, TextEdit, Token, TokenizationRegistry, TokenizationResult, TreeSitterTokenizationRegistry, getAriaLabelForSymbol, isLocation, isLocationLink, symbolKindNames };\n","\nimport { Emitter } from '../../base/common/event.js';\nimport { toDisposable, Disposable } from '../../base/common/lifecycle.js';\nimport { ColorId } from './encodedTokenAttributes.js';\n\nclass TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = ( new Map());\n        this._factories = ( new Map());\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        this._factories.get(languageId)?.dispose();\n        const myData = ( new TokenizationSupportFactoryData(this, languageId, factory));\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    async getOrCreate(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return tokenizationSupport;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return null;\n        }\n        await factory.resolve();\n        return this.get(languageId);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(( this._tokenizationSupports.keys())),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > ColorId.DefaultBackground) {\n            return this._colorMap[ColorId.DefaultBackground];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    async resolve() {\n        if (!this._resolvePromise) {\n            this._resolvePromise = this._create();\n        }\n        return this._resolvePromise;\n    }\n    async _create() {\n        const value = await this._factory.tokenizationSupport;\n        this._isResolved = true;\n        if (value && !this._isDisposed) {\n            this._register(this._registry.register(this._languageId, value));\n        }\n    }\n}\n\nexport { TokenizationRegistry };\n","\n\nvar AccessibilitySupport;\n(function (AccessibilitySupport) {\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nvar CodeActionTriggerType;\n(function (CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {}));\nvar CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nvar CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nvar ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\nvar CursorChangeReason;\n(function (CursorChangeReason) {\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nvar DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\nvar EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nvar EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"ariaRequired\"] = 5] = \"ariaRequired\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 6] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingComments\"] = 7] = \"autoClosingComments\";\n    EditorOption[EditorOption[\"screenReaderAnnounceInlineSuggestion\"] = 8] = \"screenReaderAnnounceInlineSuggestion\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 9] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 10] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 11] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 12] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 13] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 14] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 15] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 16] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 17] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 18] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 19] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 20] = \"colorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsLimit\"] = 21] = \"colorDecoratorsLimit\";\n    EditorOption[EditorOption[\"columnSelection\"] = 22] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 23] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 24] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 25] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 26] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 27] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 28] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 29] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 30] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 31] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 32] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 33] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 34] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 35] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"dropIntoEditor\"] = 36] = \"dropIntoEditor\";\n    EditorOption[EditorOption[\"experimentalEditContextEnabled\"] = 37] = \"experimentalEditContextEnabled\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 38] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"experimentalGpuAcceleration\"] = 39] = \"experimentalGpuAcceleration\";\n    EditorOption[EditorOption[\"experimentalWhitespaceRendering\"] = 40] = \"experimentalWhitespaceRendering\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 41] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 42] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 43] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 44] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 45] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 46] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 47] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 48] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"foldingMaximumRegions\"] = 49] = \"foldingMaximumRegions\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 50] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 51] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 52] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 53] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 54] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 55] = \"fontWeight\";\n    EditorOption[EditorOption[\"fontVariations\"] = 56] = \"fontVariations\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 57] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 58] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 59] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 60] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 61] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 62] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 63] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 64] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 65] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 66] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 67] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 68] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 69] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 70] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 71] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 72] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 73] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 74] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 75] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 76] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 77] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 78] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 79] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 80] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"multiCursorLimit\"] = 81] = \"multiCursorLimit\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 82] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"occurrencesHighlightDelay\"] = 83] = \"occurrencesHighlightDelay\";\n    EditorOption[EditorOption[\"overtypeCursorStyle\"] = 84] = \"overtypeCursorStyle\";\n    EditorOption[EditorOption[\"overtypeOnPaste\"] = 85] = \"overtypeOnPaste\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 86] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 87] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 88] = \"padding\";\n    EditorOption[EditorOption[\"pasteAs\"] = 89] = \"pasteAs\";\n    EditorOption[EditorOption[\"parameterHints\"] = 90] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 91] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"placeholder\"] = 92] = \"placeholder\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 93] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 94] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 95] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 96] = \"readOnly\";\n    EditorOption[EditorOption[\"readOnlyMessage\"] = 97] = \"readOnlyMessage\";\n    EditorOption[EditorOption[\"renameOnType\"] = 98] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 99] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 100] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 101] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 102] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 103] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 104] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 105] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 106] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 107] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 108] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 109] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 110] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 111] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 112] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 113] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 114] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 115] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 116] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 117] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 118] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 119] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyScroll\"] = 120] = \"stickyScroll\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 121] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 122] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 123] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 124] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 125] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 126] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 127] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 128] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 129] = \"tabIndex\";\n    EditorOption[EditorOption[\"unicodeHighlighting\"] = 130] = \"unicodeHighlighting\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 131] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 132] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 133] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordBreak\"] = 134] = \"wordBreak\";\n    EditorOption[EditorOption[\"wordSegmenterLocales\"] = 135] = \"wordSegmenterLocales\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 136] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 137] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 138] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 139] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 140] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 141] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 142] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 143] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 144] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 145] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 146] = \"inlayHints\";\n    EditorOption[EditorOption[\"effectiveCursorStyle\"] = 147] = \"effectiveCursorStyle\";\n    EditorOption[EditorOption[\"editorClassName\"] = 148] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 149] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 150] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 151] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 152] = \"wrappingInfo\";\n    EditorOption[EditorOption[\"defaultColorDecorators\"] = 153] = \"defaultColorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsActivatedOn\"] = 154] = \"colorDecoratorsActivatedOn\";\n    EditorOption[EditorOption[\"inlineCompletionsAccessibilityVerbose\"] = 155] = \"inlineCompletionsAccessibilityVerbose\";\n    EditorOption[EditorOption[\"effectiveExperimentalEditContextEnabled\"] = 156] = \"effectiveExperimentalEditContextEnabled\";\n})(EditorOption || (EditorOption = {}));\nvar EndOfLinePreference;\n(function (EndOfLinePreference) {\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\nvar EndOfLineSequence;\n(function (EndOfLineSequence) {\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\nvar GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\nvar HoverVerbosityAction;\n(function (HoverVerbosityAction) {\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}));\nvar IndentAction;\n(function (IndentAction) {\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nvar InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nvar InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\nvar InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nvar InlineEditTriggerKind;\n(function (InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}));\nvar KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nvar MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nvar MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\nvar MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\nvar MinimapSectionHeaderStyle;\n(function (MinimapSectionHeaderStyle) {\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Normal\"] = 1] = \"Normal\";\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Underlined\"] = 2] = \"Underlined\";\n})(MinimapSectionHeaderStyle || (MinimapSectionHeaderStyle = {}));\nvar MouseTargetType;\n(function (MouseTargetType) {\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\nvar NewSymbolNameTag;\n(function (NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}));\nvar NewSymbolNameTriggerKind;\n(function (NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}));\nvar OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\nvar OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nvar PartialAcceptTriggerKind;\n(function (PartialAcceptTriggerKind) {\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Word\"] = 0] = \"Word\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Line\"] = 1] = \"Line\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Suggest\"] = 2] = \"Suggest\";\n})(PartialAcceptTriggerKind || (PartialAcceptTriggerKind = {}));\nvar PositionAffinity;\n(function (PositionAffinity) {\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {}));\nvar RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nvar RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nvar ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nvar ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\nvar SelectionDirection;\n(function (SelectionDirection) {\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nvar ShowLightbulbIconMode;\n(function (ShowLightbulbIconMode) {\n    ShowLightbulbIconMode[\"Off\"] = \"off\";\n    ShowLightbulbIconMode[\"OnCode\"] = \"onCode\";\n    ShowLightbulbIconMode[\"On\"] = \"on\";\n})(ShowLightbulbIconMode || (ShowLightbulbIconMode = {}));\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\nvar TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\nvar TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nvar TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nvar WrappingIndent;\n(function (WrappingIndent) {\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n\nexport { AccessibilitySupport, CodeActionTriggerType, CompletionItemInsertTextRule, CompletionItemKind, CompletionItemTag, CompletionTriggerKind, ContentWidgetPositionPreference, CursorChangeReason, DefaultEndOfLine, DocumentHighlightKind, EditorAutoIndentStrategy, EditorOption, EndOfLinePreference, EndOfLineSequence, GlyphMarginLane, HoverVerbosityAction, IndentAction, InjectedTextCursorStops, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, KeyCode, MarkerSeverity, MarkerTag, MinimapPosition, MinimapSectionHeaderStyle, MouseTargetType, NewSymbolNameTag, NewSymbolNameTriggerKind, OverlayWidgetPositionPreference, OverviewRulerLane, PartialAcceptTriggerKind, PositionAffinity, RenderLineNumbersType, RenderMinimap, ScrollType, ScrollbarVisibility, SelectionDirection, ShowLightbulbIconMode, SignatureHelpTriggerKind, SymbolKind, SymbolTag, TextEditorCursorBlinkingStyle, TextEditorCursorStyle, TrackedRangeStickiness, WrappingIndent };\n","\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyMod as KeyMod$1, KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport { MarkerTag, MarkerSeverity, SelectionDirection, KeyCode } from '../standalone/standaloneEnums.js';\n\nclass KeyMod {\n    static { this.CtrlCmd = KeyMod$1.CtrlCmd; }\n    static { this.Shift = KeyMod$1.Shift; }\n    static { this.Alt = KeyMod$1.Alt; }\n    static { this.WinCtrl = KeyMod$1.WinCtrl; }\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nfunction createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: SelectionDirection,\n        MarkerSeverity: MarkerSeverity,\n        MarkerTag: MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n\nexport { KeyMod, createMonacoBaseAPI };\n","\n\nclass EditorWorkerHost {\n    static { this.CHANNEL_NAME = 'editorWorkerHost'; }\n    static getChannel(workerServer) {\n        return workerServer.getChannel(EditorWorkerHost.CHANNEL_NAME);\n    }\n    static setChannel(workerClient, obj) {\n        workerClient.setChannel(EditorWorkerHost.CHANNEL_NAME, obj);\n    }\n}\n\nexport { EditorWorkerHost };\n","\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { safeIntl } from '../../../base/common/date.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { CharacterClassifier } from './characterClassifier.js';\n\nvar WordCharacterClass;\n(function (WordCharacterClass) {\n    WordCharacterClass[WordCharacterClass[\"Regular\"] = 0] = \"Regular\";\n    WordCharacterClass[WordCharacterClass[\"Whitespace\"] = 1] = \"Whitespace\";\n    WordCharacterClass[WordCharacterClass[\"WordSeparator\"] = 2] = \"WordSeparator\";\n})(WordCharacterClass || (WordCharacterClass = {}));\nclass WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators, intlSegmenterLocales) {\n        super(WordCharacterClass.Regular);\n        this._segmenter = null;\n        this._cachedLine = null;\n        this._cachedSegments = [];\n        this.intlSegmenterLocales = intlSegmenterLocales;\n        if (this.intlSegmenterLocales.length > 0) {\n            this._segmenter = safeIntl.Segmenter(this.intlSegmenterLocales, { granularity: 'word' });\n        }\n        else {\n            this._segmenter = null;\n        }\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), WordCharacterClass.WordSeparator);\n        }\n        this.set(CharCode.Space, WordCharacterClass.Whitespace);\n        this.set(CharCode.Tab, WordCharacterClass.Whitespace);\n    }\n    findPrevIntlWordBeforeOrAtOffset(line, offset) {\n        let candidate = null;\n        for (const segment of this._getIntlSegmenterWordsOnLine(line)) {\n            if (segment.index > offset) {\n                break;\n            }\n            candidate = segment;\n        }\n        return candidate;\n    }\n    findNextIntlWordAtOrAfterOffset(lineContent, offset) {\n        for (const segment of this._getIntlSegmenterWordsOnLine(lineContent)) {\n            if (segment.index < offset) {\n                continue;\n            }\n            return segment;\n        }\n        return null;\n    }\n    _getIntlSegmenterWordsOnLine(line) {\n        if (!this._segmenter) {\n            return [];\n        }\n        if (this._cachedLine === line) {\n            return this._cachedSegments;\n        }\n        this._cachedLine = line;\n        this._cachedSegments = this._filterWordSegments(this._segmenter.segment(line));\n        return this._cachedSegments;\n    }\n    _filterWordSegments(segments) {\n        const result = [];\n        for (const segment of segments) {\n            if (this._isWordLike(segment)) {\n                result.push(segment);\n            }\n        }\n        return result;\n    }\n    _isWordLike(segment) {\n        if (segment.isWordLike) {\n            return true;\n        }\n        return false;\n    }\n}\nconst wordClassifierCache = ( new LRUCache(10));\nfunction getMapForWordSeparators(wordSeparators, intlSegmenterLocales) {\n    const key = `${wordSeparators}/${intlSegmenterLocales.join(',')}`;\n    let result = wordClassifierCache.get(key);\n    if (!result) {\n        result = ( new WordCharacterClassifier(wordSeparators, intlSegmenterLocales));\n        wordClassifierCache.set(key, result);\n    }\n    return result;\n}\n\nexport { WordCharacterClass, WordCharacterClassifier, getMapForWordSeparators };\n","\nimport { isTypedArray, isUndefinedOrNull, isObject } from './types.js';\n\nfunction deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nfunction deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, ( new Set()));\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (( seen.has(obj))) {\n            throw ( new Error('Cannot clone recursive data-structure'));\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\nfunction mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        ( Object.keys(source)).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nfunction equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction safeStringify(obj) {\n    const seen = ( new Set());\n    return JSON.stringify(obj, (key, value) => {\n        if (isObject(value) || Array.isArray(value)) {\n            if (( seen.has(value))) {\n                return '[Circular]';\n            }\n            else {\n                seen.add(value);\n            }\n        }\n        if (typeof value === 'bigint') {\n            return `[BigInt ${( value.toString())}]`;\n        }\n        return value;\n    });\n}\nfunction distinct(base, target) {\n    const result = Object.create(null);\n    if (!base || !target) {\n        return result;\n    }\n    const targetKeys = ( Object.keys(target));\n    targetKeys.forEach(k => {\n        const baseValue = base[k];\n        const targetValue = target[k];\n        if (!equals(baseValue, targetValue)) {\n            result[k] = targetValue;\n        }\n    });\n    return result;\n}\nfunction filter(obj, predicate) {\n    const result = Object.create(null);\n    for (const [key, value] of Object.entries(obj)) {\n        if (predicate(key, value)) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\nfunction getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nfunction getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nfunction createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\nfunction mapValues(obj, fn) {\n    const result = {};\n    for (const [key, value] of Object.entries(obj)) {\n        result[key] = fn(value, key);\n    }\n    return result;\n}\n\nexport { cloneAndChange, createProxyObject, deepClone, deepFreeze, distinct, equals, filter, getAllMethodNames, getAllPropertyNames, mapValues, mixin, safeStringify };\n","\nimport { equals } from '../../base/common/objects.js';\n\nvar OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nvar GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\nvar MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\nvar MinimapSectionHeaderStyle;\n(function (MinimapSectionHeaderStyle) {\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Normal\"] = 1] = \"Normal\";\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Underlined\"] = 2] = \"Underlined\";\n})(MinimapSectionHeaderStyle || (MinimapSectionHeaderStyle = {}));\nvar InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nvar EndOfLinePreference;\n(function (EndOfLinePreference) {\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\nvar DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\nvar EndOfLineSequence;\n(function (EndOfLineSequence) {\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\nclass TextModelResolvedOptions {\n    get originalIndentSize() {\n        return this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n    }\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        if (src.indentSize === 'tabSize') {\n            this.indentSize = this.tabSize;\n            this._indentSizeIsTabSize = true;\n        }\n        else {\n            this.indentSize = Math.max(1, src.indentSize | 0);\n            this._indentSizeIsTabSize = false;\n        }\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this._indentSizeIsTabSize === other._indentSizeIsTabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nclass FindMatch {\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\nvar TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nfunction isITextSnapshot(obj) {\n    return (obj && typeof obj.read === 'function');\n}\nfunction isITextModel(obj) {\n    return Boolean(obj && obj.uri);\n}\nvar PositionAffinity;\n(function (PositionAffinity) {\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {}));\nvar ModelConstants;\n(function (ModelConstants) {\n    ModelConstants[ModelConstants[\"FIRST_LINE_DETECTION_LENGTH_LIMIT\"] = 1000] = \"FIRST_LINE_DETECTION_LENGTH_LIMIT\";\n})(ModelConstants || (ModelConstants = {}));\nclass ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\nclass SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\nclass ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\nfunction shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\n\nexport { ApplyEditsResult, DefaultEndOfLine, EndOfLinePreference, EndOfLineSequence, FindMatch, GlyphMarginLane, InjectedTextCursorStops, MinimapPosition, MinimapSectionHeaderStyle, ModelConstants, OverviewRulerLane, PositionAffinity, SearchData, TextModelResolvedOptions, TrackedRangeStickiness, ValidAnnotatedEditOperation, isITextModel, isITextSnapshot, shouldSynchronizeModel };\n","\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { createRegExp, getNextCodePoint } from '../../../base/common/strings.js';\nimport { getMapForWordSeparators, WordCharacterClass } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { SearchData, FindMatch, EndOfLinePreference } from '../model.js';\n\nconst LIMIT_FIND_COUNT = 999;\nclass SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            canUseSimpleSearch = this.matchCase;\n        }\n        return ( new SearchData(\n            regex,\n            this.wordSeparators ? getMapForWordSeparators(this.wordSeparators, []) : null,\n            canUseSimpleSearch ? this.searchString : null\n        ));\n    }\n}\nfunction isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === CharCode.LineFeed) {\n            return true;\n        }\n        if (chCode === CharCode.Backslash) {\n            i++;\n            if (i >= len) {\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === CharCode.n || nextChCode === CharCode.r || nextChCode === CharCode.W) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return ( new FindMatch(range, null));\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return ( new FindMatch(range, matches));\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === CharCode.LineFeed) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nclass TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, ( new Searcher(searchData.wordSeparators, searchData.regex)), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch ;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch ;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return ( new Range(\n            startPosition.lineNumber,\n            startPosition.column,\n            endPosition.lineNumber,\n            endPosition.column\n        ));\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        const text = model.getValueInRange(searchRange, EndOfLinePreference.LF);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? ( new LineFeedCounter(text)) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = ( new FindMatch(( new Range(\n                        lineNumber,\n                        lastMatchIndex + 1 + deltaOffset,\n                        lineNumber,\n                        lastMatchIndex + 1 + searchStringLen + deltaOffset\n                    )), null));\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        let m;\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(( new Range(\n                    lineNumber,\n                    m.index + 1 + deltaOffset,\n                    lineNumber,\n                    m.index + 1 + m[0].length + deltaOffset\n                )), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = ( new Position(searchStart.lineNumber, 1));\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        const text = model.getValueInRange(( new Range(\n            searchTextStart.lineNumber,\n            searchTextStart.column,\n            lineCount,\n            model.getLineMaxColumn(lineCount)\n        )), EndOfLinePreference.LF);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? ( new LineFeedCounter(text)) : null);\n        searcher.reset(searchStart.column - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            return this._doFindNextMatchMultiline(model, ( new Position(1, 1)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(( new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length)), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, ( new Range(1, 1, searchStart.lineNumber, searchStart.column)), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            return this._doFindPreviousMatchMultiline(model, ( new Position(lineCount, model.getLineMaxColumn(lineCount))), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(( new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length)), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== WordCharacterClass.Regular) {\n        return true;\n    }\n    if (charBefore === CharCode.CarriageReturn || charBefore === CharCode.LineFeed) {\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== WordCharacterClass.Regular) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== WordCharacterClass.Regular) {\n        return true;\n    }\n    if (charAfter === CharCode.CarriageReturn || charAfter === CharCode.LineFeed) {\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== WordCharacterClass.Regular) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nclass Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    if (getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\n\nexport { SearchParams, Searcher, TextModelSearch, createFindMatch, isMultilineRegexSource, isValidMatch };\n","\nimport { Iterable } from '../../../base/common/iterator.js';\nimport '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\n\nconst USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return ( new RegExp(source, 'g'));\n}\nconst DEFAULT_WORD_REGEXP = createWordRegExp();\nfunction ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = ( new RegExp(wordDefinition.source, flags));\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = ( new LinkedList());\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nfunction getWordAtText(column, wordDefinition, text, textOffset, config) {\n    wordDefinition = ensureValidWordDefinition(wordDefinition);\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            break;\n        }\n        match = thisMatch;\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n\nexport { DEFAULT_WORD_REGEXP, USUAL_WORD_SEPARATORS, ensureValidWordDefinition, getWordAtText };\n","\nimport { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport { isHighSurrogate, AmbiguousCharacters, escapeRegExpCharacters, InvisibleCharacters, isBasicASCII } from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { getWordAtText, DEFAULT_WORD_REGEXP } from '../core/wordHelper.js';\n\nclass UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = ( new CodePointHighlighter(options));\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = ( new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g'));\n        }\n        else {\n            regex = ( new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g'));\n        }\n        const searcher = ( new Searcher(null, regex));\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    let word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    if (word && word.endColumn <= startIndex + 1) {\n                        word = null;\n                    }\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== SimpleHighlightReason.None) {\n                        if (highlightReason === SimpleHighlightReason.Ambiguous) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === SimpleHighlightReason.Invisible) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === SimpleHighlightReason.NonBasicASCII) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever();\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(( new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1)));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = ( new CodePointHighlighter(options));\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case SimpleHighlightReason.None:\n                return null;\n            case SimpleHighlightReason.Invisible:\n                return { kind: UnicodeHighlighterReasonKind.Invisible };\n            case SimpleHighlightReason.Ambiguous: {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = AmbiguousCharacters.getLocales().filter((l) => !AmbiguousCharacters.getInstance(( new Set([...options.allowedLocales, l]))).isAmbiguous(codePoint));\n                return { kind: UnicodeHighlighterReasonKind.Ambiguous, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case SimpleHighlightReason.NonBasicASCII:\n                return { kind: UnicodeHighlighterReasonKind.NonBasicAscii };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${escapeRegExpCharacters(( codePoints.map((i) => String.fromCodePoint(i))).join(''))}]`;\n    return src;\n}\nvar UnicodeHighlighterReasonKind;\n(function (UnicodeHighlighterReasonKind) {\n    UnicodeHighlighterReasonKind[UnicodeHighlighterReasonKind[\"Ambiguous\"] = 0] = \"Ambiguous\";\n    UnicodeHighlighterReasonKind[UnicodeHighlighterReasonKind[\"Invisible\"] = 1] = \"Invisible\";\n    UnicodeHighlighterReasonKind[UnicodeHighlighterReasonKind[\"NonBasicAscii\"] = 2] = \"NonBasicAscii\";\n})(UnicodeHighlighterReasonKind || (UnicodeHighlighterReasonKind = {}));\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = ( new Set(options.allowedCodePoints));\n        this.ambiguousCharacters = AmbiguousCharacters.getInstance(( new Set(options.allowedLocales)));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = ( new Set());\n        if (this.options.invisibleCharacters) {\n            for (const cp of InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (( this.allowedCodePoints.has(codePoint))) {\n            return SimpleHighlightReason.None;\n        }\n        if (this.options.nonBasicASCII) {\n            return SimpleHighlightReason.NonBasicASCII;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII$1 = isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII$1;\n                if (!isBasicASCII$1 &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n         !hasBasicASCIICharacters &&\n             hasNonConfusableNonBasicAsciiCharacter) {\n            return SimpleHighlightReason.None;\n        }\n        if (this.options.invisibleCharacters) {\n            if (!isAllowedInvisibleCharacter(character) && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return SimpleHighlightReason.Invisible;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return SimpleHighlightReason.Ambiguous;\n            }\n        }\n        return SimpleHighlightReason.None;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\nvar SimpleHighlightReason;\n(function (SimpleHighlightReason) {\n    SimpleHighlightReason[SimpleHighlightReason[\"None\"] = 0] = \"None\";\n    SimpleHighlightReason[SimpleHighlightReason[\"NonBasicASCII\"] = 1] = \"NonBasicASCII\";\n    SimpleHighlightReason[SimpleHighlightReason[\"Invisible\"] = 2] = \"Invisible\";\n    SimpleHighlightReason[SimpleHighlightReason[\"Ambiguous\"] = 3] = \"Ambiguous\";\n})(SimpleHighlightReason || (SimpleHighlightReason = {}));\n\nexport { UnicodeHighlighterReasonKind, UnicodeTextModelHighlighter };\n","\n\nclass LinesDiff {\n    constructor(changes,\n    moves,\n    hitTimeout) {\n        this.changes = changes;\n        this.moves = moves;\n        this.hitTimeout = hitTimeout;\n    }\n}\nclass MovedText {\n    constructor(lineRangeMapping, changes) {\n        this.lineRangeMapping = lineRangeMapping;\n        this.changes = changes;\n    }\n    flip() {\n        return ( new MovedText(this.lineRangeMapping.flip(), ( this.changes.map(c => c.flip()))));\n    }\n}\n\nexport { LinesDiff, MovedText };\n","\nimport { BugIndicatingError } from '../../../base/common/errors.js';\n\nclass OffsetRange {\n    static fromTo(start, endExclusive) {\n        return ( new OffsetRange(start, endExclusive));\n    }\n    static addRange(range, sortedRanges) {\n        let i = 0;\n        while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n            sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    static tryCreate(start, endExclusive) {\n        if (start > endExclusive) {\n            return undefined;\n        }\n        return ( new OffsetRange(start, endExclusive));\n    }\n    static ofLength(length) {\n        return ( new OffsetRange(0, length));\n    }\n    static ofStartAndLength(start, length) {\n        return ( new OffsetRange(start, start + length));\n    }\n    static emptyAt(offset) {\n        return ( new OffsetRange(offset, offset));\n    }\n    constructor(start, endExclusive) {\n        this.start = start;\n        this.endExclusive = endExclusive;\n        if (start > endExclusive) {\n            throw ( new BugIndicatingError(`Invalid range: ${( this.toString())}`));\n        }\n    }\n    get isEmpty() {\n        return this.start === this.endExclusive;\n    }\n    delta(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive + offset));\n    }\n    deltaStart(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive));\n    }\n    deltaEnd(offset) {\n        return ( new OffsetRange(this.start, this.endExclusive + offset));\n    }\n    get length() {\n        return this.endExclusive - this.start;\n    }\n    toString() {\n        return `[${this.start}, ${this.endExclusive})`;\n    }\n    equals(other) {\n        return this.start === other.start && this.endExclusive === other.endExclusive;\n    }\n    containsRange(other) {\n        return this.start <= other.start && other.endExclusive <= this.endExclusive;\n    }\n    contains(offset) {\n        return this.start <= offset && offset < this.endExclusive;\n    }\n    join(other) {\n        return ( new OffsetRange(\n            Math.min(this.start, other.start),\n            Math.max(this.endExclusive, other.endExclusive)\n        ));\n    }\n    intersect(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        if (start <= end) {\n            return ( new OffsetRange(start, end));\n        }\n        return undefined;\n    }\n    intersectionLength(range) {\n        const start = Math.max(this.start, range.start);\n        const end = Math.min(this.endExclusive, range.endExclusive);\n        return Math.max(0, end - start);\n    }\n    intersects(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start < end;\n    }\n    intersectsOrTouches(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start <= end;\n    }\n    isBefore(other) {\n        return this.endExclusive <= other.start;\n    }\n    isAfter(other) {\n        return this.start >= other.endExclusive;\n    }\n    slice(arr) {\n        return arr.slice(this.start, this.endExclusive);\n    }\n    substring(str) {\n        return str.substring(this.start, this.endExclusive);\n    }\n    clip(value) {\n        if (this.isEmpty) {\n            throw ( new BugIndicatingError(`Invalid clipping range: ${( this.toString())}`));\n        }\n        return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    }\n    clipCyclic(value) {\n        if (this.isEmpty) {\n            throw ( new BugIndicatingError(`Invalid clipping range: ${( this.toString())}`));\n        }\n        if (value < this.start) {\n            return this.endExclusive - ((this.start - value) % this.length);\n        }\n        if (value >= this.endExclusive) {\n            return this.start + ((value - this.start) % this.length);\n        }\n        return value;\n    }\n    map(f) {\n        const result = [];\n        for (let i = this.start; i < this.endExclusive; i++) {\n            result.push(f(i));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let i = this.start; i < this.endExclusive; i++) {\n            f(i);\n        }\n    }\n}\nclass OffsetRangeSet {\n    constructor() {\n        this._sortedRanges = [];\n    }\n    addRange(range) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            this._sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, this._sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n            this._sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    toString() {\n        return ( this._sortedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    intersectsStrict(other) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n            i++;\n        }\n        return i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n    }\n    intersectWithRange(other) {\n        const result = ( new OffsetRangeSet());\n        for (const range of this._sortedRanges) {\n            const intersection = range.intersect(other);\n            if (intersection) {\n                result.addRange(intersection);\n            }\n        }\n        return result;\n    }\n    intersectWithRangeLength(other) {\n        return this.intersectWithRange(other).length;\n    }\n    get length() {\n        return this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n    }\n}\n\nexport { OffsetRange, OffsetRangeSet };\n","\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../base/common/arraysFind.js';\n\nclass LineRange {\n    static fromRange(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber));\n    }\n    static fromRangeInclusive(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber + 1));\n    }\n    static subtract(a, b) {\n        if (!b) {\n            return [a];\n        }\n        if (a.startLineNumber < b.startLineNumber && b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [\n                ( new LineRange(a.startLineNumber, b.startLineNumber)),\n                ( new LineRange(b.endLineNumberExclusive, a.endLineNumberExclusive))\n            ];\n        }\n        else if (b.startLineNumber <= a.startLineNumber && a.endLineNumberExclusive <= b.endLineNumberExclusive) {\n            return [];\n        }\n        else if (b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [( new LineRange(\n                Math.max(b.endLineNumberExclusive, a.startLineNumber),\n                a.endLineNumberExclusive\n            ))];\n        }\n        else {\n            return [( new LineRange(a.startLineNumber, Math.min(b.startLineNumber, a.endLineNumberExclusive)))];\n        }\n    }\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = ( new LineRangeSet(lineRanges[0].slice()));\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(( new LineRangeSet(lineRanges[i].slice())));\n        }\n        return result.ranges;\n    }\n    static join(lineRanges) {\n        if (lineRanges.length === 0) {\n            throw ( new BugIndicatingError('lineRanges cannot be empty'));\n        }\n        let startLineNumber = lineRanges[0].startLineNumber;\n        let endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n        for (let i = 1; i < lineRanges.length; i++) {\n            startLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n            endLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n        }\n        return ( new LineRange(startLineNumber, endLineNumberExclusive));\n    }\n    static ofLength(startLineNumber, length) {\n        return ( new LineRange(startLineNumber, startLineNumber + length));\n    }\n    static deserialize(lineRange) {\n        return ( new LineRange(lineRange[0], lineRange[1]));\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw ( new BugIndicatingError(\n                `startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`\n            ));\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    delta(offset) {\n        return ( new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset));\n    }\n    deltaLength(offset) {\n        return ( new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset));\n    }\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    join(other) {\n        return ( new LineRange(\n            Math.min(this.startLineNumber, other.startLineNumber),\n            Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive)\n        ));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return ( new LineRange(startLineNumber, endLineNumberExclusive));\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return ( new Range(\n            this.startLineNumber,\n            1,\n            this.endLineNumberExclusive - 1,\n            Number.MAX_SAFE_INTEGER\n        ));\n    }\n    toExclusiveRange() {\n        return ( new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1));\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    toOffsetRange() {\n        return ( new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1));\n    }\n    distanceToRange(other) {\n        if (this.endLineNumberExclusive <= other.startLineNumber) {\n            return other.startLineNumber - this.endLineNumberExclusive;\n        }\n        if (other.endLineNumberExclusive <= this.startLineNumber) {\n            return this.startLineNumber - other.endLineNumberExclusive;\n        }\n        return 0;\n    }\n    distanceToLine(lineNumber) {\n        if (this.contains(lineNumber)) {\n            return 0;\n        }\n        if (lineNumber < this.startLineNumber) {\n            return this.startLineNumber - lineNumber;\n        }\n        return lineNumber - this.endLineNumberExclusive;\n    }\n    addMargin(marginTop, marginBottom) {\n        return ( new LineRange(\n            this.startLineNumber - marginTop,\n            this.endLineNumberExclusive + marginBottom\n        ));\n    }\n}\nclass LineRangeSet {\n    constructor(\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    intersects(range) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    current = ( new LineRange(\n                        current.startLineNumber,\n                        Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive)\n                    ));\n                }\n                else {\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return ( new LineRangeSet(result));\n    }\n    subtractFrom(range) {\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return ( new LineRangeSet([range]));\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(( new LineRange(startLineNumber, r.startLineNumber)));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(( new LineRange(startLineNumber, range.endLineNumberExclusive)));\n        }\n        return ( new LineRangeSet(result));\n    }\n    toString() {\n        return ( this._normalizedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return ( new LineRangeSet(result));\n    }\n    getWithDelta(value) {\n        return ( new LineRangeSet(( this._normalizedRanges.map(r => r.delta(value)))));\n    }\n}\n\nexport { LineRange, LineRangeSet };\n","\nimport { LineRange } from './lineRange.js';\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n\nclass TextLength {\n    static { this.zero = ( new TextLength(0, 0)); }\n    static lengthDiffNonNegative(start, end) {\n        if (end.isLessThan(start)) {\n            return TextLength.zero;\n        }\n        if (start.lineCount === end.lineCount) {\n            return ( new TextLength(0, end.columnCount - start.columnCount));\n        }\n        else {\n            return ( new TextLength(end.lineCount - start.lineCount, end.columnCount));\n        }\n    }\n    static betweenPositions(position1, position2) {\n        if (position1.lineNumber === position2.lineNumber) {\n            return ( new TextLength(0, position2.column - position1.column));\n        }\n        else {\n            return ( new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1));\n        }\n    }\n    static fromPosition(pos) {\n        return ( new TextLength(pos.lineNumber - 1, pos.column - 1));\n    }\n    static ofRange(range) {\n        return TextLength.betweenPositions(range.getStartPosition(), range.getEndPosition());\n    }\n    static ofText(text) {\n        let line = 0;\n        let column = 0;\n        for (const c of text) {\n            if (c === '\\n') {\n                line++;\n                column = 0;\n            }\n            else {\n                column++;\n            }\n        }\n        return ( new TextLength(line, column));\n    }\n    constructor(lineCount, columnCount) {\n        this.lineCount = lineCount;\n        this.columnCount = columnCount;\n    }\n    isZero() {\n        return this.lineCount === 0 && this.columnCount === 0;\n    }\n    isLessThan(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount < other.lineCount;\n        }\n        return this.columnCount < other.columnCount;\n    }\n    isGreaterThan(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount > other.columnCount;\n    }\n    isGreaterThanOrEqualTo(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount >= other.columnCount;\n    }\n    equals(other) {\n        return this.lineCount === other.lineCount && this.columnCount === other.columnCount;\n    }\n    compare(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount - other.lineCount;\n        }\n        return this.columnCount - other.columnCount;\n    }\n    add(other) {\n        if (other.lineCount === 0) {\n            return ( new TextLength(this.lineCount, this.columnCount + other.columnCount));\n        }\n        else {\n            return ( new TextLength(this.lineCount + other.lineCount, other.columnCount));\n        }\n    }\n    createRange(startPosition) {\n        if (this.lineCount === 0) {\n            return ( new Range(\n                startPosition.lineNumber,\n                startPosition.column,\n                startPosition.lineNumber,\n                startPosition.column + this.columnCount\n            ));\n        }\n        else {\n            return ( new Range(\n                startPosition.lineNumber,\n                startPosition.column,\n                startPosition.lineNumber + this.lineCount,\n                this.columnCount + 1\n            ));\n        }\n    }\n    toRange() {\n        return ( new Range(1, 1, this.lineCount + 1, this.columnCount + 1));\n    }\n    toLineRange() {\n        return LineRange.ofLength(1, this.lineCount + 1);\n    }\n    addToPosition(position) {\n        if (this.lineCount === 0) {\n            return ( new Position(position.lineNumber, position.column + this.columnCount));\n        }\n        else {\n            return ( new Position(position.lineNumber + this.lineCount, this.columnCount + 1));\n        }\n    }\n    addToRange(range) {\n        return Range.fromPositions(this.addToPosition(range.getStartPosition()), this.addToPosition(range.getEndPosition()));\n    }\n    toString() {\n        return `${this.lineCount},${this.columnCount}`;\n    }\n}\n\nexport { TextLength };\n","\nimport { findLastIdxMonotonous } from '../../../base/common/arraysFind.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Position } from './position.js';\nimport { Range } from './range.js';\nimport { TextLength } from './textLength.js';\n\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.text = text;\n        this.lineStartOffsetByLineIdx = [];\n        this.lineEndOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n                if (i > 0 && text.charAt(i - 1) === '\\r') {\n                    this.lineEndOffsetByLineIdx.push(i - 1);\n                }\n                else {\n                    this.lineEndOffsetByLineIdx.push(i);\n                }\n            }\n        }\n        this.lineEndOffsetByLineIdx.push(text.length);\n    }\n    getOffset(position) {\n        const valPos = this._validatePosition(position);\n        return this.lineStartOffsetByLineIdx[valPos.lineNumber - 1] + valPos.column - 1;\n    }\n    _validatePosition(position) {\n        if (position.lineNumber < 1) {\n            return ( new Position(1, 1));\n        }\n        const lineCount = this.textLength.lineCount + 1;\n        if (position.lineNumber > lineCount) {\n            const lineLength = this.getLineLength(lineCount);\n            return ( new Position(lineCount, lineLength + 1));\n        }\n        if (position.column < 1) {\n            return ( new Position(position.lineNumber, 1));\n        }\n        const lineLength = this.getLineLength(position.lineNumber);\n        if (position.column - 1 > lineLength) {\n            return ( new Position(position.lineNumber, lineLength + 1));\n        }\n        return position;\n    }\n    getOffsetRange(range) {\n        return ( new OffsetRange(\n            this.getOffset(range.getStartPosition()),\n            this.getOffset(range.getEndPosition())\n        ));\n    }\n    getPosition(offset) {\n        const idx = findLastIdxMonotonous(this.lineStartOffsetByLineIdx, i => i <= offset);\n        const lineNumber = idx + 1;\n        const column = offset - this.lineStartOffsetByLineIdx[idx] + 1;\n        return ( new Position(lineNumber, column));\n    }\n    getRange(offsetRange) {\n        return Range.fromPositions(this.getPosition(offsetRange.start), this.getPosition(offsetRange.endExclusive));\n    }\n    getTextLength(offsetRange) {\n        return TextLength.ofRange(this.getRange(offsetRange));\n    }\n    get textLength() {\n        const lineIdx = this.lineStartOffsetByLineIdx.length - 1;\n        return ( new TextLength(lineIdx, this.text.length - this.lineStartOffsetByLineIdx[lineIdx]));\n    }\n    getLineLength(lineNumber) {\n        return this.lineEndOffsetByLineIdx[lineNumber - 1] - this.lineStartOffsetByLineIdx[lineNumber - 1];\n    }\n}\n\nexport { PositionOffsetTransformer };\n","\nimport { equals } from '../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems, assert } from '../../../base/common/assert.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { commonPrefixLength, commonSuffixLength, splitLines } from '../../../base/common/strings.js';\nimport { Position } from './position.js';\nimport { PositionOffsetTransformer } from './positionToOffset.js';\nimport { Range } from './range.js';\nimport { TextLength } from './textLength.js';\n\nclass TextEdit {\n    static fromOffsetEdit(edit, initialState) {\n        const edits = ( edit.edits.map(e => ( new SingleTextEdit(initialState.getTransformer().getRange(e.replaceRange), e.newText))));\n        return ( new TextEdit(edits));\n    }\n    static single(originalRange, newText) {\n        return ( new TextEdit([( new SingleTextEdit(originalRange, newText))]));\n    }\n    static insert(position, newText) {\n        return ( new TextEdit([( new SingleTextEdit(Range.fromPositions(position, position), newText))]));\n    }\n    constructor(edits) {\n        this.edits = edits;\n        assertFn(() => checkAdjacentItems(edits, (a, b) => a.range.getEndPosition().isBeforeOrEqual(b.range.getStartPosition())));\n    }\n    normalize() {\n        const edits = [];\n        for (const edit of this.edits) {\n            if (edits.length > 0 && edits[edits.length - 1].range.getEndPosition().equals(edit.range.getStartPosition())) {\n                const last = edits[edits.length - 1];\n                edits[edits.length - 1] = ( new SingleTextEdit(last.range.plusRange(edit.range), last.text + edit.text));\n            }\n            else if (!edit.isEmpty) {\n                edits.push(edit);\n            }\n        }\n        return ( new TextEdit(edits));\n    }\n    mapPosition(position) {\n        let lineDelta = 0;\n        let curLine = 0;\n        let columnDeltaInCurLine = 0;\n        for (const edit of this.edits) {\n            const start = edit.range.getStartPosition();\n            if (position.isBeforeOrEqual(start)) {\n                break;\n            }\n            const end = edit.range.getEndPosition();\n            const len = TextLength.ofText(edit.text);\n            if (position.isBefore(end)) {\n                const startPos = ( new Position(\n                    start.lineNumber + lineDelta,\n                    start.column + (start.lineNumber + lineDelta === curLine ? columnDeltaInCurLine : 0)\n                ));\n                const endPos = len.addToPosition(startPos);\n                return rangeFromPositions(startPos, endPos);\n            }\n            if (start.lineNumber + lineDelta !== curLine) {\n                columnDeltaInCurLine = 0;\n            }\n            lineDelta += len.lineCount - (edit.range.endLineNumber - edit.range.startLineNumber);\n            if (len.lineCount === 0) {\n                if (end.lineNumber !== start.lineNumber) {\n                    columnDeltaInCurLine += len.columnCount - (end.column - 1);\n                }\n                else {\n                    columnDeltaInCurLine += len.columnCount - (end.column - start.column);\n                }\n            }\n            else {\n                columnDeltaInCurLine = len.columnCount;\n            }\n            curLine = end.lineNumber + lineDelta;\n        }\n        return ( new Position(\n            position.lineNumber + lineDelta,\n            position.column + (position.lineNumber + lineDelta === curLine ? columnDeltaInCurLine : 0)\n        ));\n    }\n    mapRange(range) {\n        function getStart(p) {\n            return p instanceof Position ? p : p.getStartPosition();\n        }\n        function getEnd(p) {\n            return p instanceof Position ? p : p.getEndPosition();\n        }\n        const start = getStart(this.mapPosition(range.getStartPosition()));\n        const end = getEnd(this.mapPosition(range.getEndPosition()));\n        return rangeFromPositions(start, end);\n    }\n    inverseMapPosition(positionAfterEdit, doc) {\n        const reversed = this.inverse(doc);\n        return reversed.mapPosition(positionAfterEdit);\n    }\n    inverseMapRange(range, doc) {\n        const reversed = this.inverse(doc);\n        return reversed.mapRange(range);\n    }\n    apply(text) {\n        let result = '';\n        let lastEditEnd = ( new Position(1, 1));\n        for (const edit of this.edits) {\n            const editRange = edit.range;\n            const editStart = editRange.getStartPosition();\n            const editEnd = editRange.getEndPosition();\n            const r = rangeFromPositions(lastEditEnd, editStart);\n            if (!r.isEmpty()) {\n                result += text.getValueOfRange(r);\n            }\n            result += edit.text;\n            lastEditEnd = editEnd;\n        }\n        const r = rangeFromPositions(lastEditEnd, text.endPositionExclusive);\n        if (!r.isEmpty()) {\n            result += text.getValueOfRange(r);\n        }\n        return result;\n    }\n    applyToString(str) {\n        const strText = ( new StringText(str));\n        return this.apply(strText);\n    }\n    inverse(doc) {\n        const ranges = this.getNewRanges();\n        return ( new TextEdit(( this.edits.map((e, idx) => ( new SingleTextEdit(ranges[idx], doc.getValueOfRange(e.range)))))));\n    }\n    getNewRanges() {\n        const newRanges = [];\n        let previousEditEndLineNumber = 0;\n        let lineOffset = 0;\n        let columnOffset = 0;\n        for (const edit of this.edits) {\n            const textLength = TextLength.ofText(edit.text);\n            const newRangeStart = Position.lift({\n                lineNumber: edit.range.startLineNumber + lineOffset,\n                column: edit.range.startColumn + (edit.range.startLineNumber === previousEditEndLineNumber ? columnOffset : 0)\n            });\n            const newRange = textLength.createRange(newRangeStart);\n            newRanges.push(newRange);\n            lineOffset = newRange.endLineNumber - edit.range.endLineNumber;\n            columnOffset = newRange.endColumn - edit.range.endColumn;\n            previousEditEndLineNumber = edit.range.endLineNumber;\n        }\n        return newRanges;\n    }\n    toSingle(text) {\n        if (this.edits.length === 0) {\n            throw ( new BugIndicatingError());\n        }\n        if (this.edits.length === 1) {\n            return this.edits[0];\n        }\n        const startPos = this.edits[0].range.getStartPosition();\n        const endPos = this.edits[this.edits.length - 1].range.getEndPosition();\n        let newText = '';\n        for (let i = 0; i < this.edits.length; i++) {\n            const curEdit = this.edits[i];\n            newText += curEdit.text;\n            if (i < this.edits.length - 1) {\n                const nextEdit = this.edits[i + 1];\n                const gapRange = Range.fromPositions(curEdit.range.getEndPosition(), nextEdit.range.getStartPosition());\n                const gapText = text.getValueOfRange(gapRange);\n                newText += gapText;\n            }\n        }\n        return ( new SingleTextEdit(Range.fromPositions(startPos, endPos), newText));\n    }\n    equals(other) {\n        return equals(this.edits, other.edits, (a, b) => a.equals(b));\n    }\n}\nclass SingleTextEdit {\n    static joinEdits(edits, initialValue) {\n        if (edits.length === 0) {\n            throw ( new BugIndicatingError());\n        }\n        if (edits.length === 1) {\n            return edits[0];\n        }\n        const startPos = edits[0].range.getStartPosition();\n        const endPos = edits[edits.length - 1].range.getEndPosition();\n        let newText = '';\n        for (let i = 0; i < edits.length; i++) {\n            const curEdit = edits[i];\n            newText += curEdit.text;\n            if (i < edits.length - 1) {\n                const nextEdit = edits[i + 1];\n                const gapRange = Range.fromPositions(curEdit.range.getEndPosition(), nextEdit.range.getStartPosition());\n                const gapText = initialValue.getValueOfRange(gapRange);\n                newText += gapText;\n            }\n        }\n        return ( new SingleTextEdit(Range.fromPositions(startPos, endPos), newText));\n    }\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    get isEmpty() {\n        return this.range.isEmpty() && this.text.length === 0;\n    }\n    static equals(first, second) {\n        return first.range.equalsRange(second.range) && first.text === second.text;\n    }\n    toSingleEditOperation() {\n        return {\n            range: this.range,\n            text: this.text,\n        };\n    }\n    toEdit() {\n        return ( new TextEdit([this]));\n    }\n    equals(other) {\n        return SingleTextEdit.equals(this, other);\n    }\n    extendToCoverRange(range, initialValue) {\n        if (this.range.containsRange(range)) {\n            return this;\n        }\n        const newRange = this.range.plusRange(range);\n        const textBefore = initialValue.getValueOfRange(Range.fromPositions(newRange.getStartPosition(), this.range.getStartPosition()));\n        const textAfter = initialValue.getValueOfRange(Range.fromPositions(this.range.getEndPosition(), newRange.getEndPosition()));\n        const newText = textBefore + this.text + textAfter;\n        return ( new SingleTextEdit(newRange, newText));\n    }\n    extendToFullLine(initialValue) {\n        const newRange = ( new Range(\n            this.range.startLineNumber,\n            1,\n            this.range.endLineNumber,\n            initialValue.getTransformer().getLineLength(this.range.endLineNumber) + 1\n        ));\n        return this.extendToCoverRange(newRange, initialValue);\n    }\n    removeCommonPrefix(text) {\n        const normalizedOriginalText = text.getValueOfRange(this.range).replaceAll('\\r\\n', '\\n');\n        const normalizedModifiedText = this.text.replaceAll('\\r\\n', '\\n');\n        const commonPrefixLen = commonPrefixLength(normalizedOriginalText, normalizedModifiedText);\n        const start = TextLength.ofText(normalizedOriginalText.substring(0, commonPrefixLen))\n            .addToPosition(this.range.getStartPosition());\n        const newText = normalizedModifiedText.substring(commonPrefixLen);\n        const range = Range.fromPositions(start, this.range.getEndPosition());\n        return ( new SingleTextEdit(range, newText));\n    }\n    isEffectiveDeletion(text) {\n        let newText = this.text.replaceAll('\\r\\n', '\\n');\n        let existingText = text.getValueOfRange(this.range).replaceAll('\\r\\n', '\\n');\n        const l = commonPrefixLength(newText, existingText);\n        newText = newText.substring(l);\n        existingText = existingText.substring(l);\n        const r = commonSuffixLength(newText, existingText);\n        newText = newText.substring(0, newText.length - r);\n        existingText = existingText.substring(0, existingText.length - r);\n        return newText === '';\n    }\n}\nfunction rangeFromPositions(start, end) {\n    if (start.lineNumber === end.lineNumber && start.column === Number.MAX_SAFE_INTEGER) {\n        return Range.fromPositions(end, end);\n    }\n    else if (!start.isBeforeOrEqual(end)) {\n        throw ( new BugIndicatingError('start must be before end'));\n    }\n    return ( new Range(start.lineNumber, start.column, end.lineNumber, end.column));\n}\nclass AbstractText {\n    constructor() {\n        this._transformer = undefined;\n    }\n    get endPositionExclusive() {\n        return this.length.addToPosition(( new Position(1, 1)));\n    }\n    get lineRange() {\n        return this.length.toLineRange();\n    }\n    getValue() {\n        return this.getValueOfRange(this.length.toRange());\n    }\n    getLineLength(lineNumber) {\n        return this.getValueOfRange(( new Range(lineNumber, 1, lineNumber, Number.MAX_SAFE_INTEGER))).length;\n    }\n    getTransformer() {\n        if (!this._transformer) {\n            this._transformer = ( new PositionOffsetTransformer(this.getValue()));\n        }\n        return this._transformer;\n    }\n    getLineAt(lineNumber) {\n        return this.getValueOfRange(( new Range(lineNumber, 1, lineNumber, Number.MAX_SAFE_INTEGER)));\n    }\n    getLines() {\n        const value = this.getValue();\n        return splitLines(value);\n    }\n}\nclass LineBasedText extends AbstractText {\n    constructor(_getLineContent, _lineCount) {\n        assert(_lineCount >= 1);\n        super();\n        this._getLineContent = _getLineContent;\n        this._lineCount = _lineCount;\n    }\n    getValueOfRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._getLineContent(range.startLineNumber).substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        let result = this._getLineContent(range.startLineNumber).substring(range.startColumn - 1);\n        for (let i = range.startLineNumber + 1; i < range.endLineNumber; i++) {\n            result += '\\n' + this._getLineContent(i);\n        }\n        result += '\\n' + this._getLineContent(range.endLineNumber).substring(0, range.endColumn - 1);\n        return result;\n    }\n    getLineLength(lineNumber) {\n        return this._getLineContent(lineNumber).length;\n    }\n    get length() {\n        const lastLine = this._getLineContent(this._lineCount);\n        return ( new TextLength(this._lineCount - 1, lastLine.length));\n    }\n}\nclass ArrayText extends LineBasedText {\n    constructor(lines) {\n        super(lineNumber => lines[lineNumber - 1], lines.length);\n    }\n}\nclass StringText extends AbstractText {\n    constructor(value) {\n        super();\n        this.value = value;\n        this._t = ( new PositionOffsetTransformer(this.value));\n    }\n    getValueOfRange(range) {\n        return this._t.getOffsetRange(range).substring(this.value);\n    }\n    get length() {\n        return this._t.textLength;\n    }\n}\n\nexport { AbstractText, ArrayText, LineBasedText, SingleTextEdit, StringText, TextEdit };\n","\nimport { groupAdjacentBy } from '../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { SingleTextEdit } from '../core/textEdit.js';\n\nclass LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = ( new LineRangeMapping(( new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber)), ( new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber))));\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = ( new LineRangeMapping(( new LineRange(lastOriginalEndLineNumber, originalLineCount + 1)), ( new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1))));\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    static clip(mapping, originalRange, modifiedRange) {\n        const result = [];\n        for (const m of mapping) {\n            const original = m.original.intersect(originalRange);\n            const modified = m.modified.intersect(modifiedRange);\n            if (original && !original.isEmpty && modified && !modified.isEmpty) {\n                result.push(( new LineRangeMapping(original, modified)));\n            }\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${( this.original.toString())}->${( this.modified.toString())}}`;\n    }\n    flip() {\n        return ( new LineRangeMapping(this.modified, this.original));\n    }\n    join(other) {\n        return ( new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified)));\n    }\n    get changedLineCount() {\n        return Math.max(this.original.length, this.modified.length);\n    }\n    toRangeMapping() {\n        const origInclusiveRange = this.original.toInclusiveRange();\n        const modInclusiveRange = this.modified.toInclusiveRange();\n        if (origInclusiveRange && modInclusiveRange) {\n            return ( new RangeMapping(origInclusiveRange, modInclusiveRange));\n        }\n        else if (this.original.startLineNumber === 1 || this.modified.startLineNumber === 1) {\n            if (!(this.modified.startLineNumber === 1 && this.original.startLineNumber === 1)) {\n                throw ( new BugIndicatingError('not a valid diff'));\n            }\n            return ( new RangeMapping(( new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1)), ( new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1))));\n        }\n        else {\n            return ( new RangeMapping(( new Range(\n                this.original.startLineNumber - 1,\n                Number.MAX_SAFE_INTEGER,\n                this.original.endLineNumberExclusive - 1,\n                Number.MAX_SAFE_INTEGER\n            )), ( new Range(\n                this.modified.startLineNumber - 1,\n                Number.MAX_SAFE_INTEGER,\n                this.modified.endLineNumberExclusive - 1,\n                Number.MAX_SAFE_INTEGER\n            ))));\n        }\n    }\n    toRangeMapping2(original, modified) {\n        if (isValidLineNumber(this.original.endLineNumberExclusive, original)\n            && isValidLineNumber(this.modified.endLineNumberExclusive, modified)) {\n            return ( new RangeMapping(( new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1)), ( new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1))));\n        }\n        if (!this.original.isEmpty && !this.modified.isEmpty) {\n            return ( new RangeMapping(Range.fromPositions(( new Position(this.original.startLineNumber, 1)), normalizePosition(( new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER)), original)), Range.fromPositions(( new Position(this.modified.startLineNumber, 1)), normalizePosition(( new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER)), modified))));\n        }\n        if (this.original.startLineNumber > 1 && this.modified.startLineNumber > 1) {\n            return ( new RangeMapping(Range.fromPositions(normalizePosition(( new Position(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER)), original), normalizePosition(( new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER)), original)), Range.fromPositions(normalizePosition(( new Position(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER)), modified), normalizePosition(( new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER)), modified))));\n        }\n        throw ( new BugIndicatingError());\n    }\n}\nfunction normalizePosition(position, content) {\n    if (position.lineNumber < 1) {\n        return ( new Position(1, 1));\n    }\n    if (position.lineNumber > content.length) {\n        return ( new Position(content.length, content[content.length - 1].length + 1));\n    }\n    const line = content[position.lineNumber - 1];\n    if (position.column > line.length + 1) {\n        return ( new Position(position.lineNumber, line.length + 1));\n    }\n    return position;\n}\nfunction isValidLineNumber(lineNumber, lines) {\n    return lineNumber >= 1 && lineNumber <= lines.length;\n}\nclass DetailedLineRangeMapping extends LineRangeMapping {\n    static fromRangeMappings(rangeMappings) {\n        const originalRange = LineRange.join(( rangeMappings.map(r => LineRange.fromRangeInclusive(r.originalRange))));\n        const modifiedRange = LineRange.join(( rangeMappings.map(r => LineRange.fromRangeInclusive(r.modifiedRange))));\n        return ( new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings));\n    }\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        return ( new DetailedLineRangeMapping(this.modified, this.original, this.innerChanges?.map(c => c.flip())));\n    }\n    withInnerChangesFromLineRanges() {\n        return ( new DetailedLineRangeMapping(this.original, this.modified, [this.toRangeMapping()]));\n    }\n}\nclass RangeMapping {\n    static fromEdit(edit) {\n        const newRanges = edit.getNewRanges();\n        const result = ( edit.edits.map((e, idx) => ( new RangeMapping(e.range, newRanges[idx]))));\n        return result;\n    }\n    static fromEditJoin(edit) {\n        const newRanges = edit.getNewRanges();\n        const result = ( edit.edits.map((e, idx) => ( new RangeMapping(e.range, newRanges[idx]))));\n        return RangeMapping.join(result);\n    }\n    static join(rangeMappings) {\n        if (rangeMappings.length === 0) {\n            throw ( new BugIndicatingError('Cannot join an empty list of range mappings'));\n        }\n        let result = rangeMappings[0];\n        for (let i = 1; i < rangeMappings.length; i++) {\n            result = result.join(rangeMappings[i]);\n        }\n        return result;\n    }\n    static assertSorted(rangeMappings) {\n        for (let i = 1; i < rangeMappings.length; i++) {\n            const previous = rangeMappings[i - 1];\n            const current = rangeMappings[i];\n            if (!(previous.originalRange.getEndPosition().isBeforeOrEqual(current.originalRange.getStartPosition())\n                && previous.modifiedRange.getEndPosition().isBeforeOrEqual(current.modifiedRange.getStartPosition()))) {\n                throw ( new BugIndicatingError('Range mappings must be sorted'));\n            }\n        }\n    }\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${( this.originalRange.toString())}->${( this.modifiedRange.toString())}}`;\n    }\n    flip() {\n        return ( new RangeMapping(this.modifiedRange, this.originalRange));\n    }\n    toTextEdit(modified) {\n        const newText = modified.getValueOfRange(this.modifiedRange);\n        return ( new SingleTextEdit(this.originalRange, newText));\n    }\n    join(other) {\n        return ( new RangeMapping(\n            this.originalRange.plusRange(other.originalRange),\n            this.modifiedRange.plusRange(other.modifiedRange)\n        ));\n    }\n}\nfunction lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine = false) {\n    const changes = [];\n    for (const g of groupAdjacentBy(( alignments.map(a => getLineRangeMapping(a, originalLines, modifiedLines))), (a1, a2) => a1.original.overlapOrTouch(a2.original)\n        || a1.modified.overlapOrTouch(a2.modified))) {\n        const first = g[0];\n        const last = g[g.length - 1];\n        changes.push(( new DetailedLineRangeMapping(\n            first.original.join(last.original),\n            first.modified.join(last.modified),\n            ( g.map(a => a.innerChanges[0]))\n        )));\n    }\n    assertFn(() => {\n        if (!dontAssertStartLine && changes.length > 0) {\n            if (changes[0].modified.startLineNumber !== changes[0].original.startLineNumber) {\n                return false;\n            }\n            if (modifiedLines.length.lineCount - changes[changes.length - 1].modified.endLineNumberExclusive !== originalLines.length.lineCount - changes[changes.length - 1].original.endLineNumberExclusive) {\n                return false;\n            }\n        }\n        return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n            m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n            m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n    });\n    return changes;\n}\nfunction getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    let lineStartDelta = 0;\n    let lineEndDelta = 0;\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1\n        && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber\n        && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n        lineEndDelta = -1;\n    }\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines.getLineLength(rangeMapping.modifiedRange.startLineNumber)\n        && rangeMapping.originalRange.startColumn - 1 >= originalLines.getLineLength(rangeMapping.originalRange.startLineNumber)\n        && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta\n        && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n        lineStartDelta = 1;\n    }\n    const originalLineRange = ( new LineRange(\n        rangeMapping.originalRange.startLineNumber + lineStartDelta,\n        rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta\n    ));\n    const modifiedLineRange = ( new LineRange(\n        rangeMapping.modifiedRange.startLineNumber + lineStartDelta,\n        rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta\n    ));\n    return ( new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]));\n}\n\nexport { DetailedLineRangeMapping, LineRangeMapping, RangeMapping, getLineRangeMapping, lineRangeMappingFromRangeMappings };\n","\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport { LinesDiff } from './linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping } from './rangeMapping.js';\nimport { firstNonWhitespaceIndex, lastNonWhitespaceIndex } from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { LineRange } from '../core/lineRange.js';\n\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nclass LegacyLinesDiffComputer {\n    computeDiff(originalLines, modifiedLines, options) {\n        const diffComputer = ( new DiffComputer(originalLines, modifiedLines, {\n            maxComputationTime: options.maxComputationTimeMs,\n            shouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n            shouldComputeCharChanges: true,\n            shouldMakePrettyDiff: true,\n            shouldPostProcessCharChanges: true,\n        }));\n        const result = diffComputer.computeDiff();\n        const changes = [];\n        let lastChange = null;\n        for (const c of result.changes) {\n            let originalRange;\n            if (c.originalEndLineNumber === 0) {\n                originalRange = ( new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1));\n            }\n            else {\n                originalRange = ( new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1));\n            }\n            let modifiedRange;\n            if (c.modifiedEndLineNumber === 0) {\n                modifiedRange = ( new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1));\n            }\n            else {\n                modifiedRange = ( new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1));\n            }\n            let change = ( new DetailedLineRangeMapping(originalRange, modifiedRange, c.charChanges?.map(c => ( new RangeMapping(( new Range(\n                c.originalStartLineNumber,\n                c.originalStartColumn,\n                c.originalEndLineNumber,\n                c.originalEndColumn\n            )), ( new Range(\n                c.modifiedStartLineNumber,\n                c.modifiedStartColumn,\n                c.modifiedEndLineNumber,\n                c.modifiedEndColumn\n            )))))));\n            if (lastChange) {\n                if (lastChange.modified.endLineNumberExclusive === change.modified.startLineNumber\n                    || lastChange.original.endLineNumberExclusive === change.original.startLineNumber) {\n                    change = ( new DetailedLineRangeMapping(\n                        lastChange.original.join(change.original),\n                        lastChange.modified.join(change.modified),\n                        lastChange.innerChanges && change.innerChanges ?\n                            lastChange.innerChanges.concat(change.innerChanges) : undefined\n                    ));\n                    changes.pop();\n                }\n            }\n            changes.push(change);\n            lastChange = change;\n        }\n        assertFn(() => {\n            return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n                m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n                m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n        });\n        return ( new LinesDiff(changes, [], result.quitEarly));\n    }\n}\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = ( new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate));\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n            if (!shouldIgnoreTrimWhitespace && index < endIndex) {\n                charCodes[len] = CharCode.LineFeed;\n                lineNumbers[len] = index + 1;\n                columns[len] = lineContent.length + 1;\n                len++;\n            }\n        }\n        return ( new CharSequence(charCodes, lineNumbers, columns));\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    toString() {\n        return ('[' + ( this._charCodes.map(\n            (s, idx) => (s === CharCode.LineFeed ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`\n        )).join(', ') + ']');\n    }\n    _assertIndex(index, arr) {\n        if (index < 0 || index >= arr.length) {\n            throw ( new Error(`Illegal index`));\n        }\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        if (i > 0 && i === this._lineNumbers.length) {\n            return this.getEndLineNumber(i - 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        return this._lineNumbers[i];\n    }\n    getEndLineNumber(i) {\n        if (i === -1) {\n            return this.getStartLineNumber(i + 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        if (this._charCodes[i] === CharCode.LineFeed) {\n            return this._lineNumbers[i] + 1;\n        }\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        if (i > 0 && i === this._columns.length) {\n            return this.getEndColumn(i - 1);\n        }\n        this._assertIndex(i, this._columns);\n        return this._columns[i];\n    }\n    getEndColumn(i) {\n        if (i === -1) {\n            return this.getStartColumn(i + 1);\n        }\n        this._assertIndex(i, this._columns);\n        if (this._charCodes[i] === CharCode.LineFeed) {\n            return 1;\n        }\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        const originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n        const originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n        const originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        const originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        const modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n        const modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n        const modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        const modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        return ( new CharChange(\n            originalStartLineNumber,\n            originalStartColumn,\n            originalEndLineNumber,\n            originalEndColumn,\n            modifiedStartLineNumber,\n            modifiedStartColumn,\n            modifiedEndLineNumber,\n            modifiedEndColumn\n        ));\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            if (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n                let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (let i = 0, length = rawChanges.length; i < length; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return ( new LineChange(\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges\n        ));\n    }\n}\nclass DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = ( new LineSequence(originalLines));\n        this.modified = ( new LineSequence(modifiedLines));\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000));\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 , len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [( new CharChange(\n                originalLineNumber,\n                originalStartColumn,\n                originalLineNumber,\n                originalEndColumn,\n                modifiedLineNumber,\n                modifiedStartColumn,\n                modifiedLineNumber,\n                modifiedEndColumn\n            ))];\n        }\n        result.push(( new LineChange(\n            originalLineNumber,\n            originalLineNumber,\n            modifiedLineNumber,\n            modifiedLineNumber,\n            charChanges\n        )));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            return false;\n        }\n        if (prevChange.originalEndLineNumber === originalLineNumber && prevChange.modifiedEndLineNumber === modifiedLineNumber) {\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(( new CharChange(\n                    originalLineNumber,\n                    originalStartColumn,\n                    originalLineNumber,\n                    originalEndColumn,\n                    modifiedLineNumber,\n                    modifiedStartColumn,\n                    modifiedLineNumber,\n                    modifiedEndColumn\n                )));\n            }\n            return true;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(( new CharChange(\n                    originalLineNumber,\n                    originalStartColumn,\n                    originalLineNumber,\n                    originalEndColumn,\n                    modifiedLineNumber,\n                    modifiedStartColumn,\n                    modifiedLineNumber,\n                    modifiedEndColumn\n                )));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n\nexport { DiffComputer, LegacyLinesDiffComputer };\n","\nimport { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\n\nclass DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return ( new DiffAlgorithmResult([( new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length)))], false));\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return ( new DiffAlgorithmResult([( new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length)))], true));\n    }\n    constructor(diffs,\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nclass SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : ( new OffsetPair(\n                doc1Length,\n                (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length\n            ))));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return ( new SequenceDiff(( new OffsetRange(start.offset1, endExclusive.offset1)), ( new OffsetRange(start.offset2, endExclusive.offset2))));\n    }\n    static assertSorted(sequenceDiffs) {\n        let last = undefined;\n        for (const cur of sequenceDiffs) {\n            if (last) {\n                if (!(last.seq1Range.endExclusive <= cur.seq1Range.start && last.seq2Range.endExclusive <= cur.seq2Range.start)) {\n                    throw ( new BugIndicatingError('Sequence diffs must be sorted'));\n                }\n            }\n            last = cur;\n        }\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return ( new SequenceDiff(this.seq2Range, this.seq1Range));\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return ( new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range)));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset)));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset)));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset)));\n    }\n    intersectsOrTouches(other) {\n        return this.seq1Range.intersectsOrTouches(other.seq1Range) || this.seq2Range.intersectsOrTouches(other.seq2Range);\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return ( new SequenceDiff(i1, i2));\n    }\n    getStarts() {\n        return ( new OffsetPair(this.seq1Range.start, this.seq2Range.start));\n    }\n    getEndExclusives() {\n        return ( new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive));\n    }\n}\nclass OffsetPair {\n    static { this.zero = ( new OffsetPair(0, 0)); }\n    static { this.max = ( new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER)); }\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new OffsetPair(this.offset1 + offset, this.offset2 + offset));\n    }\n    equals(other) {\n        return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n}\nclass InfiniteTimeout {\n    static { this.instance = ( new InfiniteTimeout()); }\n    isValid() {\n        return true;\n    }\n}\nclass DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw ( new BugIndicatingError('timeout must be positive'));\n        }\n    }\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false;\n        }\n        return this.valid;\n    }\n    disable() {\n        this.timeout = Number.MAX_SAFE_INTEGER;\n        this.isValid = () => true;\n        this.valid = true;\n    }\n}\n\nexport { DateTimeout, DiffAlgorithmResult, InfiniteTimeout, OffsetPair, SequenceDiff };\n","\nimport { CharCode } from '../../../../base/common/charCode.js';\n\nclass Array2D {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.array = [];\n        this.array = ( new Array(width * height));\n    }\n    get(x, y) {\n        return this.array[x + y * this.width];\n    }\n    set(x, y, value) {\n        this.array[x + y * this.width] = value;\n    }\n}\nfunction isSpace(charCode) {\n    return charCode === CharCode.Space || charCode === CharCode.Tab;\n}\nclass LineRangeFragment {\n    static { this.chrKeys = ( new Map()); }\n    static getKey(chr) {\n        let key = this.chrKeys.get(chr);\n        if (key === undefined) {\n            key = this.chrKeys.size;\n            this.chrKeys.set(chr, key);\n        }\n        return key;\n    }\n    constructor(range, lines, source) {\n        this.range = range;\n        this.lines = lines;\n        this.source = source;\n        this.histogram = [];\n        let counter = 0;\n        for (let i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n            const line = lines[i];\n            for (let j = 0; j < line.length; j++) {\n                counter++;\n                const chr = line[j];\n                const key = LineRangeFragment.getKey(chr);\n                this.histogram[key] = (this.histogram[key] || 0) + 1;\n            }\n            counter++;\n            const key = LineRangeFragment.getKey('\\n');\n            this.histogram[key] = (this.histogram[key] || 0) + 1;\n        }\n        this.totalCount = counter;\n    }\n    computeSimilarity(other) {\n        let sumDifferences = 0;\n        const maxLength = Math.max(this.histogram.length, other.histogram.length);\n        for (let i = 0; i < maxLength; i++) {\n            sumDifferences += Math.abs((this.histogram[i] ?? 0) - (other.histogram[i] ?? 0));\n        }\n        return 1 - (sumDifferences / (this.totalCount + other.totalCount));\n    }\n}\n\nexport { Array2D, LineRangeFragment, isSpace };\n","\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { InfiniteTimeout, DiffAlgorithmResult, SequenceDiff } from './diffAlgorithm.js';\nimport { Array2D } from '../utils.js';\n\nclass DynamicProgrammingDiffing {\n    compute(sequence1, sequence2, timeout = InfiniteTimeout.instance, equalityScore) {\n        if (sequence1.length === 0 || sequence2.length === 0) {\n            return DiffAlgorithmResult.trivial(sequence1, sequence2);\n        }\n        const lcsLengths = ( new Array2D(sequence1.length, sequence2.length));\n        const directions = ( new Array2D(sequence1.length, sequence2.length));\n        const lengths = ( new Array2D(sequence1.length, sequence2.length));\n        for (let s1 = 0; s1 < sequence1.length; s1++) {\n            for (let s2 = 0; s2 < sequence2.length; s2++) {\n                if (!timeout.isValid()) {\n                    return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n                }\n                const horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n                const verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n                let extendedSeqScore;\n                if (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n                    if (s1 === 0 || s2 === 0) {\n                        extendedSeqScore = 0;\n                    }\n                    else {\n                        extendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n                    }\n                    if (s1 > 0 && s2 > 0 && directions.get(s1 - 1, s2 - 1) === 3) {\n                        extendedSeqScore += lengths.get(s1 - 1, s2 - 1);\n                    }\n                    extendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n                }\n                else {\n                    extendedSeqScore = -1;\n                }\n                const newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n                if (newValue === extendedSeqScore) {\n                    const prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n                    lengths.set(s1, s2, prevLen + 1);\n                    directions.set(s1, s2, 3);\n                }\n                else if (newValue === horizontalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 1);\n                }\n                else if (newValue === verticalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 2);\n                }\n                lcsLengths.set(s1, s2, newValue);\n            }\n        }\n        const result = [];\n        let lastAligningPosS1 = sequence1.length;\n        let lastAligningPosS2 = sequence2.length;\n        function reportDecreasingAligningPositions(s1, s2) {\n            if (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n                result.push(( new SequenceDiff(( new OffsetRange(s1 + 1, lastAligningPosS1)), ( new OffsetRange(s2 + 1, lastAligningPosS2)))));\n            }\n            lastAligningPosS1 = s1;\n            lastAligningPosS2 = s2;\n        }\n        let s1 = sequence1.length - 1;\n        let s2 = sequence2.length - 1;\n        while (s1 >= 0 && s2 >= 0) {\n            if (directions.get(s1, s2) === 3) {\n                reportDecreasingAligningPositions(s1, s2);\n                s1--;\n                s2--;\n            }\n            else {\n                if (directions.get(s1, s2) === 1) {\n                    s1--;\n                }\n                else {\n                    s2--;\n                }\n            }\n        }\n        reportDecreasingAligningPositions(-1, -1);\n        result.reverse();\n        return ( new DiffAlgorithmResult(result, false));\n    }\n}\n\nexport { DynamicProgrammingDiffing };\n","\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { InfiniteTimeout, DiffAlgorithmResult, SequenceDiff } from './diffAlgorithm.js';\n\nclass MyersDiffAlgorithm {\n    compute(seq1, seq2, timeout = InfiniteTimeout.instance) {\n        if (seq1.length === 0 || seq2.length === 0) {\n            return DiffAlgorithmResult.trivial(seq1, seq2);\n        }\n        const seqX = seq1;\n        const seqY = seq2;\n        function getXAfterSnake(x, y) {\n            while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n                x++;\n                y++;\n            }\n            return x;\n        }\n        let d = 0;\n        const V = ( new FastInt32Array());\n        V.set(0, getXAfterSnake(0, 0));\n        const paths = ( new FastArrayNegativeIndices());\n        paths.set(0, V.get(0) === 0 ? null : ( new SnakePath(null, 0, 0, V.get(0))));\n        let k = 0;\n        loop: while (true) {\n            d++;\n            if (!timeout.isValid()) {\n                return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n            }\n            const lowerBound = -Math.min(d, seqY.length + (d % 2));\n            const upperBound = Math.min(d, seqX.length + (d % 2));\n            for (k = lowerBound; k <= upperBound; k += 2) {\n                const maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1);\n                const maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1;\n                const x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n                const y = x - k;\n                if (x > seqX.length || y > seqY.length) {\n                    continue;\n                }\n                const newMaxX = getXAfterSnake(x, y);\n                V.set(k, newMaxX);\n                const lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n                paths.set(k, newMaxX !== x ? ( new SnakePath(lastPath, x, y, newMaxX - x)) : lastPath);\n                if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n                    break loop;\n                }\n            }\n        }\n        let path = paths.get(k);\n        const result = [];\n        let lastAligningPosS1 = seqX.length;\n        let lastAligningPosS2 = seqY.length;\n        while (true) {\n            const endX = path ? path.x + path.length : 0;\n            const endY = path ? path.y + path.length : 0;\n            if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n                result.push(( new SequenceDiff(( new OffsetRange(endX, lastAligningPosS1)), ( new OffsetRange(endY, lastAligningPosS2)))));\n            }\n            if (!path) {\n                break;\n            }\n            lastAligningPosS1 = path.x;\n            lastAligningPosS2 = path.y;\n            path = path.prev;\n        }\n        result.reverse();\n        return ( new DiffAlgorithmResult(result, false));\n    }\n}\nclass SnakePath {\n    constructor(prev, x, y, length) {\n        this.prev = prev;\n        this.x = x;\n        this.y = y;\n        this.length = length;\n    }\n}\nclass FastInt32Array {\n    constructor() {\n        this.positiveArr = ( new Int32Array(10));\n        this.negativeArr = ( new Int32Array(10));\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            if (idx >= this.negativeArr.length) {\n                const arr = this.negativeArr;\n                this.negativeArr = ( new Int32Array(arr.length * 2));\n                this.negativeArr.set(arr);\n            }\n            this.negativeArr[idx] = value;\n        }\n        else {\n            if (idx >= this.positiveArr.length) {\n                const arr = this.positiveArr;\n                this.positiveArr = ( new Int32Array(arr.length * 2));\n                this.positiveArr.set(arr);\n            }\n            this.positiveArr[idx] = value;\n        }\n    }\n}\nclass FastArrayNegativeIndices {\n    constructor() {\n        this.positiveArr = [];\n        this.negativeArr = [];\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            this.negativeArr[idx] = value;\n        }\n        else {\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n\nexport { MyersDiffAlgorithm };\n","\nimport { findLastIdxMonotonous, findLastMonotonous, findFirstMonotonous } from '../../../../base/common/arraysFind.js';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { isSpace } from './utils.js';\n\nclass LinesSliceCharSequence {\n    constructor(lines, range, considerWhitespaceChanges) {\n        this.lines = lines;\n        this.range = range;\n        this.considerWhitespaceChanges = considerWhitespaceChanges;\n        this.elements = [];\n        this.firstElementOffsetByLineIdx = [];\n        this.lineStartOffsets = [];\n        this.trimmedWsLengthsByLineIdx = [];\n        this.firstElementOffsetByLineIdx.push(0);\n        for (let lineNumber = this.range.startLineNumber; lineNumber <= this.range.endLineNumber; lineNumber++) {\n            let line = lines[lineNumber - 1];\n            let lineStartOffset = 0;\n            if (lineNumber === this.range.startLineNumber && this.range.startColumn > 1) {\n                lineStartOffset = this.range.startColumn - 1;\n                line = line.substring(lineStartOffset);\n            }\n            this.lineStartOffsets.push(lineStartOffset);\n            let trimmedWsLength = 0;\n            if (!considerWhitespaceChanges) {\n                const trimmedStartLine = line.trimStart();\n                trimmedWsLength = line.length - trimmedStartLine.length;\n                line = trimmedStartLine.trimEnd();\n            }\n            this.trimmedWsLengthsByLineIdx.push(trimmedWsLength);\n            const lineLength = lineNumber === this.range.endLineNumber ? Math.min(this.range.endColumn - 1 - lineStartOffset - trimmedWsLength, line.length) : line.length;\n            for (let i = 0; i < lineLength; i++) {\n                this.elements.push(line.charCodeAt(i));\n            }\n            if (lineNumber < this.range.endLineNumber) {\n                this.elements.push('\\n'.charCodeAt(0));\n                this.firstElementOffsetByLineIdx.push(this.elements.length);\n            }\n        }\n    }\n    toString() {\n        return `Slice: \"${this.text}\"`;\n    }\n    get text() {\n        return this.getText(( new OffsetRange(0, this.length)));\n    }\n    getText(range) {\n        return ( this.elements.slice(range.start, range.endExclusive).map(e => String.fromCharCode(e))).join('');\n    }\n    getElement(offset) {\n        return this.elements[offset];\n    }\n    get length() {\n        return this.elements.length;\n    }\n    getBoundaryScore(length) {\n        const prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n        const nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n        if (prevCategory === CharBoundaryCategory.LineBreakCR && nextCategory === CharBoundaryCategory.LineBreakLF) {\n            return 0;\n        }\n        if (prevCategory === CharBoundaryCategory.LineBreakLF) {\n            return 150;\n        }\n        let score = 0;\n        if (prevCategory !== nextCategory) {\n            score += 10;\n            if (prevCategory === CharBoundaryCategory.WordLower && nextCategory === CharBoundaryCategory.WordUpper) {\n                score += 1;\n            }\n        }\n        score += getCategoryBoundaryScore(prevCategory);\n        score += getCategoryBoundaryScore(nextCategory);\n        return score;\n    }\n    translateOffset(offset, preference = 'right') {\n        const i = findLastIdxMonotonous(this.firstElementOffsetByLineIdx, (value) => value <= offset);\n        const lineOffset = offset - this.firstElementOffsetByLineIdx[i];\n        return ( new Position(\n            this.range.startLineNumber + i,\n            1 + this.lineStartOffsets[i] + lineOffset + ((lineOffset === 0 && preference === 'left') ? 0 : this.trimmedWsLengthsByLineIdx[i])\n        ));\n    }\n    translateRange(range) {\n        const pos1 = this.translateOffset(range.start, 'right');\n        const pos2 = this.translateOffset(range.endExclusive, 'left');\n        if (pos2.isBefore(pos1)) {\n            return Range.fromPositions(pos2, pos2);\n        }\n        return Range.fromPositions(pos1, pos2);\n    }\n    findWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1])) {\n            start--;\n        }\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end])) {\n            end++;\n        }\n        return ( new OffsetRange(start, end));\n    }\n    findSubWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1]) && !isUpperCase(this.elements[start])) {\n            start--;\n        }\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end]) && !isUpperCase(this.elements[end])) {\n            end++;\n        }\n        return ( new OffsetRange(start, end));\n    }\n    countLinesIn(range) {\n        return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.elements[offset1] === this.elements[offset2];\n    }\n    extendToFullLines(range) {\n        const start = findLastMonotonous(this.firstElementOffsetByLineIdx, x => x <= range.start) ?? 0;\n        const end = findFirstMonotonous(this.firstElementOffsetByLineIdx, x => range.endExclusive <= x) ?? this.elements.length;\n        return ( new OffsetRange(start, end));\n    }\n}\nfunction isWordChar(charCode) {\n    return charCode >= CharCode.a && charCode <= CharCode.z\n        || charCode >= CharCode.A && charCode <= CharCode.Z\n        || charCode >= CharCode.Digit0 && charCode <= CharCode.Digit9;\n}\nfunction isUpperCase(charCode) {\n    return charCode >= CharCode.A && charCode <= CharCode.Z;\n}\nvar CharBoundaryCategory;\n(function (CharBoundaryCategory) {\n    CharBoundaryCategory[CharBoundaryCategory[\"WordLower\"] = 0] = \"WordLower\";\n    CharBoundaryCategory[CharBoundaryCategory[\"WordUpper\"] = 1] = \"WordUpper\";\n    CharBoundaryCategory[CharBoundaryCategory[\"WordNumber\"] = 2] = \"WordNumber\";\n    CharBoundaryCategory[CharBoundaryCategory[\"End\"] = 3] = \"End\";\n    CharBoundaryCategory[CharBoundaryCategory[\"Other\"] = 4] = \"Other\";\n    CharBoundaryCategory[CharBoundaryCategory[\"Separator\"] = 5] = \"Separator\";\n    CharBoundaryCategory[CharBoundaryCategory[\"Space\"] = 6] = \"Space\";\n    CharBoundaryCategory[CharBoundaryCategory[\"LineBreakCR\"] = 7] = \"LineBreakCR\";\n    CharBoundaryCategory[CharBoundaryCategory[\"LineBreakLF\"] = 8] = \"LineBreakLF\";\n})(CharBoundaryCategory || (CharBoundaryCategory = {}));\nconst score = {\n    [CharBoundaryCategory.WordLower]: 0,\n    [CharBoundaryCategory.WordUpper]: 0,\n    [CharBoundaryCategory.WordNumber]: 0,\n    [CharBoundaryCategory.End]: 10,\n    [CharBoundaryCategory.Other]: 2,\n    [CharBoundaryCategory.Separator]: 30,\n    [CharBoundaryCategory.Space]: 3,\n    [CharBoundaryCategory.LineBreakCR]: 10,\n    [CharBoundaryCategory.LineBreakLF]: 10,\n};\nfunction getCategoryBoundaryScore(category) {\n    return score[category];\n}\nfunction getCategory(charCode) {\n    if (charCode === CharCode.LineFeed) {\n        return CharBoundaryCategory.LineBreakLF;\n    }\n    else if (charCode === CharCode.CarriageReturn) {\n        return CharBoundaryCategory.LineBreakCR;\n    }\n    else if (isSpace(charCode)) {\n        return CharBoundaryCategory.Space;\n    }\n    else if (charCode >= CharCode.a && charCode <= CharCode.z) {\n        return CharBoundaryCategory.WordLower;\n    }\n    else if (charCode >= CharCode.A && charCode <= CharCode.Z) {\n        return CharBoundaryCategory.WordUpper;\n    }\n    else if (charCode >= CharCode.Digit0 && charCode <= CharCode.Digit9) {\n        return CharBoundaryCategory.WordNumber;\n    }\n    else if (charCode === -1) {\n        return CharBoundaryCategory.End;\n    }\n    else if (charCode === CharCode.Comma || charCode === CharCode.Semicolon) {\n        return CharBoundaryCategory.Separator;\n    }\n    else {\n        return CharBoundaryCategory.Other;\n    }\n}\n\nexport { LinesSliceCharSequence };\n","\nimport { SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { LineRangeMapping } from '../rangeMapping.js';\nimport { pushMany, compareBy, numberComparator, reverseOrder } from '../../../../base/common/arrays.js';\nimport { MonotonousArray, findLastMonotonous } from '../../../../base/common/arraysFind.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { LineRange, LineRangeSet } from '../../core/lineRange.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LineRangeFragment, isSpace } from './utils.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { Range } from '../../core/range.js';\n\nfunction computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    let { moves, excludedChanges } = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout);\n    if (!timeout.isValid()) {\n        return [];\n    }\n    const filteredChanges = changes.filter(c => !( excludedChanges.has(c)));\n    const unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    moves = moves.filter(current => {\n        const lines = ( current.original.toOffsetRange().slice(originalLines).map(l => l.trim()));\n        const originalText = lines.join('\\n');\n        return originalText.length >= 15 && countWhere(lines, l => l.length >= 2) >= 2;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n}\nfunction countWhere(arr, predicate) {\n    let count = 0;\n    for (const t of arr) {\n        if (predicate(t)) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const deletions = ( changes\n        .filter(c => c.modified.isEmpty && c.original.length >= 3)\n        .map(d => ( new LineRangeFragment(d.original, originalLines, d))));\n    const insertions = ( new Set(( changes\n        .filter(c => c.original.isEmpty && c.modified.length >= 3)\n        .map(d => ( new LineRangeFragment(d.modified, modifiedLines, d))))));\n    const excludedChanges = ( new Set());\n    for (const deletion of deletions) {\n        let highestSimilarity = -1;\n        let best;\n        for (const insertion of insertions) {\n            const similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n                highestSimilarity = similarity;\n                best = insertion;\n            }\n        }\n        if (highestSimilarity > 0.90 && best) {\n            insertions.delete(best);\n            moves.push(( new LineRangeMapping(deletion.range, best.range)));\n            excludedChanges.add(deletion.source);\n            excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n            return { moves, excludedChanges };\n        }\n    }\n    return { moves, excludedChanges };\n}\nfunction computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const original3LineHashes = ( new SetMap());\n    for (const change of changes) {\n        for (let i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedOriginalLines[i - 1]}:${hashedOriginalLines[i + 1 - 1]}:${hashedOriginalLines[i + 2 - 1]}`;\n            original3LineHashes.add(key, { range: ( new LineRange(i, i + 3)) });\n        }\n    }\n    const possibleMappings = [];\n    changes.sort(compareBy(c => c.modified.startLineNumber, numberComparator));\n    for (const change of changes) {\n        let lastMappings = [];\n        for (let i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedModifiedLines[i - 1]}:${hashedModifiedLines[i + 1 - 1]}:${hashedModifiedLines[i + 2 - 1]}`;\n            const currentModifiedRange = ( new LineRange(i, i + 3));\n            const nextMappings = [];\n            original3LineHashes.forEach(key, ({ range }) => {\n                for (const lastMapping of lastMappings) {\n                    if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive &&\n                        lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                        lastMapping.originalLineRange = ( new LineRange(\n                            lastMapping.originalLineRange.startLineNumber,\n                            range.endLineNumberExclusive\n                        ));\n                        lastMapping.modifiedLineRange = ( new LineRange(\n                            lastMapping.modifiedLineRange.startLineNumber,\n                            currentModifiedRange.endLineNumberExclusive\n                        ));\n                        nextMappings.push(lastMapping);\n                        return;\n                    }\n                }\n                const mapping = {\n                    modifiedLineRange: currentModifiedRange,\n                    originalLineRange: range,\n                };\n                possibleMappings.push(mapping);\n                nextMappings.push(mapping);\n            });\n            lastMappings = nextMappings;\n        }\n        if (!timeout.isValid()) {\n            return [];\n        }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(m => m.modifiedLineRange.length, numberComparator)));\n    const modifiedSet = ( new LineRangeSet());\n    const originalSet = ( new LineRangeSet());\n    for (const mapping of possibleMappings) {\n        const diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        const modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        const originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        const modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        for (const s of modifiedIntersectedSections.ranges) {\n            if (s.length < 3) {\n                continue;\n            }\n            const modifiedLineRange = s;\n            const originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(( new LineRangeMapping(originalLineRange, modifiedLineRange)));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n        }\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const monotonousChanges = ( new MonotonousArray(changes));\n    for (let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        const firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber <= move.original.startLineNumber);\n        const firstTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber <= move.modified.startLineNumber);\n        const linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n        const lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber < move.original.endLineNumberExclusive);\n        const lastTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber < move.modified.endLineNumberExclusive);\n        const linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n        let extendToTop;\n        for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n            const origLine = move.original.startLineNumber - extendToTop - 1;\n            const modLine = move.modified.startLineNumber - extendToTop - 1;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToTop > 0) {\n            originalSet.addRange(( new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber)));\n            modifiedSet.addRange(( new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber)));\n        }\n        let extendToBottom;\n        for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n            const origLine = move.original.endLineNumberExclusive + extendToBottom;\n            const modLine = move.modified.endLineNumberExclusive + extendToBottom;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToBottom > 0) {\n            originalSet.addRange(( new LineRange(\n                move.original.endLineNumberExclusive,\n                move.original.endLineNumberExclusive + extendToBottom\n            )));\n            modifiedSet.addRange(( new LineRange(\n                move.modified.endLineNumberExclusive,\n                move.modified.endLineNumberExclusive + extendToBottom\n            )));\n        }\n        if (extendToTop > 0 || extendToBottom > 0) {\n            moves[i] = ( new LineRangeMapping(( new LineRange(\n                move.original.startLineNumber - extendToTop,\n                move.original.endLineNumberExclusive + extendToBottom\n            )), ( new LineRange(\n                move.modified.startLineNumber - extendToTop,\n                move.modified.endLineNumberExclusive + extendToBottom\n            ))));\n        }\n    }\n    return moves;\n}\nfunction areLinesSimilar(line1, line2, timeout) {\n    if (line1.trim() === line2.trim()) {\n        return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n        return false;\n    }\n    const myersDiffingAlgorithm = ( new MyersDiffAlgorithm());\n    const result = myersDiffingAlgorithm.compute(( new LinesSliceCharSequence([line1], ( new Range(1, 1, 1, line1.length)), false)), ( new LinesSliceCharSequence([line2], ( new Range(1, 1, 1, line2.length)), false)), timeout);\n    let commonNonSpaceCharCount = 0;\n    const inverted = SequenceDiff.invert(result.diffs, line1.length);\n    for (const seq of inverted) {\n        seq.seq1Range.forEach(idx => {\n            if (!isSpace(line1.charCodeAt(idx))) {\n                commonNonSpaceCharCount++;\n            }\n        });\n    }\n    function countNonWsChars(str) {\n        let count = 0;\n        for (let i = 0; i < line1.length; i++) {\n            if (!isSpace(str.charCodeAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    const longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    const r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n}\nfunction joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n        return moves;\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const result = [moves[0]];\n    for (let i = 1; i < moves.length; i++) {\n        const last = result[result.length - 1];\n        const current = moves[i];\n        const originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n        const modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n        const currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n        if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n            result[result.length - 1] = last.join(current);\n            continue;\n        }\n        result.push(current);\n    }\n    return result;\n}\nfunction removeMovesInSameDiff(changes, moves) {\n    const changesMonotonous = ( new MonotonousArray(changes));\n    moves = moves.filter(m => {\n        const diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(c => c.original.startLineNumber < m.original.endLineNumberExclusive)\n            || ( new LineRangeMapping(( new LineRange(1, 1)), ( new LineRange(1, 1))));\n        const diffBeforeEndOfMoveModified = findLastMonotonous(changes, c => c.modified.startLineNumber < m.modified.endLineNumberExclusive);\n        const differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n        return differentDiffs;\n    });\n    return moves;\n}\n\nexport { computeMovedLines };\n","\nimport { forEachWithNeighbors } from '../../../../base/common/arrays.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { SequenceDiff, OffsetPair } from './algorithms/diffAlgorithm.js';\n\nfunction optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    let result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n}\nfunction joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n        return sequenceDiffs;\n    }\n    const result = [];\n    result.push(sequenceDiffs[0]);\n    for (let i = 1; i < sequenceDiffs.length; i++) {\n        const prevResult = result[result.length - 1];\n        let cur = sequenceDiffs[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n            let d;\n            for (d = 1; d <= length; d++) {\n                if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) ||\n                    sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n                    break;\n                }\n            }\n            d--;\n            if (d === length) {\n                result[result.length - 1] = ( new SequenceDiff(( new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length)), ( new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length))));\n                continue;\n            }\n            cur = cur.delta(-d);\n        }\n        result.push(cur);\n    }\n    const result2 = [];\n    for (let i = 0; i < result.length - 1; i++) {\n        const nextResult = result[i + 1];\n        let cur = result[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n            let d;\n            for (d = 0; d < length; d++) {\n                if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) ||\n                    !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n                    break;\n                }\n            }\n            if (d === length) {\n                result[i + 1] = ( new SequenceDiff(( new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive)), ( new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive))));\n                continue;\n            }\n            if (d > 0) {\n                cur = cur.delta(d);\n            }\n        }\n        result2.push(cur);\n    }\n    if (result.length > 0) {\n        result2.push(result[result.length - 1]);\n    }\n    return result2;\n}\nfunction shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n        return sequenceDiffs;\n    }\n    for (let i = 0; i < sequenceDiffs.length; i++) {\n        const prevDiff = (i > 0 ? sequenceDiffs[i - 1] : undefined);\n        const diff = sequenceDiffs[i];\n        const nextDiff = (i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined);\n        const seq1ValidRange = ( new OffsetRange(\n            prevDiff ? prevDiff.seq1Range.endExclusive + 1 : 0,\n            nextDiff ? nextDiff.seq1Range.start - 1 : sequence1.length\n        ));\n        const seq2ValidRange = ( new OffsetRange(\n            prevDiff ? prevDiff.seq2Range.endExclusive + 1 : 0,\n            nextDiff ? nextDiff.seq2Range.start - 1 : sequence2.length\n        ));\n        if (diff.seq1Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n        }\n        else if (diff.seq2Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n        }\n    }\n    return sequenceDiffs;\n}\nfunction shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    const maxShiftLimit = 100;\n    let deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start &&\n        diff.seq2Range.start - deltaBefore >= seq2ValidRange.start &&\n        sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n        deltaBefore++;\n    }\n    deltaBefore--;\n    let deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive &&\n        diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive &&\n        sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n        deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n        return diff;\n    }\n    let bestDelta = 0;\n    let bestScore = -1;\n    for (let delta = -deltaBefore; delta <= deltaAfter; delta++) {\n        const seq2OffsetStart = diff.seq2Range.start + delta;\n        const seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n        const seq1Offset = diff.seq1Range.start + delta;\n        const score = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n        if (score > bestScore) {\n            bestScore = score;\n            bestDelta = delta;\n        }\n    }\n    return diff.delta(bestDelta);\n}\nfunction removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    const result = [];\n    for (const s of sequenceDiffs) {\n        const last = result[result.length - 1];\n        if (!last) {\n            result.push(s);\n            continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n            result[result.length - 1] = ( new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range)));\n        }\n        else {\n            result.push(s);\n        }\n    }\n    return result;\n}\nfunction extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs, findParent, force = false) {\n    const equalMappings = SequenceDiff.invert(sequenceDiffs, sequence1.length);\n    const additional = [];\n    let lastPoint = ( new OffsetPair(0, 0));\n    function scanWord(pair, equalMapping) {\n        if (pair.offset1 < lastPoint.offset1 || pair.offset2 < lastPoint.offset2) {\n            return;\n        }\n        const w1 = findParent(sequence1, pair.offset1);\n        const w2 = findParent(sequence2, pair.offset2);\n        if (!w1 || !w2) {\n            return;\n        }\n        let w = ( new SequenceDiff(w1, w2));\n        const equalPart = w.intersect(equalMapping);\n        let equalChars1 = equalPart.seq1Range.length;\n        let equalChars2 = equalPart.seq2Range.length;\n        while (equalMappings.length > 0) {\n            const next = equalMappings[0];\n            const intersects = next.seq1Range.intersects(w.seq1Range) || next.seq2Range.intersects(w.seq2Range);\n            if (!intersects) {\n                break;\n            }\n            const v1 = findParent(sequence1, next.seq1Range.start);\n            const v2 = findParent(sequence2, next.seq2Range.start);\n            const v = ( new SequenceDiff(v1, v2));\n            const equalPart = v.intersect(next);\n            equalChars1 += equalPart.seq1Range.length;\n            equalChars2 += equalPart.seq2Range.length;\n            w = w.join(v);\n            if (w.seq1Range.endExclusive >= next.seq1Range.endExclusive) {\n                equalMappings.shift();\n            }\n            else {\n                break;\n            }\n        }\n        if ((force && equalChars1 + equalChars2 < w.seq1Range.length + w.seq2Range.length) || equalChars1 + equalChars2 < (w.seq1Range.length + w.seq2Range.length) * 2 / 3) {\n            additional.push(w);\n        }\n        lastPoint = w.getEndExclusives();\n    }\n    while (equalMappings.length > 0) {\n        const next = equalMappings.shift();\n        if (next.seq1Range.isEmpty) {\n            continue;\n        }\n        scanWord(next.getStarts(), next);\n        scanWord(next.getEndExclusives().delta(-1), next);\n    }\n    const merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n}\nfunction mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    const result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n        const sd1 = sequenceDiffs1[0];\n        const sd2 = sequenceDiffs2[0];\n        let next;\n        if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n            next = sequenceDiffs1.shift();\n        }\n        else {\n            next = sequenceDiffs2.shift();\n        }\n        if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n            result[result.length - 1] = result[result.length - 1].join(next);\n        }\n        else {\n            result.push(next);\n        }\n    }\n    return result;\n}\nfunction removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = ( new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start));\n                const unchangedText = sequence1.getText(unchangedRange);\n                const unchangedTextWithoutWs = unchangedText.replace(/\\s/g, '');\n                if (unchangedTextWithoutWs.length <= 4\n                    && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n}\nfunction removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = ( new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start));\n                const unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n                if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n                    return false;\n                }\n                const unchangedText = sequence1.getText(unchangedRange).trim();\n                if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n                    return false;\n                }\n                const beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n                const beforeSeq1Length = before.seq1Range.length;\n                const beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n                const beforeSeq2Length = before.seq2Range.length;\n                const afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n                const afterSeq1Length = after.seq1Range.length;\n                const afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n                const afterSeq2Length = after.seq2Range.length;\n                const max = 2 * 40 + 50;\n                function cap(v) {\n                    return Math.min(v, max);\n                }\n                if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5)\n                    + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > ((max ** 1.5) ** 1.5) * 1.3) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    const newDiffs = [];\n    forEachWithNeighbors(diffs, (prev, cur, next) => {\n        let newDiff = cur;\n        function shouldMarkAsChanged(text) {\n            return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n        }\n        const fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n        const prefix = sequence1.getText(( new OffsetRange(fullRange1.start, cur.seq1Range.start)));\n        if (shouldMarkAsChanged(prefix)) {\n            newDiff = newDiff.deltaStart(-prefix.length);\n        }\n        const suffix = sequence1.getText(( new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive)));\n        if (shouldMarkAsChanged(suffix)) {\n            newDiff = newDiff.deltaEnd(suffix.length);\n        }\n        const availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n        const result = newDiff.intersect(availableSpace);\n        if (newDiffs.length > 0 && result.getStarts().equals(newDiffs[newDiffs.length - 1].getEndExclusives())) {\n            newDiffs[newDiffs.length - 1] = newDiffs[newDiffs.length - 1].join(result);\n        }\n        else {\n            newDiffs.push(result);\n        }\n    });\n    return newDiffs;\n}\n\nexport { extendDiffsToEntireWordIfAppropriate, optimizeSequenceDiffs, removeShortMatches, removeVeryShortMatchingLinesBetweenDiffs, removeVeryShortMatchingTextBetweenLongDiffs };\n","\nimport { CharCode } from '../../../../base/common/charCode.js';\n\nclass LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === CharCode.Space || str.charCodeAt(i) === CharCode.Tab)) {\n        i++;\n    }\n    return i;\n}\n\nexport { LineSequence };\n","\nimport { equals } from '../../../../base/common/arrays.js';\nimport { assertFn } from '../../../../base/common/assert.js';\nimport { LineRange } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Range } from '../../core/range.js';\nimport { ArrayText } from '../../core/textEdit.js';\nimport { LinesDiff, MovedText } from '../linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, lineRangeMappingFromRangeMappings, LineRangeMapping } from '../rangeMapping.js';\nimport { InfiniteTimeout, DateTimeout, SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { DynamicProgrammingDiffing } from './algorithms/dynamicProgrammingDiffing.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { computeMovedLines } from './computeMovedLines.js';\nimport { optimizeSequenceDiffs, removeVeryShortMatchingLinesBetweenDiffs, extendDiffsToEntireWordIfAppropriate, removeShortMatches, removeVeryShortMatchingTextBetweenLongDiffs } from './heuristicSequenceOptimizations.js';\nimport { LineSequence } from './lineSequence.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\n\nclass DefaultLinesDiffComputer {\n    constructor() {\n        this.dynamicProgrammingDiffing = ( new DynamicProgrammingDiffing());\n        this.myersDiffingAlgorithm = ( new MyersDiffAlgorithm());\n    }\n    computeDiff(originalLines, modifiedLines, options) {\n        if (originalLines.length <= 1 && equals(originalLines, modifiedLines, (a, b) => a === b)) {\n            return ( new LinesDiff([], [], false));\n        }\n        if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n            return ( new LinesDiff([\n                ( new DetailedLineRangeMapping(( new LineRange(1, originalLines.length + 1)), ( new LineRange(1, modifiedLines.length + 1)), [\n                    ( new RangeMapping(( new Range(\n                        1,\n                        1,\n                        originalLines.length,\n                        originalLines[originalLines.length - 1].length + 1\n                    )), ( new Range(\n                        1,\n                        1,\n                        modifiedLines.length,\n                        modifiedLines[modifiedLines.length - 1].length + 1\n                    ))))\n                ]))\n            ], [], false));\n        }\n        const timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : ( new DateTimeout(options.maxComputationTimeMs));\n        const considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n        const perfectHashes = ( new Map());\n        function getOrCreateHash(text) {\n            let hash = perfectHashes.get(text);\n            if (hash === undefined) {\n                hash = perfectHashes.size;\n                perfectHashes.set(text, hash);\n            }\n            return hash;\n        }\n        const originalLinesHashes = ( originalLines.map((l) => getOrCreateHash(l.trim())));\n        const modifiedLinesHashes = ( modifiedLines.map((l) => getOrCreateHash(l.trim())));\n        const sequence1 = ( new LineSequence(originalLinesHashes, originalLines));\n        const sequence2 = ( new LineSequence(modifiedLinesHashes, modifiedLines));\n        const lineAlignmentResult = (() => {\n            if (sequence1.length + sequence2.length < 1700) {\n                return this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, (offset1, offset2) => originalLines[offset1] === modifiedLines[offset2]\n                    ? modifiedLines[offset2].length === 0\n                        ? 0.1\n                        : 1 + Math.log(1 + modifiedLines[offset2].length)\n                    : 0.99);\n            }\n            return this.myersDiffingAlgorithm.compute(sequence1, sequence2, timeout);\n        })();\n        let lineAlignments = lineAlignmentResult.diffs;\n        let hitTimeout = lineAlignmentResult.hitTimeout;\n        lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n        lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n        const alignments = [];\n        const scanForWhitespaceChanges = (equalLinesCount) => {\n            if (!considerWhitespaceChanges) {\n                return;\n            }\n            for (let i = 0; i < equalLinesCount; i++) {\n                const seq1Offset = seq1LastStart + i;\n                const seq2Offset = seq2LastStart + i;\n                if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n                    const characterDiffs = this.refineDiff(originalLines, modifiedLines, ( new SequenceDiff(( new OffsetRange(seq1Offset, seq1Offset + 1)), ( new OffsetRange(seq2Offset, seq2Offset + 1)))), timeout, considerWhitespaceChanges, options);\n                    for (const a of characterDiffs.mappings) {\n                        alignments.push(a);\n                    }\n                    if (characterDiffs.hitTimeout) {\n                        hitTimeout = true;\n                    }\n                }\n            }\n        };\n        let seq1LastStart = 0;\n        let seq2LastStart = 0;\n        for (const diff of lineAlignments) {\n            assertFn(() => diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart);\n            const equalLinesCount = diff.seq1Range.start - seq1LastStart;\n            scanForWhitespaceChanges(equalLinesCount);\n            seq1LastStart = diff.seq1Range.endExclusive;\n            seq2LastStart = diff.seq2Range.endExclusive;\n            const characterDiffs = this.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges, options);\n            if (characterDiffs.hitTimeout) {\n                hitTimeout = true;\n            }\n            for (const a of characterDiffs.mappings) {\n                alignments.push(a);\n            }\n        }\n        scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n        const changes = lineRangeMappingFromRangeMappings(alignments, ( new ArrayText(originalLines)), ( new ArrayText(modifiedLines)));\n        let moves = [];\n        if (options.computeMoves) {\n            moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges, options);\n        }\n        assertFn(() => {\n            function validatePosition(pos, lines) {\n                if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n                    return false;\n                }\n                const line = lines[pos.lineNumber - 1];\n                if (pos.column < 1 || pos.column > line.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            function validateRange(range, lines) {\n                if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n                    return false;\n                }\n                if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            for (const c of changes) {\n                if (!c.innerChanges) {\n                    return false;\n                }\n                for (const ic of c.innerChanges) {\n                    const valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) &&\n                        validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                    if (!valid) {\n                        return false;\n                    }\n                }\n                if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return ( new LinesDiff(changes, moves, hitTimeout));\n    }\n    computeMoves(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges, options) {\n        const moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n        const movesWithDiffs = ( moves.map(m => {\n            const moveChanges = this.refineDiff(originalLines, modifiedLines, ( new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange())), timeout, considerWhitespaceChanges, options);\n            const mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, ( new ArrayText(originalLines)), ( new ArrayText(modifiedLines)), true);\n            return ( new MovedText(m, mappings));\n        }));\n        return movesWithDiffs;\n    }\n    refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges, options) {\n        const lineRangeMapping = toLineRangeMapping(diff);\n        const rangeMapping = lineRangeMapping.toRangeMapping2(originalLines, modifiedLines);\n        const slice1 = ( new LinesSliceCharSequence(originalLines, rangeMapping.originalRange, considerWhitespaceChanges));\n        const slice2 = ( new LinesSliceCharSequence(modifiedLines, rangeMapping.modifiedRange, considerWhitespaceChanges));\n        const diffResult = slice1.length + slice2.length < 500\n            ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout)\n            : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n        let diffs = diffResult.diffs;\n        diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs, (seq, idx) => seq.findWordContaining(idx));\n        if (options.extendToSubwords) {\n            diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs, (seq, idx) => seq.findSubWordContaining(idx), true);\n        }\n        diffs = removeShortMatches(slice1, slice2, diffs);\n        diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n        const result = ( diffs.map((d) => ( new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range)))));\n        return {\n            mappings: result,\n            hitTimeout: diffResult.hitTimeout,\n        };\n    }\n}\nfunction toLineRangeMapping(sequenceDiff) {\n    return ( new LineRangeMapping(( new LineRange(sequenceDiff.seq1Range.start + 1, sequenceDiff.seq1Range.endExclusive + 1)), ( new LineRange(sequenceDiff.seq2Range.start + 1, sequenceDiff.seq2Range.endExclusive + 1))));\n}\n\nexport { DefaultLinesDiffComputer };\n","\nimport { LegacyLinesDiffComputer } from './legacyLinesDiffComputer.js';\nimport { DefaultLinesDiffComputer } from './defaultLinesDiffComputer/defaultLinesDiffComputer.js';\n\nconst linesDiffComputers = {\n    getLegacy: () => ( new LegacyLinesDiffComputer()),\n    getDefault: () => ( new DefaultLinesDiffComputer()),\n};\n\nexport { linesDiffComputers };\n","\nimport { CharCode } from './charCode.js';\n\nfunction roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nclass RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nclass HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return ( new HSLA(h, s, l, a));\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l;\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return ( new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a));\n    }\n}\nclass HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return ( new HSVA(Math.round(m * 60), s, cmax, rgba.a));\n    }\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return ( new RGBA(r, g, b, a));\n    }\n}\nclass Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw ( new Error('Color needs a value'));\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw ( new Error('Invalid color ctor argument'));\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    reduceRelativeLuminace(foreground, ratio) {\n        let { r: fgR, g: fgG, b: fgB } = foreground.rgba;\n        let cr = this.getContrastRatio(foreground);\n        while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n            fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n            fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n            fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n            cr = this.getContrastRatio(( new Color(( new RGBA(fgR, fgG, fgB)))));\n        }\n        return ( new Color(( new RGBA(fgR, fgG, fgB))));\n    }\n    increaseRelativeLuminace(foreground, ratio) {\n        let { r: fgR, g: fgG, b: fgB } = foreground.rgba;\n        let cr = this.getContrastRatio(foreground);\n        while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n            fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n            fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n            fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n            cr = this.getContrastRatio(( new Color(( new RGBA(fgR, fgG, fgB)))));\n        }\n        return ( new Color(( new RGBA(fgR, fgG, fgB))));\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    getContrastRatio(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2 ? (lum1 + 0.05) / (lum2 + 0.05) : (lum2 + 0.05) / (lum1 + 0.05);\n    }\n    isDarker() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq < 128;\n    }\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    ensureConstrast(foreground, ratio) {\n        const bgL = this.getRelativeLuminance();\n        const fgL = foreground.getRelativeLuminance();\n        const cr = this.getContrastRatio(foreground);\n        if (cr < ratio) {\n            if (fgL < bgL) {\n                const resultA = this.reduceRelativeLuminace(foreground, ratio);\n                const resultARatio = this.getContrastRatio(resultA);\n                if (resultARatio < ratio) {\n                    const resultB = this.increaseRelativeLuminace(foreground, ratio);\n                    const resultBRatio = this.getContrastRatio(resultB);\n                    return resultARatio > resultBRatio ? resultA : resultB;\n                }\n                return resultA;\n            }\n            const resultA = this.increaseRelativeLuminace(foreground, ratio);\n            const resultARatio = this.getContrastRatio(resultA);\n            if (resultARatio < ratio) {\n                const resultB = this.reduceRelativeLuminace(foreground, ratio);\n                const resultBRatio = this.getContrastRatio(resultB);\n                return resultARatio > resultBRatio ? resultA : resultB;\n            }\n            return resultA;\n        }\n        return foreground;\n    }\n    lighten(factor) {\n        return ( new Color(( new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a))));\n    }\n    darken(factor) {\n        return ( new Color(( new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a))));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return ( new Color(( new RGBA(r, g, b, a * factor))));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return ( new Color(( new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a))));\n    }\n    blend(c) {\n        const rgba = c.rgba;\n        const thisA = this.rgba.a;\n        const colorA = rgba.a;\n        const a = thisA + colorA * (1 - thisA);\n        if (a < 1e-6) {\n            return Color.transparent;\n        }\n        const r = this.rgba.r * thisA / a + rgba.r * colorA * (1 - thisA) / a;\n        const g = this.rgba.g * thisA / a + rgba.g * colorA * (1 - thisA) / a;\n        const b = this.rgba.b * thisA / a + rgba.b * colorA * (1 - thisA) / a;\n        return ( new Color(( new RGBA(r, g, b, a))));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        return ( new Color(( new RGBA(\n            opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r),\n            opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g),\n            opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b),\n            1\n        ))));\n    }\n    flatten(...backgrounds) {\n        const background = backgrounds.reduceRight((accumulator, color) => {\n            return Color._flatten(color, accumulator);\n        });\n        return Color._flatten(this, background);\n    }\n    static _flatten(foreground, background) {\n        const backgroundAlpha = 1 - foreground.rgba.a;\n        return ( new Color(( new RGBA(\n            backgroundAlpha * background.rgba.r + foreground.rgba.a * foreground.rgba.r,\n            backgroundAlpha * background.rgba.g + foreground.rgba.a * foreground.rgba.g,\n            backgroundAlpha * background.rgba.b + foreground.rgba.a * foreground.rgba.b\n        ))));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    toNumber32Bit() {\n        if (!this._toNumber32Bit) {\n            this._toNumber32Bit = (this.rgba.r  << 24 |\n                this.rgba.g  << 16 |\n                this.rgba.b  << 8 |\n                this.rgba.a * 0xFF << 0) >>> 0;\n        }\n        return this._toNumber32Bit;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return ( of.lighten(factor));\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return ( of.darken(factor));\n    }\n    static { this.white = ( new Color(( new RGBA(255, 255, 255, 1)))); }\n    static { this.black = ( new Color(( new RGBA(0, 0, 0, 1)))); }\n    static { this.red = ( new Color(( new RGBA(255, 0, 0, 1)))); }\n    static { this.blue = ( new Color(( new RGBA(0, 0, 255, 1)))); }\n    static { this.green = ( new Color(( new RGBA(0, 255, 0, 1)))); }\n    static { this.cyan = ( new Color(( new RGBA(0, 255, 255, 1)))); }\n    static { this.lightgrey = ( new Color(( new RGBA(211, 211, 211, 1)))); }\n    static { this.transparent = ( new Color(( new RGBA(0, 0, 0, 0)))); }\n}\n(function (Color) {\n    (function (Format) {\n        (function (CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = ( n.toString(16));\n                return r.length !== 2 ? '0' + r : r;\n            }\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            function parse(css) {\n                if (css === 'transparent') {\n                    return Color.transparent;\n                }\n                if (css.startsWith('#')) {\n                    return parseHex(css);\n                }\n                if (css.startsWith('rgba(')) {\n                    const color = css.match(/rgba\\((?<r>(?:\\+|-)?\\d+), *(?<g>(?:\\+|-)?\\d+), *(?<b>(?:\\+|-)?\\d+), *(?<a>(?:\\+|-)?\\d+(\\.\\d+)?)\\)/);\n                    if (!color) {\n                        throw ( new Error('Invalid color format ' + css));\n                    }\n                    const r = parseInt(color.groups?.r ?? '0');\n                    const g = parseInt(color.groups?.g ?? '0');\n                    const b = parseInt(color.groups?.b ?? '0');\n                    const a = parseFloat(color.groups?.a ?? '0');\n                    return ( new Color(( new RGBA(r, g, b, a))));\n                }\n                if (css.startsWith('rgb(')) {\n                    const color = css.match(/rgb\\((?<r>(?:\\+|-)?\\d+), *(?<g>(?:\\+|-)?\\d+), *(?<b>(?:\\+|-)?\\d+)\\)/);\n                    if (!color) {\n                        throw ( new Error('Invalid color format ' + css));\n                    }\n                    const r = parseInt(color.groups?.r ?? '0');\n                    const g = parseInt(color.groups?.g ?? '0');\n                    const b = parseInt(color.groups?.b ?? '0');\n                    return ( new Color(( new RGBA(r, g, b))));\n                }\n                return parseNamedKeyword(css);\n            }\n            CSS.parse = parse;\n            function parseNamedKeyword(css) {\n                switch (css) {\n                    case 'aliceblue': return ( new Color(( new RGBA(240, 248, 255, 1))));\n                    case 'antiquewhite': return ( new Color(( new RGBA(250, 235, 215, 1))));\n                    case 'aqua': return ( new Color(( new RGBA(0, 255, 255, 1))));\n                    case 'aquamarine': return ( new Color(( new RGBA(127, 255, 212, 1))));\n                    case 'azure': return ( new Color(( new RGBA(240, 255, 255, 1))));\n                    case 'beige': return ( new Color(( new RGBA(245, 245, 220, 1))));\n                    case 'bisque': return ( new Color(( new RGBA(255, 228, 196, 1))));\n                    case 'black': return ( new Color(( new RGBA(0, 0, 0, 1))));\n                    case 'blanchedalmond': return ( new Color(( new RGBA(255, 235, 205, 1))));\n                    case 'blue': return ( new Color(( new RGBA(0, 0, 255, 1))));\n                    case 'blueviolet': return ( new Color(( new RGBA(138, 43, 226, 1))));\n                    case 'brown': return ( new Color(( new RGBA(165, 42, 42, 1))));\n                    case 'burlywood': return ( new Color(( new RGBA(222, 184, 135, 1))));\n                    case 'cadetblue': return ( new Color(( new RGBA(95, 158, 160, 1))));\n                    case 'chartreuse': return ( new Color(( new RGBA(127, 255, 0, 1))));\n                    case 'chocolate': return ( new Color(( new RGBA(210, 105, 30, 1))));\n                    case 'coral': return ( new Color(( new RGBA(255, 127, 80, 1))));\n                    case 'cornflowerblue': return ( new Color(( new RGBA(100, 149, 237, 1))));\n                    case 'cornsilk': return ( new Color(( new RGBA(255, 248, 220, 1))));\n                    case 'crimson': return ( new Color(( new RGBA(220, 20, 60, 1))));\n                    case 'cyan': return ( new Color(( new RGBA(0, 255, 255, 1))));\n                    case 'darkblue': return ( new Color(( new RGBA(0, 0, 139, 1))));\n                    case 'darkcyan': return ( new Color(( new RGBA(0, 139, 139, 1))));\n                    case 'darkgoldenrod': return ( new Color(( new RGBA(184, 134, 11, 1))));\n                    case 'darkgray': return ( new Color(( new RGBA(169, 169, 169, 1))));\n                    case 'darkgreen': return ( new Color(( new RGBA(0, 100, 0, 1))));\n                    case 'darkgrey': return ( new Color(( new RGBA(169, 169, 169, 1))));\n                    case 'darkkhaki': return ( new Color(( new RGBA(189, 183, 107, 1))));\n                    case 'darkmagenta': return ( new Color(( new RGBA(139, 0, 139, 1))));\n                    case 'darkolivegreen': return ( new Color(( new RGBA(85, 107, 47, 1))));\n                    case 'darkorange': return ( new Color(( new RGBA(255, 140, 0, 1))));\n                    case 'darkorchid': return ( new Color(( new RGBA(153, 50, 204, 1))));\n                    case 'darkred': return ( new Color(( new RGBA(139, 0, 0, 1))));\n                    case 'darksalmon': return ( new Color(( new RGBA(233, 150, 122, 1))));\n                    case 'darkseagreen': return ( new Color(( new RGBA(143, 188, 143, 1))));\n                    case 'darkslateblue': return ( new Color(( new RGBA(72, 61, 139, 1))));\n                    case 'darkslategray': return ( new Color(( new RGBA(47, 79, 79, 1))));\n                    case 'darkslategrey': return ( new Color(( new RGBA(47, 79, 79, 1))));\n                    case 'darkturquoise': return ( new Color(( new RGBA(0, 206, 209, 1))));\n                    case 'darkviolet': return ( new Color(( new RGBA(148, 0, 211, 1))));\n                    case 'deeppink': return ( new Color(( new RGBA(255, 20, 147, 1))));\n                    case 'deepskyblue': return ( new Color(( new RGBA(0, 191, 255, 1))));\n                    case 'dimgray': return ( new Color(( new RGBA(105, 105, 105, 1))));\n                    case 'dimgrey': return ( new Color(( new RGBA(105, 105, 105, 1))));\n                    case 'dodgerblue': return ( new Color(( new RGBA(30, 144, 255, 1))));\n                    case 'firebrick': return ( new Color(( new RGBA(178, 34, 34, 1))));\n                    case 'floralwhite': return ( new Color(( new RGBA(255, 250, 240, 1))));\n                    case 'forestgreen': return ( new Color(( new RGBA(34, 139, 34, 1))));\n                    case 'fuchsia': return ( new Color(( new RGBA(255, 0, 255, 1))));\n                    case 'gainsboro': return ( new Color(( new RGBA(220, 220, 220, 1))));\n                    case 'ghostwhite': return ( new Color(( new RGBA(248, 248, 255, 1))));\n                    case 'gold': return ( new Color(( new RGBA(255, 215, 0, 1))));\n                    case 'goldenrod': return ( new Color(( new RGBA(218, 165, 32, 1))));\n                    case 'gray': return ( new Color(( new RGBA(128, 128, 128, 1))));\n                    case 'green': return ( new Color(( new RGBA(0, 128, 0, 1))));\n                    case 'greenyellow': return ( new Color(( new RGBA(173, 255, 47, 1))));\n                    case 'grey': return ( new Color(( new RGBA(128, 128, 128, 1))));\n                    case 'honeydew': return ( new Color(( new RGBA(240, 255, 240, 1))));\n                    case 'hotpink': return ( new Color(( new RGBA(255, 105, 180, 1))));\n                    case 'indianred': return ( new Color(( new RGBA(205, 92, 92, 1))));\n                    case 'indigo': return ( new Color(( new RGBA(75, 0, 130, 1))));\n                    case 'ivory': return ( new Color(( new RGBA(255, 255, 240, 1))));\n                    case 'khaki': return ( new Color(( new RGBA(240, 230, 140, 1))));\n                    case 'lavender': return ( new Color(( new RGBA(230, 230, 250, 1))));\n                    case 'lavenderblush': return ( new Color(( new RGBA(255, 240, 245, 1))));\n                    case 'lawngreen': return ( new Color(( new RGBA(124, 252, 0, 1))));\n                    case 'lemonchiffon': return ( new Color(( new RGBA(255, 250, 205, 1))));\n                    case 'lightblue': return ( new Color(( new RGBA(173, 216, 230, 1))));\n                    case 'lightcoral': return ( new Color(( new RGBA(240, 128, 128, 1))));\n                    case 'lightcyan': return ( new Color(( new RGBA(224, 255, 255, 1))));\n                    case 'lightgoldenrodyellow': return ( new Color(( new RGBA(250, 250, 210, 1))));\n                    case 'lightgray': return ( new Color(( new RGBA(211, 211, 211, 1))));\n                    case 'lightgreen': return ( new Color(( new RGBA(144, 238, 144, 1))));\n                    case 'lightgrey': return ( new Color(( new RGBA(211, 211, 211, 1))));\n                    case 'lightpink': return ( new Color(( new RGBA(255, 182, 193, 1))));\n                    case 'lightsalmon': return ( new Color(( new RGBA(255, 160, 122, 1))));\n                    case 'lightseagreen': return ( new Color(( new RGBA(32, 178, 170, 1))));\n                    case 'lightskyblue': return ( new Color(( new RGBA(135, 206, 250, 1))));\n                    case 'lightslategray': return ( new Color(( new RGBA(119, 136, 153, 1))));\n                    case 'lightslategrey': return ( new Color(( new RGBA(119, 136, 153, 1))));\n                    case 'lightsteelblue': return ( new Color(( new RGBA(176, 196, 222, 1))));\n                    case 'lightyellow': return ( new Color(( new RGBA(255, 255, 224, 1))));\n                    case 'lime': return ( new Color(( new RGBA(0, 255, 0, 1))));\n                    case 'limegreen': return ( new Color(( new RGBA(50, 205, 50, 1))));\n                    case 'linen': return ( new Color(( new RGBA(250, 240, 230, 1))));\n                    case 'magenta': return ( new Color(( new RGBA(255, 0, 255, 1))));\n                    case 'maroon': return ( new Color(( new RGBA(128, 0, 0, 1))));\n                    case 'mediumaquamarine': return ( new Color(( new RGBA(102, 205, 170, 1))));\n                    case 'mediumblue': return ( new Color(( new RGBA(0, 0, 205, 1))));\n                    case 'mediumorchid': return ( new Color(( new RGBA(186, 85, 211, 1))));\n                    case 'mediumpurple': return ( new Color(( new RGBA(147, 112, 219, 1))));\n                    case 'mediumseagreen': return ( new Color(( new RGBA(60, 179, 113, 1))));\n                    case 'mediumslateblue': return ( new Color(( new RGBA(123, 104, 238, 1))));\n                    case 'mediumspringgreen': return ( new Color(( new RGBA(0, 250, 154, 1))));\n                    case 'mediumturquoise': return ( new Color(( new RGBA(72, 209, 204, 1))));\n                    case 'mediumvioletred': return ( new Color(( new RGBA(199, 21, 133, 1))));\n                    case 'midnightblue': return ( new Color(( new RGBA(25, 25, 112, 1))));\n                    case 'mintcream': return ( new Color(( new RGBA(245, 255, 250, 1))));\n                    case 'mistyrose': return ( new Color(( new RGBA(255, 228, 225, 1))));\n                    case 'moccasin': return ( new Color(( new RGBA(255, 228, 181, 1))));\n                    case 'navajowhite': return ( new Color(( new RGBA(255, 222, 173, 1))));\n                    case 'navy': return ( new Color(( new RGBA(0, 0, 128, 1))));\n                    case 'oldlace': return ( new Color(( new RGBA(253, 245, 230, 1))));\n                    case 'olive': return ( new Color(( new RGBA(128, 128, 0, 1))));\n                    case 'olivedrab': return ( new Color(( new RGBA(107, 142, 35, 1))));\n                    case 'orange': return ( new Color(( new RGBA(255, 165, 0, 1))));\n                    case 'orangered': return ( new Color(( new RGBA(255, 69, 0, 1))));\n                    case 'orchid': return ( new Color(( new RGBA(218, 112, 214, 1))));\n                    case 'palegoldenrod': return ( new Color(( new RGBA(238, 232, 170, 1))));\n                    case 'palegreen': return ( new Color(( new RGBA(152, 251, 152, 1))));\n                    case 'paleturquoise': return ( new Color(( new RGBA(175, 238, 238, 1))));\n                    case 'palevioletred': return ( new Color(( new RGBA(219, 112, 147, 1))));\n                    case 'papayawhip': return ( new Color(( new RGBA(255, 239, 213, 1))));\n                    case 'peachpuff': return ( new Color(( new RGBA(255, 218, 185, 1))));\n                    case 'peru': return ( new Color(( new RGBA(205, 133, 63, 1))));\n                    case 'pink': return ( new Color(( new RGBA(255, 192, 203, 1))));\n                    case 'plum': return ( new Color(( new RGBA(221, 160, 221, 1))));\n                    case 'powderblue': return ( new Color(( new RGBA(176, 224, 230, 1))));\n                    case 'purple': return ( new Color(( new RGBA(128, 0, 128, 1))));\n                    case 'rebeccapurple': return ( new Color(( new RGBA(102, 51, 153, 1))));\n                    case 'red': return ( new Color(( new RGBA(255, 0, 0, 1))));\n                    case 'rosybrown': return ( new Color(( new RGBA(188, 143, 143, 1))));\n                    case 'royalblue': return ( new Color(( new RGBA(65, 105, 225, 1))));\n                    case 'saddlebrown': return ( new Color(( new RGBA(139, 69, 19, 1))));\n                    case 'salmon': return ( new Color(( new RGBA(250, 128, 114, 1))));\n                    case 'sandybrown': return ( new Color(( new RGBA(244, 164, 96, 1))));\n                    case 'seagreen': return ( new Color(( new RGBA(46, 139, 87, 1))));\n                    case 'seashell': return ( new Color(( new RGBA(255, 245, 238, 1))));\n                    case 'sienna': return ( new Color(( new RGBA(160, 82, 45, 1))));\n                    case 'silver': return ( new Color(( new RGBA(192, 192, 192, 1))));\n                    case 'skyblue': return ( new Color(( new RGBA(135, 206, 235, 1))));\n                    case 'slateblue': return ( new Color(( new RGBA(106, 90, 205, 1))));\n                    case 'slategray': return ( new Color(( new RGBA(112, 128, 144, 1))));\n                    case 'slategrey': return ( new Color(( new RGBA(112, 128, 144, 1))));\n                    case 'snow': return ( new Color(( new RGBA(255, 250, 250, 1))));\n                    case 'springgreen': return ( new Color(( new RGBA(0, 255, 127, 1))));\n                    case 'steelblue': return ( new Color(( new RGBA(70, 130, 180, 1))));\n                    case 'tan': return ( new Color(( new RGBA(210, 180, 140, 1))));\n                    case 'teal': return ( new Color(( new RGBA(0, 128, 128, 1))));\n                    case 'thistle': return ( new Color(( new RGBA(216, 191, 216, 1))));\n                    case 'tomato': return ( new Color(( new RGBA(255, 99, 71, 1))));\n                    case 'turquoise': return ( new Color(( new RGBA(64, 224, 208, 1))));\n                    case 'violet': return ( new Color(( new RGBA(238, 130, 238, 1))));\n                    case 'wheat': return ( new Color(( new RGBA(245, 222, 179, 1))));\n                    case 'white': return ( new Color(( new RGBA(255, 255, 255, 1))));\n                    case 'whitesmoke': return ( new Color(( new RGBA(245, 245, 245, 1))));\n                    case 'yellow': return ( new Color(( new RGBA(255, 255, 0, 1))));\n                    case 'yellowgreen': return ( new Color(( new RGBA(154, 205, 50, 1))));\n                    default: return null;\n                }\n            }\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== CharCode.Hash) {\n                    return null;\n                }\n                if (length === 7) {\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return ( new Color(( new RGBA(r, g, b, 1))));\n                }\n                if (length === 9) {\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return ( new Color(( new RGBA(r, g, b, a / 255))));\n                }\n                if (length === 4) {\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return ( new Color(( new RGBA(16 * r + r, 16 * g + g, 16 * b + b))));\n                }\n                if (length === 5) {\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return ( new Color(( new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255))));\n                }\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case CharCode.Digit0: return 0;\n                    case CharCode.Digit1: return 1;\n                    case CharCode.Digit2: return 2;\n                    case CharCode.Digit3: return 3;\n                    case CharCode.Digit4: return 4;\n                    case CharCode.Digit5: return 5;\n                    case CharCode.Digit6: return 6;\n                    case CharCode.Digit7: return 7;\n                    case CharCode.Digit8: return 8;\n                    case CharCode.Digit9: return 9;\n                    case CharCode.a: return 10;\n                    case CharCode.A: return 10;\n                    case CharCode.b: return 11;\n                    case CharCode.B: return 11;\n                    case CharCode.c: return 12;\n                    case CharCode.C: return 12;\n                    case CharCode.d: return 13;\n                    case CharCode.D: return 13;\n                    case CharCode.e: return 14;\n                    case CharCode.E: return 14;\n                    case CharCode.f: return 15;\n                    case CharCode.F: return 15;\n                }\n                return 0;\n            }\n        })(Format.CSS || (Format.CSS = {}));\n    })(Color.Format || (Color.Format = {}));\n})(Color || (Color = {}));\n\nexport { Color, HSLA, HSVA, RGBA };\n","\nimport { Color, HSLA } from '../../../base/common/color.js';\n\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (index === undefined) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = ( match.values());\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = ( match.values());\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = ( new Color(( new HSLA(\n        parsedRegex[0],\n        parsedRegex[1] / 100,\n        parsedRegex[2] / 100,\n        isAlpha ? parsedRegex[3] : 1\n    ))));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|\\s+(#)([A-Fa-f0-9]{6})\\b|\\s+(#)([A-Fa-f0-9]{8})\\b|^(#)([A-Fa-f0-9]{6})\\b|^(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\nfunction computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        return [];\n    }\n    return computeColors(model);\n}\n\nexport { computeDefaultDocumentColors };\n","\nimport { isMultilineRegexSource } from '../model/textModelSearch.js';\n\nconst trimDashesRegex = /^-+|-+$/g;\nconst CHUNK_SIZE = 100;\nconst MAX_SECTION_LINES = 5;\nfunction findSectionHeaders(model, options) {\n    let headers = [];\n    if (options.findRegionSectionHeaders && options.foldingRules?.markers) {\n        const regionHeaders = collectRegionHeaders(model, options);\n        headers = headers.concat(regionHeaders);\n    }\n    if (options.findMarkSectionHeaders) {\n        const markHeaders = collectMarkHeaders(model, options);\n        headers = headers.concat(markHeaders);\n    }\n    return headers;\n}\nfunction collectRegionHeaders(model, options) {\n    const regionHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        const match = lineContent.match(options.foldingRules.markers.start);\n        if (match) {\n            const range = { startLineNumber: lineNumber, startColumn: match[0].length + 1, endLineNumber: lineNumber, endColumn: lineContent.length + 1 };\n            if (range.endColumn > range.startColumn) {\n                const sectionHeader = {\n                    range,\n                    ...getHeaderText(lineContent.substring(match[0].length)),\n                    shouldBeInComments: false\n                };\n                if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                    regionHeaders.push(sectionHeader);\n                }\n            }\n        }\n    }\n    return regionHeaders;\n}\nfunction collectMarkHeaders(model, options) {\n    const markHeaders = [];\n    const endLineNumber = model.getLineCount();\n    const multiline = isMultilineRegexSource(options.markSectionHeaderRegex);\n    const regex = ( new RegExp(options.markSectionHeaderRegex, `gdm${multiline ? 's' : ''}`));\n    for (let startLine = 1; startLine <= endLineNumber; startLine += CHUNK_SIZE - MAX_SECTION_LINES) {\n        const endLine = Math.min(startLine + CHUNK_SIZE - 1, endLineNumber);\n        const lines = [];\n        for (let i = startLine; i <= endLine; i++) {\n            lines.push(model.getLineContent(i));\n        }\n        const text = lines.join('\\n');\n        regex.lastIndex = 0;\n        let match;\n        while ((match = regex.exec(text)) !== null) {\n            const precedingText = text.substring(0, match.index);\n            const lineOffset = (precedingText.match(/\\n/g) || []).length;\n            const lineNumber = startLine + lineOffset;\n            const matchLines = match[0].split('\\n');\n            const matchHeight = matchLines.length;\n            const matchEndLine = lineNumber + matchHeight - 1;\n            const lineStartIndex = precedingText.lastIndexOf('\\n') + 1;\n            const startColumn = match.index - lineStartIndex + 1;\n            const lastMatchLine = matchLines[matchLines.length - 1];\n            const endColumn = matchHeight === 1 ? startColumn + match[0].length : lastMatchLine.length + 1;\n            const range = {\n                startLineNumber: lineNumber,\n                startColumn,\n                endLineNumber: matchEndLine,\n                endColumn\n            };\n            const text2 = (match.groups ?? {})['label'] ?? '';\n            const hasSeparatorLine = ((match.groups ?? {})['separator'] ?? '') !== '';\n            const sectionHeader = {\n                range,\n                text: text2,\n                hasSeparatorLine,\n                shouldBeInComments: true\n            };\n            if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                if (markHeaders.length === 0 || markHeaders[markHeaders.length - 1].range.endLineNumber < sectionHeader.range.startLineNumber) {\n                    markHeaders.push(sectionHeader);\n                }\n            }\n            regex.lastIndex = match.index + match[0].length;\n        }\n    }\n    return markHeaders;\n}\nfunction getHeaderText(text) {\n    text = text.trim();\n    const hasSeparatorLine = text.startsWith('-');\n    text = text.replace(trimDashesRegex, '');\n    return { text, hasSeparatorLine };\n}\n\nexport { collectMarkHeaders, findSectionHeaders };\n","\nimport { CharCode } from './charCode.js';\nimport { posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { isNumber } from './types.js';\n\nfunction isPathSeparator(code) {\n    return code === CharCode.Slash || code === CharCode.Backslash;\n}\nfunction toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\nfunction toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) {\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\nfunction getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1)\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        if (path.charCodeAt(1) === CharCode.Colon) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                return path.slice(0, 2);\n            }\n        }\n    }\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3;\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1);\n            }\n        }\n    }\n    return '';\n}\nfunction isUNC(path) {\n    if (!isWindows) {\n        return false;\n    }\n    if (!path || path.length < 5) {\n        return false;\n    }\n    let code = path.charCodeAt(0);\n    if (code !== CharCode.Backslash) {\n        return false;\n    }\n    code = path.charCodeAt(1);\n    if (code !== CharCode.Backslash) {\n        return false;\n    }\n    let pos = 2;\n    const start = pos;\n    for (; pos < path.length; pos++) {\n        code = path.charCodeAt(pos);\n        if (code === CharCode.Backslash) {\n            break;\n        }\n    }\n    if (start === pos) {\n        return false;\n    }\n    code = path.charCodeAt(pos + 1);\n    if (isNaN(code) || code === CharCode.Backslash) {\n        return false;\n    }\n    return true;\n}\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nfunction isValidBasename(name, isWindowsOS = isWindows) {\n    const invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n    if (!name || name.length === 0 || /^\\s+$/.test(name)) {\n        return false;\n    }\n    invalidFileChars.lastIndex = 0;\n    if (invalidFileChars.test(name)) {\n        return false;\n    }\n    if (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n        return false;\n    }\n    if (name === '.' || name === '..') {\n        return false;\n    }\n    if (isWindowsOS && name[name.length - 1] === '.') {\n        return false;\n    }\n    if (isWindowsOS && name.length !== name.trim().length) {\n        return false;\n    }\n    if (name.length > 255) {\n        return false;\n    }\n    return true;\n}\nfunction isEqual(pathA, pathB, ignoreCase) {\n    const identityEquals = (pathA === pathB);\n    if (!ignoreCase || identityEquals) {\n        return identityEquals;\n    }\n    if (!pathA || !pathB) {\n        return false;\n    }\n    return equalsIgnoreCase(pathA, pathB);\n}\nfunction isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true;\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--;\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nfunction isWindowsDriveLetter(char0) {\n    return char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\nfunction hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n    }\n    return false;\n}\nfunction getDriveLetter(path, isWindowsOS = isWindows) {\n    return hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\nfunction indexOfPath(path, candidate, ignoreCase) {\n    if (candidate.length > path.length) {\n        return -1;\n    }\n    if (path === candidate) {\n        return 0;\n    }\n    if (ignoreCase) {\n        path = path.toLowerCase();\n        candidate = candidate.toLowerCase();\n    }\n    return path.indexOf(candidate);\n}\nfunction parseLineAndColumnAware(rawPath) {\n    const segments = rawPath.split(':');\n    let path = undefined;\n    let line = undefined;\n    let column = undefined;\n    for (const segment of segments) {\n        const segmentAsNumber = Number(segment);\n        if (!isNumber(segmentAsNumber)) {\n            path = !!path ? [path, segment].join(':') : segment;\n        }\n        else if (line === undefined) {\n            line = segmentAsNumber;\n        }\n        else if (column === undefined) {\n            column = segmentAsNumber;\n        }\n    }\n    if (!path) {\n        throw ( new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`'));\n    }\n    return {\n        path,\n        line: line !== undefined ? line : undefined,\n        column: column !== undefined ? column : line !== undefined ? 1 : undefined\n    };\n}\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\nfunction randomPath(parent, prefix, randomLength = 8) {\n    let suffix = '';\n    for (let i = 0; i < randomLength; i++) {\n        let pathCharsTouse;\n        if (i === 0 && isWindows && true && (randomLength === 3 || randomLength === 4)) {\n            pathCharsTouse = windowsSafePathFirstChars;\n        }\n        else {\n            pathCharsTouse = pathChars;\n        }\n        suffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n    }\n    let randomFileName;\n    {\n        randomFileName = suffix;\n    }\n    return randomFileName;\n}\n\nexport { getDriveLetter, getRoot, hasDriveLetter, indexOfPath, isEqual, isEqualOrParent, isPathSeparator, isUNC, isValidBasename, isWindowsDriveLetter, parseLineAndColumnAware, randomPath, toPosixPath, toSlashes };\n","\nimport { onUnexpectedError } from './errors.js';\nimport { isWeb, isNative, webWorkerOrigin } from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport { posix, join } from './path.js';\nimport { toDisposable } from './lifecycle.js';\nimport { ResourceMap } from './map.js';\n\nvar Schemas;\n(function (Schemas) {\n    Schemas.inMemory = 'inmemory';\n    Schemas.vscode = 'vscode';\n    Schemas.internal = 'private';\n    Schemas.walkThrough = 'walkThrough';\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n    Schemas.vscodeNotebookMetadata = 'vscode-notebook-metadata';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    Schemas.vscodeChatCodeBlock = 'vscode-chat-code-block';\n    Schemas.vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    Schemas.webviewPanel = 'webview-panel';\n    Schemas.vscodeWebview = 'vscode-webview';\n    Schemas.extension = 'extension';\n    Schemas.vscodeFileResource = 'vscode-file';\n    Schemas.tmp = 'tmp';\n    Schemas.vsls = 'vsls';\n    Schemas.vscodeSourceControl = 'vscode-scm';\n    Schemas.commentsInput = 'comment';\n    Schemas.codeSetting = 'code-setting';\n    Schemas.outputChannel = 'output';\n    Schemas.accessibleView = 'accessible-view';\n})(Schemas || (Schemas = {}));\nfunction matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nfunction matchesSomeScheme(target, ...schemes) {\n    return ( schemes.some(scheme => matchesScheme(target, scheme)));\n}\nconst connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._serverRootPath = '/';\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    setDelegate(delegate) {\n        this._delegate = delegate;\n    }\n    setServerRootPath(product, serverBasePath) {\n        this._serverRootPath = posix.join(serverBasePath ?? '/', getServerProductSegment(product));\n    }\n    getServerRootPath() {\n        return this._serverRootPath;\n    }\n    get _remoteResourcesPath() {\n        return posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n    }\n    set(authority, host, port) {\n        this._hosts[authority] = host;\n        this._ports[authority] = port;\n    }\n    setConnectionToken(authority, connectionToken) {\n        this._connectionTokens[authority] = connectionToken;\n    }\n    getPreferredWebSchema() {\n        return this._preferredWebSchema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return ( URI.from({\n            scheme: isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        }));\n    }\n}\nconst RemoteAuthorities = ( new RemoteAuthoritiesImpl());\nfunction getServerProductSegment(product) {\n    return `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`;\n}\nconst nodeModulesPath = 'vs/../../node_modules';\nconst VSCODE_AUTHORITY = 'vscode-app';\nclass FileAccessImpl {\n    constructor() {\n        this.staticBrowserUris = ( new ResourceMap());\n        this.appResourcePathUrls = ( new Map());\n    }\n    static { this.FALLBACK_AUTHORITY = VSCODE_AUTHORITY; }\n    registerAppResourcePathUrl(moduleId, url) {\n        this.appResourcePathUrls.set(moduleId, url);\n    }\n    toUrl(moduleId) {\n        let url = this.appResourcePathUrls.get(moduleId);\n        if (typeof url === 'function') {\n            url = url();\n        }\n        return ( ( new URL(url ?? moduleId, globalThis.location?.href ?? import.meta.url)).toString());\n    }\n    asBrowserUri(resourcePath) {\n        const uri = this.toUri(resourcePath, { toUrl: this.toUrl.bind(this) });\n        return this.uriToBrowserUri(uri);\n    }\n    uriToBrowserUri(uri) {\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        if (\n        uri.scheme === Schemas.file &&\n            (\n            (\n            isNative || (webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return this.staticBrowserUris.get(uri) ?? uri;\n    }\n    asFileUri(resourcePath) {\n        const uri = this.toUri(resourcePath, { toUrl: this.toUrl.bind(this) });\n        return this.uriToFileUri(uri);\n    }\n    uriToFileUri(uri) {\n        if (uri.scheme === Schemas.vscodeFileResource) {\n            return uri.with({\n                scheme: Schemas.file,\n                authority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        if (globalThis._VSCODE_FILE_ROOT) {\n            const rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n            if (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n                return URI.joinPath(( URI.parse(rootUriOrPath, true)), uriOrModule);\n            }\n            const modulePath = join(rootUriOrPath, uriOrModule);\n            return URI.file(modulePath);\n        }\n        return ( URI.parse(moduleIdToUrl.toUrl(uriOrModule)));\n    }\n    registerStaticBrowserUri(uri, browserUri) {\n        this.staticBrowserUris.set(uri, browserUri);\n        return toDisposable(() => {\n            if (this.staticBrowserUris.get(uri) === browserUri) {\n                this.staticBrowserUris.delete(uri);\n            }\n        });\n    }\n    getRegisteredBrowserUris() {\n        return ( this.staticBrowserUris.keys());\n    }\n}\nconst FileAccess = ( new FileAccessImpl());\nvar COI;\n(function (COI) {\n    const coiHeaders = ( new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]));\n    COI.CoopAndCoep = ( Object.freeze(coiHeaders.get('3')));\n    const coiSearchParamName = 'vscode-coi';\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = ( new URL(url)).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = ( new URL(( url.toString(true)))).searchParams;\n        }\n        const value = params?.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n\nexport { COI, FileAccess, RemoteAuthorities, Schemas, VSCODE_AUTHORITY, connectionTokenQueryName, getServerProductSegment, matchesScheme, matchesSomeScheme, nodeModulesPath };\n","\nimport { CharCode } from './charCode.js';\nimport { isEqualOrParent as isEqualOrParent$1, toSlashes, toPosixPath, getRoot } from './extpath.js';\nimport { Schemas } from './network.js';\nimport { posix, dirname as dirname$1, normalize, relative, resolve, sep } from './path.js';\nimport { isWindows, isLinux } from './platform.js';\nimport { compare, equalsIgnoreCase } from './strings.js';\nimport { uriToFsPath, URI } from './uri.js';\n\nfunction originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nclass ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return compare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return ( uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString());\n    }\n    ignorePathCasing(uri) {\n        return this._ignorePathCasing(uri);\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return isEqualOrParent$1(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return isEqualOrParent$1(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return posix.basename(resource.path);\n    }\n    extname(resource) {\n        return posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(dirname$1(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/';\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = toPosixPath(path);\n        return base.with({\n            path: posix.resolve(base.path, path)\n        });\n    }\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep$1 = sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > getRoot(fsp).length && fsp[fsp.length - 1] === sep$1;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath));\n        }\n    }\n    removeTrailingPathSeparator(resource, sep$1 = sep) {\n        if (hasTrailingPathSeparator(resource, sep$1)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep$1 = sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === getRoot(fsp).length) && (fsp[fsp.length - 1] === sep$1));\n        }\n        else {\n            sep$1 = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep$1)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\nconst extUri = ( new ExtUri(() => false));\nconst extUriBiasedIgnorePathCase = ( new ExtUri(uri => {\n    return uri.scheme === Schemas.file ? !isLinux : true;\n}));\nconst extUriIgnorePathCase = ( new ExtUri(_ => true));\nconst isEqual = extUri.isEqual.bind(extUri);\nconst isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nextUri.getComparisonKey.bind(extUri);\nconst basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nconst basename = extUri.basename.bind(extUri);\nconst extname = extUri.extname.bind(extUri);\nconst dirname = extUri.dirname.bind(extUri);\nconst joinPath = extUri.joinPath.bind(extUri);\nconst normalizePath = extUri.normalizePath.bind(extUri);\nconst relativePath = extUri.relativePath.bind(extUri);\nconst resolvePath = extUri.resolvePath.bind(extUri);\nconst isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nconst isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nconst hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nconst removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nconst addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\nfunction distinctParents(items, resourceAccessor) {\n    const distinctParents = [];\n    for (let i = 0; i < items.length; i++) {\n        const candidateResource = resourceAccessor(items[i]);\n        if (( items.some((otherItem, index) => {\n            if (index === i) {\n                return false;\n            }\n            return isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n        }))) {\n            continue;\n        }\n        distinctParents.push(items[i]);\n    }\n    return distinctParents;\n}\nvar DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = ( new Map());\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\nfunction toLocalResource(resource, authority, localScheme) {\n    if (authority) {\n        let path = resource.path;\n        if (path && path[0] !== posix.sep) {\n            path = posix.sep + path;\n        }\n        return resource.with({ scheme: localScheme, authority, path });\n    }\n    return resource.with({ scheme: localScheme });\n}\n\nexport { DataUri, ExtUri, addTrailingPathSeparator, basename, basenameOrAuthority, dirname, distinctParents, extUri, extUriBiasedIgnorePathCase, extUriIgnorePathCase, extname, hasTrailingPathSeparator, isAbsolutePath, isEqual, isEqualAuthority, isEqualOrParent, joinPath, normalizePath, originalFSPath, relativePath, removeTrailingPathSeparator, resolvePath, toLocalResource };\n","\n\nconst MicrotaskDelay = Symbol('MicrotaskDelay');\n\nexport { MicrotaskDelay };\n","\nimport { CancellationTokenSource } from './cancellation.js';\nimport { CancellationError, BugIndicatingError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable, DisposableMap } from './lifecycle.js';\nimport { extUri } from './resources.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nimport { Lazy } from './lazy.js';\n\nfunction isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nfunction createCancelablePromise(callback) {\n    const source = ( new CancellationTokenSource());\n    const thenable = callback(source.token);\n    const promise = ( new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            reject(( new CancellationError()));\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    }));\n    return new (class {\n        cancel() {\n            source.cancel();\n            source.dispose();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    });\n}\nfunction raceCancellation(promise, token, defaultValue) {\n    return ( new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    }));\n}\nfunction raceCancellationError(promise, token) {\n    return ( new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            reject(( new CancellationError()));\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    }));\n}\nasync function raceCancellablePromises(cancellablePromises) {\n    let resolvedPromiseIndex = -1;\n    const promises = ( cancellablePromises.map(\n        (promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; })\n    ));\n    try {\n        const result = await Promise.race(promises);\n        return result;\n    }\n    finally {\n        cancellablePromises.forEach((cancellablePromise, index) => {\n            if (index !== resolvedPromiseIndex) {\n                cancellablePromise.cancel();\n            }\n        });\n    }\n}\nfunction raceTimeout(promise, timeout, onTimeout) {\n    let promiseResolve = undefined;\n    const timer = setTimeout(() => {\n        promiseResolve?.(undefined);\n        onTimeout?.();\n    }, timeout);\n    return Promise.race([\n        promise.finally(() => clearTimeout(timer)),\n        ( new Promise(resolve => promiseResolve = resolve))\n    ]);\n}\nfunction asPromise(callback) {\n    return ( new Promise((resolve, reject) => {\n        const item = callback();\n        if (isThenable(item)) {\n            item.then(resolve, reject);\n        }\n        else {\n            resolve(item);\n        }\n    }));\n}\nfunction promiseWithResolvers() {\n    let resolve;\n    let reject;\n    const promise = ( new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    }));\n    return { promise, resolve: resolve, reject: reject };\n}\nclass Throttler {\n    constructor() {\n        this.isDisposed = false;\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.isDisposed) {\n            return Promise.reject(( new Error('Throttler is disposed')));\n        }\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    if (this.isDisposed) {\n                        return;\n                    }\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = ( new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                }));\n            }\n            return ( new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            }));\n        }\n        this.activePromise = promiseFactory();\n        return ( new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        }));\n    }\n    dispose() {\n        this.isDisposed = true;\n    }\n}\nclass Sequencer {\n    constructor() {\n        this.current = Promise.resolve(null);\n    }\n    queue(promiseTask) {\n        return this.current = this.current.then(() => promiseTask(), () => promiseTask());\n    }\n}\nclass SequencerByKey {\n    constructor() {\n        this.promiseMap = ( new Map());\n    }\n    queue(key, promiseTask) {\n        const runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n        const newPromise = runningPromise\n            .catch(() => { })\n            .then(promiseTask)\n            .finally(() => {\n            if (this.promiseMap.get(key) === newPromise) {\n                this.promiseMap.delete(key);\n            }\n        });\n        this.promiseMap.set(key, newPromise);\n        return newPromise;\n    }\n    keys() {\n        return ( this.promiseMap.keys());\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\nclass Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = ( new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            })).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            this.deferred = null;\n            this.doResolve?.(null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        return !!this.deferred?.isTriggered();\n    }\n    cancel() {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.doReject?.(( new CancellationError()));\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        this.deferred?.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\nclass ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = ( new Delayer(defaultDelay));\n        this.throttler = ( new Throttler());\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    isTriggered() {\n        return this.delayer.isTriggered();\n    }\n    cancel() {\n        this.delayer.cancel();\n    }\n    dispose() {\n        this.delayer.dispose();\n        this.throttler.dispose();\n    }\n}\nclass Barrier {\n    constructor() {\n        this._isOpen = false;\n        this._promise = ( new Promise((c, e) => {\n            this._completePromise = c;\n        }));\n    }\n    isOpen() {\n        return this._isOpen;\n    }\n    open() {\n        this._isOpen = true;\n        this._completePromise(true);\n    }\n    wait() {\n        return this._promise;\n    }\n}\nclass AutoOpenBarrier extends Barrier {\n    constructor(autoOpenTimeMs) {\n        super();\n        this._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n    }\n    open() {\n        clearTimeout(this._timeout);\n        super.open();\n    }\n}\nfunction timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return ( new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(( new CancellationError()));\n        });\n    }));\n}\nfunction disposableTimeout(handler, timeout = 0, store) {\n    const timer = setTimeout(() => {\n        handler();\n        if (store) {\n            disposable.dispose();\n        }\n    }, timeout);\n    const disposable = toDisposable(() => {\n        clearTimeout(timer);\n        store?.delete(disposable);\n    });\n    store?.add(disposable);\n    return disposable;\n}\nfunction sequence(promiseFactories) {\n    const results = [];\n    let index = 0;\n    const len = promiseFactories.length;\n    function next() {\n        return index < len ? promiseFactories[index++]() : null;\n    }\n    function thenHandler(result) {\n        if (result !== undefined && result !== null) {\n            results.push(result);\n        }\n        const n = next();\n        if (n) {\n            return n.then(thenHandler);\n        }\n        return Promise.resolve(results);\n    }\n    return Promise.resolve(null).then(thenHandler);\n}\nfunction first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nclass Limiter {\n    constructor(maxDegreeOfParalellism) {\n        this._size = 0;\n        this._isDisposed = false;\n        this.maxDegreeOfParalellism = maxDegreeOfParalellism;\n        this.outstandingPromises = [];\n        this.runningPromises = 0;\n        this._onDrained = ( new Emitter());\n    }\n    whenIdle() {\n        return this.size > 0\n            ? Event.toPromise(this.onDrained)\n            : Promise.resolve();\n    }\n    get onDrained() {\n        return this._onDrained.event;\n    }\n    get size() {\n        return this._size;\n    }\n    queue(factory) {\n        if (this._isDisposed) {\n            throw ( new Error('Object has been disposed'));\n        }\n        this._size++;\n        return ( new Promise((c, e) => {\n            this.outstandingPromises.push({ factory, c, e });\n            this.consume();\n        }));\n    }\n    consume() {\n        while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n            const iLimitedTask = this.outstandingPromises.shift();\n            this.runningPromises++;\n            const promise = iLimitedTask.factory();\n            promise.then(iLimitedTask.c, iLimitedTask.e);\n            promise.then(() => this.consumed(), () => this.consumed());\n        }\n    }\n    consumed() {\n        if (this._isDisposed) {\n            return;\n        }\n        this.runningPromises--;\n        if (--this._size === 0) {\n            this._onDrained.fire();\n        }\n        if (this.outstandingPromises.length > 0) {\n            this.consume();\n        }\n    }\n    clear() {\n        if (this._isDisposed) {\n            throw ( new Error('Object has been disposed'));\n        }\n        this.outstandingPromises.length = 0;\n        this._size = this.runningPromises;\n    }\n    dispose() {\n        this._isDisposed = true;\n        this.outstandingPromises.length = 0;\n        this._size = 0;\n        this._onDrained.dispose();\n    }\n}\nclass Queue extends Limiter {\n    constructor() {\n        super(1);\n    }\n}\nclass LimitedQueue {\n    constructor() {\n        this.sequentializer = ( new TaskSequentializer());\n        this.tasks = 0;\n    }\n    queue(factory) {\n        if (!this.sequentializer.isRunning()) {\n            return this.sequentializer.run(this.tasks++, factory());\n        }\n        return this.sequentializer.queue(() => {\n            return this.sequentializer.run(this.tasks++, factory());\n        });\n    }\n}\nclass ResourceQueue {\n    constructor() {\n        this.queues = ( new Map());\n        this.drainers = ( new Set());\n        this.drainListeners = undefined;\n        this.drainListenerCount = 0;\n    }\n    async whenDrained() {\n        if (this.isDrained()) {\n            return;\n        }\n        const promise = ( new DeferredPromise());\n        this.drainers.add(promise);\n        return promise.p;\n    }\n    isDrained() {\n        for (const [, queue] of this.queues) {\n            if (queue.size > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    queueSize(resource, extUri$1 = extUri) {\n        const key = extUri$1.getComparisonKey(resource);\n        return this.queues.get(key)?.size ?? 0;\n    }\n    queueFor(resource, factory, extUri$1 = extUri) {\n        const key = extUri$1.getComparisonKey(resource);\n        let queue = this.queues.get(key);\n        if (!queue) {\n            queue = ( new Queue());\n            const drainListenerId = this.drainListenerCount++;\n            const drainListener = Event.once(queue.onDrained)(() => {\n                queue?.dispose();\n                this.queues.delete(key);\n                this.onDidQueueDrain();\n                this.drainListeners?.deleteAndDispose(drainListenerId);\n                if (this.drainListeners?.size === 0) {\n                    this.drainListeners.dispose();\n                    this.drainListeners = undefined;\n                }\n            });\n            if (!this.drainListeners) {\n                this.drainListeners = ( new DisposableMap());\n            }\n            this.drainListeners.set(drainListenerId, drainListener);\n            this.queues.set(key, queue);\n        }\n        return queue.queue(factory);\n    }\n    onDidQueueDrain() {\n        if (!this.isDrained()) {\n            return;\n        }\n        this.releaseDrainers();\n    }\n    releaseDrainers() {\n        for (const drainer of this.drainers) {\n            drainer.complete();\n        }\n        this.drainers.clear();\n    }\n    dispose() {\n        for (const [, queue] of this.queues) {\n            queue.dispose();\n        }\n        this.queues.clear();\n        this.releaseDrainers();\n        this.drainListeners?.dispose();\n    }\n}\nclass TimeoutTimer {\n    constructor(runner, timeout) {\n        this._isDisposed = false;\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n        this._isDisposed = true;\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`));\n        }\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`));\n        }\n        if (this._token !== -1) {\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nclass IntervalTimer {\n    constructor() {\n        this.disposable = undefined;\n        this.isDisposed = false;\n    }\n    cancel() {\n        this.disposable?.dispose();\n        this.disposable = undefined;\n    }\n    cancelAndSet(runner, interval, context = globalThis) {\n        if (this.isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`));\n        }\n        this.cancel();\n        const handle = context.setInterval(() => {\n            runner();\n        }, interval);\n        this.disposable = toDisposable(() => {\n            context.clearInterval(handle);\n            this.disposable = undefined;\n        });\n    }\n    dispose() {\n        this.cancel();\n        this.isDisposed = true;\n    }\n}\nclass RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    flush() {\n        if (this.isScheduled()) {\n            this.cancel();\n            this.doRun();\n        }\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        this.runner?.();\n    }\n}\nclass RunOnceWorker extends RunOnceScheduler {\n    constructor(runner, timeout) {\n        super(runner, timeout);\n        this.units = [];\n    }\n    work(unit) {\n        this.units.push(unit);\n        if (!this.isScheduled()) {\n            this.schedule();\n        }\n    }\n    doRun() {\n        const units = this.units;\n        this.units = [];\n        this.runner?.(units);\n    }\n    dispose() {\n        this.units = [];\n        super.dispose();\n    }\n}\nlet runWhenGlobalIdle;\nlet _runWhenIdle;\n(function () {\n    if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n        _runWhenIdle = (_targetWindow, runner, timeout) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15;\n                const deadline = {\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                };\n                runner(( Object.freeze(deadline)));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        _runWhenIdle = (targetWindow, runner, timeout) => {\n            const handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    targetWindow.cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n    runWhenGlobalIdle = (runner, timeout) => _runWhenIdle(globalThis, runner, timeout);\n})();\nclass AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = _runWhenIdle(targetWindow, () => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\nclass GlobalIdleValue extends AbstractIdleValue {\n    constructor(executor) {\n        super(globalThis, executor);\n    }\n}\nasync function retry(task, delay, retries) {\n    let lastError;\n    for (let i = 0; i < retries; i++) {\n        try {\n            return await task();\n        }\n        catch (error) {\n            lastError = error;\n            await timeout(delay);\n        }\n    }\n    throw lastError;\n}\nclass TaskSequentializer {\n    isRunning(taskId) {\n        if (typeof taskId === 'number') {\n            return this._running?.taskId === taskId;\n        }\n        return !!this._running;\n    }\n    get running() {\n        return this._running?.promise;\n    }\n    cancelRunning() {\n        this._running?.cancel();\n    }\n    run(taskId, promise, onCancel) {\n        this._running = { taskId, cancel: () => onCancel?.(), promise };\n        promise.then(() => this.doneRunning(taskId), () => this.doneRunning(taskId));\n        return promise;\n    }\n    doneRunning(taskId) {\n        if (this._running && taskId === this._running.taskId) {\n            this._running = undefined;\n            this.runQueued();\n        }\n    }\n    runQueued() {\n        if (this._queued) {\n            const queued = this._queued;\n            this._queued = undefined;\n            queued.run().then(queued.promiseResolve, queued.promiseReject);\n        }\n    }\n    queue(run) {\n        if (!this._queued) {\n            const { promise, resolve: promiseResolve, reject: promiseReject } = promiseWithResolvers();\n            this._queued = {\n                run,\n                promise,\n                promiseResolve: promiseResolve,\n                promiseReject: promiseReject\n            };\n        }\n        else {\n            this._queued.run = run;\n        }\n        return this._queued.promise;\n    }\n    hasQueued() {\n        return !!this._queued;\n    }\n    async join() {\n        return this._queued?.promise ?? this._running?.promise;\n    }\n}\nclass IntervalCounter {\n    constructor(interval, nowFn = () => Date.now()) {\n        this.interval = interval;\n        this.nowFn = nowFn;\n        this.lastIncrementTime = 0;\n        this.value = 0;\n    }\n    increment() {\n        const now = this.nowFn();\n        if (now - this.lastIncrementTime > this.interval) {\n            this.lastIncrementTime = now;\n            this.value = 0;\n        }\n        this.value++;\n        return this.value;\n    }\n}\nvar DeferredOutcome;\n(function (DeferredOutcome) {\n    DeferredOutcome[DeferredOutcome[\"Resolved\"] = 0] = \"Resolved\";\n    DeferredOutcome[DeferredOutcome[\"Rejected\"] = 1] = \"Rejected\";\n})(DeferredOutcome || (DeferredOutcome = {}));\nclass DeferredPromise {\n    get isRejected() {\n        return this.outcome?.outcome === DeferredOutcome.Rejected;\n    }\n    get isResolved() {\n        return this.outcome?.outcome === DeferredOutcome.Resolved;\n    }\n    get isSettled() {\n        return !!this.outcome;\n    }\n    get value() {\n        return this.outcome?.outcome === DeferredOutcome.Resolved ? this.outcome?.value : undefined;\n    }\n    constructor() {\n        this.p = ( new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        }));\n    }\n    complete(value) {\n        return ( new Promise(resolve => {\n            this.completeCallback(value);\n            this.outcome = { outcome: DeferredOutcome.Resolved, value };\n            resolve();\n        }));\n    }\n    error(err) {\n        return ( new Promise(resolve => {\n            this.errorCallback(err);\n            this.outcome = { outcome: DeferredOutcome.Rejected, value: err };\n            resolve();\n        }));\n    }\n    cancel() {\n        return this.error(( new CancellationError()));\n    }\n}\nvar Promises;\n(function (Promises) {\n    async function settled(promises) {\n        let firstError = undefined;\n        const result = await Promise.all(( promises.map(promise => promise.then(value => value, error => {\n            if (!firstError) {\n                firstError = error;\n            }\n            return undefined;\n        }))));\n        if (typeof firstError !== 'undefined') {\n            throw firstError;\n        }\n        return result;\n    }\n    Promises.settled = settled;\n    function withAsyncBody(bodyFn) {\n        return ( new Promise(async (resolve, reject) => {\n            try {\n                await bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        }));\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {}));\nclass StatefulPromise {\n    get value() { return this._value; }\n    get error() { return this._error; }\n    get isResolved() { return this._isResolved; }\n    constructor(promise) {\n        this._value = undefined;\n        this._error = undefined;\n        this._isResolved = false;\n        this.promise = promise.then(value => {\n            this._value = value;\n            this._isResolved = true;\n            return value;\n        }, error => {\n            this._error = error;\n            this._isResolved = true;\n            throw error;\n        });\n    }\n    requireValue() {\n        if (!this._isResolved) {\n            throw ( new BugIndicatingError('Promise is not resolved yet'));\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n}\nclass LazyStatefulPromise {\n    constructor(_compute) {\n        this._compute = _compute;\n        this._promise = ( new Lazy(() => ( new StatefulPromise(this._compute()))));\n    }\n    requireValue() {\n        return this._promise.value.requireValue();\n    }\n    getPromise() {\n        return this._promise.value.promise;\n    }\n    get currentValue() {\n        return this._promise.rawValue?.value;\n    }\n}\nvar AsyncIterableSourceState;\n(function (AsyncIterableSourceState) {\n    AsyncIterableSourceState[AsyncIterableSourceState[\"Initial\"] = 0] = \"Initial\";\n    AsyncIterableSourceState[AsyncIterableSourceState[\"DoneOK\"] = 1] = \"DoneOK\";\n    AsyncIterableSourceState[AsyncIterableSourceState[\"DoneError\"] = 2] = \"DoneError\";\n})(AsyncIterableSourceState || (AsyncIterableSourceState = {}));\nclass AsyncIterableObject {\n    static fromArray(items) {\n        return ( new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        }));\n    }\n    static fromPromise(promise) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            emitter.emitMany(await promise);\n        }));\n    }\n    static fromPromisesResolveOrder(promises) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            await Promise.all(( promises.map(async (p) => emitter.emitOne(await p))));\n        }));\n    }\n    static merge(iterables) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            await Promise.all(( iterables.map(async (iterable) => {\n                for await (const item of iterable) {\n                    emitter.emitOne(item);\n                }\n            })));\n        }));\n    }\n    static { this.EMPTY = AsyncIterableObject.fromArray([]); }\n    constructor(executor, onReturn) {\n        this._state = AsyncIterableSourceState.Initial;\n        this._results = [];\n        this._error = null;\n        this._onReturn = onReturn;\n        this._onStateChanged = ( new Emitter());\n        queueMicrotask(async () => {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                await Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        });\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: async () => {\n                do {\n                    if (this._state === AsyncIterableSourceState.DoneError) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === AsyncIterableSourceState.DoneOK) {\n                        return { done: true, value: undefined };\n                    }\n                    await Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            },\n            return: async () => {\n                this._onReturn?.();\n                return { done: true, value: undefined };\n            }\n        };\n    }\n    static map(iterable, mapFn) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                emitter.emitOne(mapFn(item));\n            }\n        }));\n    }\n    map(mapFn) {\n        return ( AsyncIterableObject.map(this, mapFn));\n    }\n    static filter(iterable, filterFn) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                if (filterFn(item)) {\n                    emitter.emitOne(item);\n                }\n            }\n        }));\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static async toPromise(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return result;\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    emitOne(value) {\n        if (this._state !== AsyncIterableSourceState.Initial) {\n            return;\n        }\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    emitMany(values) {\n        if (this._state !== AsyncIterableSourceState.Initial) {\n            return;\n        }\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    resolve() {\n        if (this._state !== AsyncIterableSourceState.Initial) {\n            return;\n        }\n        this._state = AsyncIterableSourceState.DoneOK;\n        this._onStateChanged.fire();\n    }\n    reject(error) {\n        if (this._state !== AsyncIterableSourceState.Initial) {\n            return;\n        }\n        this._state = AsyncIterableSourceState.DoneError;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nclass CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nfunction createCancelableAsyncIterable(callback) {\n    const source = ( new CancellationTokenSource());\n    const innerIterable = callback(source.token);\n    return ( new CancelableAsyncIterableObject(source, async (emitter) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(( new CancellationError()));\n        });\n        try {\n            for await (const item of innerIterable) {\n                if (source.token.isCancellationRequested) {\n                    return;\n                }\n                emitter.emitOne(item);\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    }));\n}\nclass AsyncIterableSource {\n    constructor(onReturn) {\n        this._deferred = ( new DeferredPromise());\n        this._asyncIterable = ( new AsyncIterableObject(emitter => {\n            if (earlyError) {\n                emitter.reject(earlyError);\n                return;\n            }\n            if (earlyItems) {\n                emitter.emitMany(earlyItems);\n            }\n            this._errorFn = (error) => emitter.reject(error);\n            this._emitFn = (item) => emitter.emitOne(item);\n            return this._deferred.p;\n        }, onReturn));\n        let earlyError;\n        let earlyItems;\n        this._emitFn = (item) => {\n            if (!earlyItems) {\n                earlyItems = [];\n            }\n            earlyItems.push(item);\n        };\n        this._errorFn = (error) => {\n            if (!earlyError) {\n                earlyError = error;\n            }\n        };\n    }\n    get asyncIterable() {\n        return this._asyncIterable;\n    }\n    resolve() {\n        this._deferred.complete();\n    }\n    reject(error) {\n        this._errorFn(error);\n        this._deferred.complete();\n    }\n    emitOne(item) {\n        this._emitFn(item);\n    }\n}\n\nexport { AbstractIdleValue, AsyncIterableObject, AsyncIterableSource, AutoOpenBarrier, Barrier, CancelableAsyncIterableObject, DeferredPromise, Delayer, GlobalIdleValue, IntervalCounter, IntervalTimer, LazyStatefulPromise, LimitedQueue, Limiter, Promises, Queue, ResourceQueue, RunOnceScheduler, RunOnceWorker, Sequencer, SequencerByKey, StatefulPromise, TaskSequentializer, ThrottledDelayer, Throttler, TimeoutTimer, _runWhenIdle, asPromise, createCancelableAsyncIterable, createCancelablePromise, disposableTimeout, first, isThenable, promiseWithResolvers, raceCancellablePromises, raceCancellation, raceCancellationError, raceTimeout, retry, runWhenGlobalIdle, sequence, timeout };\n","\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\n\nclass PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = ( new Uint32Array(values.length));\n        this.prefixSumValidIndex = ( new Int32Array(1));\n        this.prefixSumValidIndex[0] = -1;\n    }\n    getCount() {\n        return this.values.length;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = ( new Uint32Array(oldValues.length + insertValuesLen));\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = ( new Uint32Array(this.values.length));\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = ( new Uint32Array(oldValues.length - count));\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = ( new Uint32Array(this.values.length));\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return ( new PrefixSumIndexOfResult(mid, sum - midStart));\n    }\n}\nclass ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return ( new PrefixSumIndexOfResult(idx, sum - viewLinesAbove));\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nclass PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\n\nexport { ConstantTimePrefixSumComputer, PrefixSumComputer, PrefixSumIndexOfResult };\n","\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\n\nclass MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(( new Position(change.range.startLineNumber, change.range.startColumn)), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = ( new Uint32Array(linesLength));\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = ( new PrefixSumComputer(lineStartValues));\n        }\n    }\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                return;\n            }\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        const newLengths = ( new Uint32Array(insertLines.length - 1));\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n\nexport { MirrorTextModel };\n","\nimport { IntervalTimer } from '../../../../base/common/async.js';\nimport { Disposable, dispose, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { getWordAtText, ensureValidWordDefinition } from '../../core/wordHelper.js';\nimport { MirrorTextModel } from '../../model/mirrorTextModel.js';\n\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\nconst WORKER_TEXT_MODEL_SYNC_CHANNEL = 'workerTextModelSync';\nclass WorkerTextModelSyncClient extends Disposable {\n    static create(workerClient, modelService) {\n        return ( new WorkerTextModelSyncClient(workerClient.getChannel(WORKER_TEXT_MODEL_SYNC_CHANNEL), modelService));\n    }\n    constructor(proxy, modelService, keepIdleModels = false) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = ( new IntervalTimer());\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels = false) {\n        for (const resource of resources) {\n            const resourceStr = ( resource.toString());\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (( new Date())).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (( new Date())).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = ( resource.toString());\n        this._proxy.$acceptNewModel({\n            url: ( model.uri.toString()),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = ( new DisposableStore());\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.$acceptModelChanged(( modelUrl.toString()), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.$acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nclass WorkerTextModelSyncServer {\n    constructor() {\n        this._models = Object.create(null);\n    }\n    bindToServer(workerServer) {\n        workerServer.setChannel(WORKER_TEXT_MODEL_SYNC_CHANNEL, this);\n    }\n    getModel(uri) {\n        return this._models[uri];\n    }\n    getModels() {\n        const all = [];\n        ( Object.keys(this._models)).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    $acceptNewModel(data) {\n        this._models[data.url] = ( new MirrorModel(( URI.parse(data.url)), data.lines, data.EOL, data.versionId));\n    }\n    $acceptModelChanged(uri, e) {\n        if (!this._models[uri]) {\n            return;\n        }\n        const model = this._models[uri];\n        model.onEvents(e);\n    }\n    $acceptRemovedModel(uri) {\n        if (!this._models[uri]) {\n            return;\n        }\n        delete this._models[uri];\n    }\n}\nclass MirrorModel extends MirrorTextModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(( new Position(i + 1, 1)));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return ( new Range(\n                position.lineNumber,\n                wordAtText.startColumn,\n                position.lineNumber,\n                wordAtText.endColumn\n            ));\n        }\n        return null;\n    }\n    getWordUntilPosition(position, wordDefinition) {\n        const wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0;\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw ( new Error('bad position'));\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n\nexport { MirrorModel, STOP_SYNC_MODEL_DELTA_TIME_MS, WORKER_TEXT_MODEL_SYNC_CHANNEL, WorkerTextModelSyncClient, WorkerTextModelSyncServer };\n","\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport './editorWorkerHost.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { DiffComputer } from '../diff/legacyLinesDiffComputer.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { findSectionHeaders } from './findSectionHeaders.js';\nimport { WorkerTextModelSyncServer } from './textModelSync/textModelSync.impl.js';\n\nclass BaseEditorSimpleWorker {\n    constructor() {\n        this._workerTextModelSyncServer = ( new WorkerTextModelSyncServer());\n    }\n    dispose() {\n    }\n    _getModel(uri) {\n        return this._workerTextModelSyncServer.getModel(uri);\n    }\n    _getModels() {\n        return this._workerTextModelSyncServer.getModels();\n    }\n    $acceptNewModel(data) {\n        this._workerTextModelSyncServer.$acceptNewModel(data);\n    }\n    $acceptModelChanged(uri, e) {\n        this._workerTextModelSyncServer.$acceptModelChanged(uri, e);\n    }\n    $acceptRemovedModel(uri) {\n        this._workerTextModelSyncServer.$acceptRemovedModel(uri);\n    }\n    async $computeUnicodeHighlights(url, options, range) {\n        const model = this._getModel(url);\n        if (!model) {\n            return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n        }\n        return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n    }\n    async $findSectionHeaders(url, options) {\n        const model = this._getModel(url);\n        if (!model) {\n            return [];\n        }\n        return findSectionHeaders(model, options);\n    }\n    async $computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        return result;\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return ( changes.map(\n                m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n                        m.originalRange.startLineNumber,\n                        m.originalRange.startColumn,\n                        m.originalRange.endLineNumber,\n                        m.originalRange.endColumn,\n                        m.modifiedRange.startLineNumber,\n                        m.modifiedRange.startColumn,\n                        m.modifiedRange.endLineNumber,\n                        m.modifiedRange.endColumn,\n                    ])])\n            ));\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: ( result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ]))),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async $computeDirtyDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const originalLines = original.getLinesContent();\n        const modifiedLines = modified.getLinesContent();\n        const diffComputer = ( new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: false,\n            shouldPostProcessCharChanges: false,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true,\n            maxComputationTime: 1000\n        }));\n        return diffComputer.computeDiff().changes;\n    }\n    static { this._diffLimit = 100000; }\n    async $computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        let writeIndex = 0;\n        for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n            if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                edits[writeIndex].text += edits[readIndex].text;\n            }\n            else {\n                writeIndex++;\n                edits[writeIndex] = edits[readIndex];\n            }\n        }\n        edits.length = writeIndex + 1;\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                continue;\n            }\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            const changes = stringDiff(original, text, pretty);\n            const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (const change of changes) {\n                const start = model.positionAt(editOffset + change.originalStart);\n                const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                const newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    $computeHumanReadableDiff(modelUrl, edits, options) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                continue;\n            }\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            const originalLines = original.split(/\\r\\n|\\n|\\r/);\n            const modifiedLines = text.split(/\\r\\n|\\n|\\r/);\n            const diff = linesDiffComputers.getDefault().computeDiff(originalLines, modifiedLines, options);\n            const start = Range.lift(range).getStartPosition();\n            function addPositions(pos1, pos2) {\n                return ( new Position(\n                    pos1.lineNumber + pos2.lineNumber - 1,\n                    pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column\n                ));\n            }\n            function getText(lines, range) {\n                const result = [];\n                for (let i = range.startLineNumber; i <= range.endLineNumber; i++) {\n                    const line = lines[i - 1];\n                    if (i === range.startLineNumber && i === range.endLineNumber) {\n                        result.push(line.substring(range.startColumn - 1, range.endColumn - 1));\n                    }\n                    else if (i === range.startLineNumber) {\n                        result.push(line.substring(range.startColumn - 1));\n                    }\n                    else if (i === range.endLineNumber) {\n                        result.push(line.substring(0, range.endColumn - 1));\n                    }\n                    else {\n                        result.push(line);\n                    }\n                }\n                return result;\n            }\n            for (const c of diff.changes) {\n                if (c.innerChanges) {\n                    for (const x of c.innerChanges) {\n                        result.push({\n                            range: Range.fromPositions(addPositions(start, x.originalRange.getStartPosition()), addPositions(start, x.originalRange.getEndPosition())),\n                            text: getText(modifiedLines, x.modifiedRange).join(model.eol)\n                        });\n                    }\n                }\n                else {\n                    throw ( new BugIndicatingError('The experimental diff algorithm always produces inner changes'));\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    async $computeLinks(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeLinks(model);\n    }\n    async $computeDefaultDocumentColors(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeDefaultDocumentColors(model);\n    }\n    static { this._suggestionsLimit = 10000; }\n    async $textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        const sw = ( new StopWatch());\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        const seen = ( new Set());\n        outer: for (const url of modelUrls) {\n            const model = this._getModel(url);\n            if (!model) {\n                continue;\n            }\n            for (const word of model.words(wordDefRegExp)) {\n                if (word === leadingWord || !isNaN(Number(word))) {\n                    continue;\n                }\n                seen.add(word);\n                if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                    break outer;\n                }\n            }\n        }\n        return { words: Array.from(seen), duration: sw.elapsed() };\n    }\n    async $computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return Object.create(null);\n        }\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        const result = Object.create(null);\n        for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n            const words = model.getLineWords(line, wordDefRegExp);\n            for (const word of words) {\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                let array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return result;\n    }\n    async $navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        const selectionText = model.getValueInRange(range);\n        const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return null;\n        }\n        const word = model.getValueInRange(wordRange);\n        const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return result;\n    }\n}\nclass EditorSimpleWorker extends BaseEditorSimpleWorker {\n    constructor(_host, _foreignModuleFactory) {\n        super();\n        this._host = _host;\n        this._foreignModuleFactory = _foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    async $ping() {\n        return 'pong';\n    }\n    $loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.$fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        return Promise.reject(( new Error(`Unexpected usage`)));\n    }\n    $fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(( new Error('Missing requestHandler or method: ' + method)));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\nif (typeof importScripts === 'function') {\n    globalThis.monaco = createMonacoBaseAPI();\n}\n\nexport { BaseEditorSimpleWorker, EditorSimpleWorker };\n","\nimport { SimpleWorkerServer } from '../../../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './editorSimpleWorker.js';\nimport { EditorWorkerHost } from './editorWorkerHost.js';\n\nlet initialized = false;\nfunction initialize(factory) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = ( new SimpleWorkerServer((msg) => {\n        globalThis.postMessage(msg);\n    }, (workerServer) => ( new EditorSimpleWorker(EditorWorkerHost.getChannel(workerServer), factory))));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nglobalThis.onmessage = (e) => {\n    if (!initialized) {\n        initialize(null);\n    }\n};\n\nexport { initialize };\n"],"names":["base64","require","ieee754","customInspectSymbol","Symbol","exports","Buffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","length","RangeError","buf","Uint8Array","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","len","checked","undefined","numberIsNaN","type","Array","isArray","data","fromObject","toPrimitive","assertSize","size","array","i","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","Error","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","CharCode","errorHandler","listeners","unexpectedErrorHandler","setTimeout","ErrorNoTelemetry","isErrorNoTelemetry","addListener","listener","_removeListener","emit","forEach","splice","setUnexpectedErrorHandler","newUnexpectedErrorHandler","getUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","isCancellationError","transformErrorForSerialization","cause","$isError","stacktrace","noTelemetry","canceledName","CancellationError","fromError","err","result","BugIndicatingError","CompareResult","groupBy","groupFn","create","element","key","SetWithKey","toStringTag","values","toKey","_map","Map","_a","add","delete","has","entries","entry","keys","clear","callbackfn","thisArg","iterator","findLastMonotonous","predicate","idx","findLastIdxMonotonous","startIdx","endIdxEx","k","findFirstIdxMonotonousOrArrLen","MonotonousArray","assertInvariants","_array","_findLastMonotonousLastIdx","_prevFindLastPredicate","item","one","other","itemEquals","compareBy","selector","comparator","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","greaterThan","lessThan","neitherLessOrGreaterThan","numberComparator","CallbackIterable","empty","_callback","iterate","handler","toArray","filter","cb","map","mapFn","some","findFirst","findLast","findLastMaxBy","_c","Touch","ResourceMapEntry","uri","ResourceMap","defaultToKey","resource","isEntries","clb","bind","_","LinkedMap","_head","_tail","_size","_state","isEmpty","touch","None","next","previous","addItemLast","AsOld","addItemFirst","AsNew","remove","removeItem","shift","state","current","done","trimOld","newSize","currentSize","trimNew","fromJSON","Cache","ratio","_limit","_ratio","checkTrim","peek","round","SetMap","Set","createSingleCallFunction","fnDidRunCallback","_this","didCall","assertNever","assertFn","condition","checkAdjacentItems","items","isString","hasOwnProperty","Iterable","is","thing","_empty","freeze","single","wrap","iterableOrElement","iterable","reverse","find","index","flatMap","iterables","reduce","reducer","initialValue","to","consume","atMost","POSITIVE_INFINITY","consumed","asyncToArray","async","Promise","resolve","disposableTracker","DisposableTracker","livingDisposables","getDisposableData","parent","source","isSingleton","trackDisposable","setParent","child","markAsDisposed","markAsSingleton","disposable","getRootParent","cache","cacheValue","getTrackedDisposables","rootParentCache","v","computeLeakingDisposables","maxReported","preComputedLeaks","uncoveredLeakingObjs","leakingObjects","info","leakingObjsSet","o","l","getStackTracePath","leaking","lines","p","linesToRemove","regexp","match","removePrefix","stackTraceStarts","stackTracePath","sort","stackTraceFormattedLines","line","continuations","cont","unshift","leaks","details","setParentOfDisposable","dispose","AggregateError","combinedDisposable","disposables","toDisposable","children","setParentOfDisposables","self","DisposableStore","DISABLE_DISPOSED_WARNING","_toDispose","_isDisposed","isDisposed","warn","deleteAndLeak","Disposable","_store","_register","Node","Undefined","prev","LinkedList","_first","_last","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","pop","anchor","hasPerformanceNow","globalThis","performance","now","StopWatch","highResolution","_now","Date","_startTime","_stopTime","stop","reset","elapsed","Event","once","event","thisArgs","didFire","snapshot","emitter","Emitter","onWillAddFirstListener","fire","onDidRemoveLastListener","debounce","merge","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","handle","doFire","numDebouncedCalls","cur","_output","clearTimeout","queueMicrotask","onWillRemoveListener","defer","onceIf","each","signal","any","events","store","addAndReturnDisposable","initial","accumulate","latch","firstCall","shouldEmit","isT","flushAfterTimeout","_buffer","flush","onDidAddFirstListener","chain","sythensize","cs","ChainableSynthesis","evaluate","HaltChainable","steps","step","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","toPromise","fromPromise","promise","then","finally","forward","runAndSubscribe","EmitterObserver","_observable","_counter","_hasChanged","options","addObserver","reportChanges","removeObserver","beginUpdate","handlePossibleChange","handleChange","_change","endUpdate","fromObservable","obs","fromObservableLight","observable","count","didChange","observer","EventProfiling","all","_idPool","listenerCount","invocationCount","elapsedOverall","durations","_stopWatch","_globalLeakWarningThreshold","LeakageMonitor","_errorHandler","threshold","padStart","_warnCountdown","_stacks","check","topStack","topCount","getMostFrequentStack","ListenerLeakError","Stacktrace","print","ListenerRefusalError","UniqueContainer","_options","_leakageMon","onListenerError","_perfMon","_profName","_deliveryQueue","deliveryQueue","_disposed","_listeners","_event","callback","tuple","contained","removeMonitor","ceil","EventDeliveryQueuePrivate","onDidAddListener","JSON","stringify","adjustDeliveryQueue","_deliver","_deliverQueue","dq","enqueue","hasListeners","getNLSLanguage","_VSCODE_NLS_LANGUAGE","isPseudo","document","location","hash","_format","rest","initialized","localize","lookupMessage","fallback","_VSCODE_NLS_MESSAGES","LANGUAGE_DEFAULT","_locale","_userAgent","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_language","_platformLocale","_translationsConfigFile","$globalThis","nodeProcess","vscode","process","versions","isElectronProcess","electron","isElectronRenderer","platform","env","rawNlsConfig","nlsConfig","parse","userLocale","osLocale","resolvedLanguage","languagePack","translationsConfigFile","navigator","userAgent","maxTouchPoints","language","Platform","_platform","Web","Mac","Windows","Linux","isWindows","isMacintosh","isLinux","isNative","isWeb","webWorkerOrigin","importScripts","origin","Language","isDefaultVariant","isDefault","setTimeout0IsFaster","postMessage","setTimeout0","pending","vscodeScheduleAsyncWork","candidate","lastId","myId","OperatingSystem","Macintosh","isChrome","shortcutEvent","context","CancellationToken","Constants","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","_parentListener","token","identity","t","LRUCachedFunction","arg1","arg2","lastCache","lastArgKey","_fn","_computeKey","getCacheKey","Lazy","executor","_didRun","hasValue","_value","_error","rawValue","toUint8","MAX_UINT_8","toUint32","MAX_UINT_32","escapeRegExpCharacters","splitLines","firstNonWhitespaceIndex","chCode","Space","Tab","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","z","isUpperAsciiLetter","A","Z","commonPrefixLength","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","IS_BASIC_ASCII","UTF8_BOM","GraphemeBreakType","CodePoint","GraphemeBreakTree","_INSTANCE","getInstance","_data","getGraphemeBreakType","LineFeed","LF","CarriageReturn","CR","Control","Other","nodeCount","nodeIndex","AmbiguousCharacters","ambiguousCharacterData","locales","arrayToMap","intersectMaps","map1","map2","languageSpecificMap","filteredLocales","startsWith","locale","mergeMaps","_locales","getLocales","confusableDictionary","isAmbiguous","containsAmbiguousCharacter","codePointAt","getPrimaryConfusable","getConfusableCodePoints","InvisibleCharacters","getRawData","getData","flat","isInvisibleCharacter","containsInvisibleCharacter","space","DEFAULT_CHANNEL","INITIALIZE","MessageType","RequestMessage","vsWorker","req","channel","method","Request","ReplyMessage","seq","Reply","SubscribeEventMessage","SubscribeEvent","EventMessage","UnsubscribeEventMessage","UnsubscribeEvent","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","_pendingEmitters","_pendingEvents","setWorkerId","workerId","sendMessage","reject","_send","listen","handleMessage","_handleMessage","createProxyToRemoteChannel","sendMessageBarrier","propertyIsDynamicEvent","propertyIsEvent","DollarSign","myArgs","Proxy","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","reply","requestMessage","r","detail","handleEvent","transfer","test","SimpleWorkerServer","requestHandlerFactory","_localChannels","_remoteChannels","_requestHandlerFactory","_requestHandler","_protocol","_handleEvent","onmessage","initialize","requestHandler","setChannel","getChannel","inst","loaderConfig","baseUrl","paths","vs","trustedTypesPolicy","catchError","config","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","numberHash","initialHashVal","stringHash","hashVal","SHA1Constant","LocalConstants","Boolean","State","leftRotate","bits","totalBits","delta","toHexString","bufferOrValue","bitsize","StringSHA1","_bigBlock32","DataView","_h0","_h1","_h2","_h3","_h4","_buff","BLOCK_SIZE","_buffDV","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","buff","buffLen","leftoverHighSurrogate","UNICODE_REPLACEMENT","_push","_step","digest","_wrapUp","ml","setUint32","bigBlock32","getUint32","f","temp","StringDiffSequence","getElements","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","Assert","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","DiffChangeHelper","m_changes","m_originalStart","MAX_SAFE_SMALL_INTEGER","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","sequence","elements","hashes","ElementsAreEqual","newIndex","ElementsAreStrictEqual","_getStrictElement","getStrictElement","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_SAFE_SMALL_INTEGER","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","MaxDifferencesHistory","matchLengthOfLongest","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","Position","lineNumber","column","with","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","lift","isIPosition","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","position","strictContainsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","collapseToEnd","lineCount","isSingleLine","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","areOnlyIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","CharacterClassifier","_defaultValue","defaultValue","_asciiMap","_createAsciiMap","asciiMap","Uint8Matrix","rows","cols","row","col","StateMachine","edges","maxCharCode","maxState","Invalid","states","_states","_maxCharCode","nextState","currentState","_stateMachine","CharacterClass","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","CannotEndIn","charCodeBeforeLink","lastCharCodeInLink","OpenParen","CloseParen","OpenSquareBracket","CloseSquareBracket","OpenCurlyBrace","CloseCurlyBrace","url","substring","computeLinks","model","stateMachine","Start","h","H","F","HT","T","HTT","HTTP","P","BeforeColon","S","Colon","AfterColon","FI","I","FIL","L","Slash","AlmostThere","End","getStateMachine","FORCE_TERMINATION_CHARACTERS","ForceTermination","CANNOT_END_WITH_CHARACTERS","getClassifier","getLineCount","getLineContent","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","Accept","chClass","SingleQuote","DoubleQuote","BackTick","Asterisk","Pipe","BasicInplaceReplace","_defaultValueSet","INSTANCE","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","text","numberResult","numberReplace","textReplace","precision","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","KeyCode","ScanCode","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","Unknown","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","MAX_VALUE","DependsOnKbLayout","KeyCodeUtils","KeyMod$1","MarshalledId","safeProcess","mappings","Hyper","Super","Fn","FnLock","Suspend","Resume","Turbo","Sleep","WakeUp","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyI","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Enter","Escape","Backspace","Minus","Equal","BracketLeft","BracketRight","Backslash","IntlHash","Semicolon","Quote","Backquote","Comma","Period","CapsLock","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PrintScreen","ScrollLock","Pause","PauseBreak","Insert","Home","PageUp","Delete","PageDown","ArrowRight","RightArrow","ArrowLeft","LeftArrow","ArrowDown","DownArrow","ArrowUp","UpArrow","NumLock","NumpadDivide","NumpadMultiply","NumpadSubtract","NumpadAdd","NumpadEnter","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","Numpad0","NumpadDecimal","IntlBackslash","ContextMenu","Power","NumpadEqual","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Open","Help","Select","Again","Undo","Cut","Paste","Find","AudioVolumeMute","AudioVolumeUp","AudioVolumeDown","NumpadComma","NUMPAD_SEPARATOR","IntlRo","ABNT_C1","KanaMode","IntlYen","Convert","NonConvert","Lang1","Lang2","Lang3","Lang4","Lang5","Abort","Props","NumpadParenLeft","NumpadParenRight","NumpadBackspace","NumpadMemoryStore","NumpadMemoryRecall","NumpadMemoryClear","NumpadMemoryAdd","NumpadMemorySubtract","NumpadClear","Clear","NumpadClearEntry","Ctrl","Shift","Alt","Meta","ControlLeft","ShiftLeft","AltLeft","MetaLeft","ControlRight","ShiftRight","AltRight","MetaRight","BrightnessUp","BrightnessDown","MediaPlay","MediaRecord","MediaFastForward","MediaRewind","MediaTrackNext","MediaTrackPrevious","MediaStop","Eject","MediaPlayPause","MediaSelect","LaunchMediaPlayer","LaunchMail","LaunchApp2","LaunchApp1","SelectTask","LaunchScreenSaver","BrowserSearch","BrowserHome","BrowserBack","BrowserForward","BrowserStop","BrowserRefresh","BrowserFavorites","ZoomToggle","MailReply","MailForward","MailSend","KEY_IN_COMPOSITION","ABNT_C2","OEM_8","seenKeyCode","seenScanCode","mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","KeyMod","vscodeGlobal","sandboxProcess","arch","cwd","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","determiner","validateString","platformIsWin32","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","sep","pathObject","validateObject","root","base","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","firstPart","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromSplit","toSplit","fromLen","toLen","repeat","fromStart","fromEnd","toStart","toEnd","lastCommonSep","fromCode","toNamespacedPath","resolvedPath","dirname","matchedSlash","basename","suffix","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","delimiter","posix","posixCwd","cwd$1","trailingSeparator","hasRoot","char","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","isUri","authority","fragment","query","scheme","fsPath","schemeOrData","_strict","_schemeFix","_referenceResolution","_validateUri","uriToFsPath","Uri","exec","percentDecode","file","components","strict","joinPath","pathFragment","newPath","skipEncoding","_asFormatted","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","for","$mid","encodeTable","QuestionMark","Hash","AtSign","ExclamationMark","Ampersand","Plus","Equals","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","Dash","Underline","Tilde","encodeURIComponent","charAt","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","SelectionDirection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","LTR","RTL","getPosition","getSelectionStart","fromRange","direction","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","_codiconFontCharacters","register","fontCharacter","Codicon","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","gitPullRequestLabel","tagAdd","tagRemove","person","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","comment","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","terminalDecorationSuccess","primitiveSquare","edit","pencil","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","repoSync","sync","desktopDownload","beaker","microscope","vm","deviceDesktop","fileText","more","ellipsis","kebabHorizontal","mailReply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","repl","zap","symbolEvent","variable","symbolVariable","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","caseSensitive","checklist","chevronDown","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circleOutline","circle","debugBreakpointUnverified","terminalDecorationIncomplete","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","collapseAll","colorMode","commentDiscussion","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diffSidebyside","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","compareChanges","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueReopened","issues","italic","jersey","json","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","mailRead","mail","markdown","megaphone","mention","milestone","gitPullRequestMilestone","mortarBoard","move","multipleWindows","mute","noNewline","note","octoface","openPreview","package","paintcan","pin","play","run","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","references","refresh","regex","remoteExplorer","remote","replaceAll","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","vmActive","vmOutline","vmRunning","watch","whitespace","wholeWord","window","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","circleSmallFilled","debugStackframeDot","terminalDecorationMark","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","debugAlt","callIncoming","callOutgoing","menu","expandAll","feedback","gitPullRequestReviewer","groupByRefType","ungroupByRefType","account","gitPullRequestAssignee","bellDot","debugConsole","library","runAll","syncIgnored","pinned","githubInverted","serverProcess","serverEnvironment","pass","issueClosed","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","export","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLarge","circleLargeOutline","combine","gather","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnknown","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","personAdd","filterFilled","wand","debugLineByLine","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracket","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newline","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","indent","recordSmall","errorSmall","terminalDecorationError","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","layoutSidebarRightOff","layoutPanelOff","layoutSidebarLeftOff","blank","heartFilled","mapHorizontal","foldHorizontal","mapFilled","mapHorizontalFilled","foldHorizontalFilled","circleSmall","bellSlash","bellSlashDot","commentUnresolved","gitPullRequestGoToChanges","gitPullRequestNewChanges","searchFuzzy","commentDraft","send","sparkle","insert","mic","thumbsdownFilled","thumbsupFilled","coffee","snake","game","vr","chip","piano","music","micFilled","repoFetch","copilot","lightbulbSparkle","robot","sparkleFilled","diffSingle","diffMultiple","surroundWith","share","gitStash","gitStashApply","gitStashPop","vscodeInsiders","codeOss","runCoverage","runAllCoverage","coverage","githubProject","mapVertical","foldVertical","mapVerticalFilled","foldVerticalFilled","goToSearch","percentage","sortPercentage","attach","goToEditingSession","editSession","codeReview","copilotWarning","python","copilotLarge","copilotWarningLarge","keyboardTab","copilotBlocked","copilotNotConnected","flag","lightbulbEmpty","symbolMethodArrow","dialogError","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","dropDownButton","symbolCustomColor","exportIcon","workspaceUnspecified","newLine","thumbsDownFilled","thumbsUpFilled","gitFetch","lightbulbSparkleAutofix","debugBreakpointPending","LanguageId","FontStyle","ColorId","StandardTokenType","MetadataConsts","HoverVerbosityAction","CompletionItemKind","CompletionItemKinds","CompletionItemTag","CompletionItemInsertTextRule","PartialAcceptTriggerKind","CompletionTriggerKind","InlineCompletionTriggerKind","CodeActionTriggerType","DocumentPasteTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","TokenizationRegistry","_tokenizationSupports","_factories","_onDidChange","onDidChange","_colorMap","languageIds","changedLanguages","changedColorMap","languageId","support","registerFactory","factory","myData","TokenizationSupportFactoryData","getOrCreate","tokenizationSupport","isResolved","setColorMap","colorMap","getColorMap","getDefaultBackground","DefaultBackground","_isResolved","_registry","_languageId","_factory","_resolvePromise","_create","Token","_tokenBrand","byKind","Method","Function","Constructor","Field","Variable","Class","Struct","Interface","Module","Property","Operator","Unit","Value","Enum","Constant","EnumMember","Keyword","Snippet","Text","Color","File","Reference","Customcolor","Folder","TypeParameter","User","Issue","toIcon","kind","codicon","Key","Namespace","Null","Package","SymbolTag","SymbolKinds","NewSymbolNameTag","NewSymbolNameTriggerKind","Command","CommentThreadCollapsibleState","CommentThreadState","CommentThreadApplicability","CommentMode","CommentState","InlayHintKind","icon","byCompletionKind","toCompletionKind","completionKind","FoldingRangeKind","Comment","Imports","Region","fromValue","title","TokenizationRegistry$1","ExternalUriOpenerPriority","InlineEditTriggerKind","AccessibilitySupport","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","GlyphMarginLane","IndentAction","InjectedTextCursorStops","MarkerSeverity","MarkerTag","MinimapPosition","MinimapSectionHeaderStyle","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","PositionAffinity","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","ShowLightbulbIconMode","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","CtrlCmd","WinCtrl","chord","secondPart","KeyChord","EditorWorkerHost","CHANNEL_NAME","workerServer","workerClient","WordCharacterClass","getAllMethodNames","methods","prop","getOwnPropertyNames","getPrototypeOf","getAllPropertyNames","ModelConstants","isMultilineRegexSource","searchString","nextChCode","W","isValidMatch","wordSeparators","textLength","matchStartIndex","matchLength","charBefore","Regular","firstCharInMatch","leftIsWordBounday","charAfter","lastCharInMatch","rightIsWordBounday","Searcher","searchRegex","_wordSeparators","_searchRegex","_prevMatchStartIndex","_prevMatchLength","lastIndex","DEFAULT_WORD_REGEXP","allowInWords","RegExp","createWordRegExp","ensureValidWordDefinition","wordDefinition","global","flags","ignoreCase","multiline","unicode","_defaultConfig","getWordAtText","textOffset","maxLen","t1","prevRegexIndex","timeBudget","regexIndex","windowSize","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","matchIndex","UnicodeTextModelHighlighter","computeUnicodeHighlights","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","fromCodePoint","searcher","ranges","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineContent","lineLength","startIndex","endIndex","highlightReason","shouldHighlightNonBasicASCII","SimpleHighlightReason","Ambiguous","Invisible","NonBasicASCII","MAX_RESULT_LENGTH","computeUnicodeHighlightReason","UnicodeHighlighterReasonKind","primaryConfusable","ambiguousCharacters","notAmbiguousInLocales","allowedLocales","confusableWith","NonBasicAscii","allowedCodePoints","nonBasicASCII","invisibleCharacters","cp","isAllowedInvisibleCharacter","character","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII$1","LinesDiff","moves","hitTimeout","MovedText","lineRangeMapping","flip","OffsetRange","fromTo","endExclusive","addRange","sortedRanges","tryCreate","ofLength","ofStartAndLength","emptyAt","deltaStart","deltaEnd","contains","intersect","intersectionLength","intersects","intersectsOrTouches","isAfter","clip","clipCyclic","LineRange","fromRangeInclusive","subtract","endLineNumberExclusive","joinMany","lineRanges","LineRangeSet","getUnion","deserialize","lineRange","deltaLength","intersectsStrict","overlapOrTouch","toInclusiveRange","MAX_SAFE_INTEGER","toExclusiveRange","mapToLineArray","serialize","toOffsetRange","distanceToRange","distanceToLine","addMargin","marginTop","marginBottom","_normalizedRanges","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","i1","i2","lineRange1","lineRange2","subtractFrom","getIntersection","r1","r2","getWithDelta","TextLength","zero","lengthDiffNonNegative","columnCount","betweenPositions","position1","position2","fromPosition","ofRange","ofText","isZero","isGreaterThanOrEqualTo","createRange","startPosition","toRange","toLineRange","addToPosition","addToRange","PositionOffsetTransformer","lineStartOffsetByLineIdx","lineEndOffsetByLineIdx","getOffset","valPos","_validatePosition","getLineLength","getOffsetRange","getRange","offsetRange","getTextLength","lineIdx","TextEdit","fromOffsetEdit","initialState","edits","SingleTextEdit","getTransformer","replaceRange","newText","originalRange","mapPosition","lineDelta","curLine","columnDeltaInCurLine","startPos","rangeFromPositions","mapRange","getEnd","inverseMapPosition","positionAfterEdit","doc","inverse","inverseMapRange","lastEditEnd","editRange","editStart","editEnd","getValueOfRange","endPositionExclusive","applyToString","strText","StringText","getNewRanges","newRanges","previousEditEndLineNumber","lineOffset","columnOffset","newRangeStart","newRange","toSingle","endPos","curEdit","nextEdit","gapRange","joinEdits","second","toSingleEditOperation","toEdit","extendToCoverRange","textBefore","textAfter","extendToFullLine","removeCommonPrefix","normalizedOriginalText","normalizedModifiedText","commonPrefixLen","isEffectiveDeletion","existingText","aLastIndex","bLastIndex","commonSuffixLength","AbstractText","_transformer","getValue","getLineAt","getLines","LineBasedText","_getLineContent","_lineCount","messageOrError","assert","lastLine","ArrayText","_t","LineRangeMapping","originalLineCount","modifiedLineCount","lastOriginalEndLineNumber","lastModifiedEndLineNumber","modifiedRange","changedLineCount","toRangeMapping","origInclusiveRange","modInclusiveRange","RangeMapping","toRangeMapping2","isValidLineNumber","normalizePosition","content","DetailedLineRangeMapping","fromRangeMappings","rangeMappings","innerChanges","withInnerChangesFromLineRanges","fromEdit","fromEditJoin","assertSorted","toTextEdit","lineRangeMappingFromRangeMappings","alignments","originalLines","modifiedLines","dontAssertStartLine","g","shouldBeGrouped","currentGroup","groupAdjacentBy","rangeMapping","lineStartDelta","lineEndDelta","originalLineRange","modifiedLineRange","getLineRangeMapping","a1","a2","m1","m2","LegacyLinesDiffComputer","computeDiff","DiffComputer","maxComputationTime","maxComputationTimeMs","shouldIgnoreTrimWhitespace","ignoreTrimWhitespace","shouldComputeCharChanges","shouldMakePrettyDiff","shouldPostProcessCharChanges","lastChange","originalEndLineNumber","originalStartLineNumber","modifiedEndLineNumber","modifiedStartLineNumber","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","LineSequence","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","charCodes","lineNumbers","columns","CharSequence","_charCodes","_lineNumbers","_columns","_assertIndex","getStartColumn","getEndColumn","CharChange","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","opts","continueLineDiff","createContinueProcessingPredicate","diffResult","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","lastNonWhitespaceIndex","maximumRuntime","startTime","DiffAlgorithmResult","trivial","seq1","seq2","SequenceDiff","trivialTimedOut","diffs","invert","sequenceDiffs","doc1Length","forEachAdjacent","fromOffsetPairs","getEndExclusives","OffsetPair","getStarts","seq2Range","seq1Range","offset1","offset2","InfiniteTimeout","instance","isValid","DateTimeout","timeout","valid","disable","Array2D","width","height","isSpace","LineRangeFragment","chrKeys","getKey","chr","histogram","counter","totalCount","computeSimilarity","sumDifferences","maxLength","DynamicProgrammingDiffing","compute","sequence1","sequence2","equalityScore","lcsLengths","directions","lengths","s1","s2","horizontalLen","verticalLen","extendedSeqScore","getElement","newValue","prevLen","lastAligningPosS1","lastAligningPosS2","reportDecreasingAligningPositions","MyersDiffAlgorithm","seqX","seqY","getXAfterSnake","V","FastInt32Array","FastArrayNegativeIndices","SnakePath","loop","lowerBound","upperBound","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","endX","endY","positiveArr","negativeArr","LinesSliceCharSequence","considerWhitespaceChanges","firstElementOffsetByLineIdx","lineStartOffsets","trimmedWsLengthsByLineIdx","lineStartOffset","trimmedWsLength","trimmedStartLine","trimStart","trimEnd","getText","getBoundaryScore","prevCategory","getCategory","nextCategory","CharBoundaryCategory","LineBreakCR","LineBreakLF","WordLower","WordUpper","getCategoryBoundaryScore","translateOffset","preference","translateRange","pos1","pos2","findWordContaining","isWordChar","findSubWordContaining","isUpperCase","countLinesIn","isStronglyEqual","extendToFullLines","findFirstMonotonous","WordNumber","Separator","category","computeMovedLines","hashedOriginalLines","hashedModifiedLines","excludedChanges","deletions","insertions","deletion","best","highestSimilarity","insertion","similarity","computeMovesFromSimpleDeletionsToSimpleInsertions","unchangedMoves","original3LineHashes","possibleMappings","lastMappings","currentModifiedRange","nextMappings","lastMapping","modifiedSet","originalSet","diffOrigToMod","modifiedSections","originalTranslatedSections","modifiedIntersectedSections","monotonousChanges","firstTouchingChangeOrig","firstTouchingChangeMod","linesAbove","lastTouchingChangeOrig","lastTouchingChangeMod","linesBelow","extendToTop","extendToBottom","origLine","modLine","areLinesSimilar","computeUnchangedMoves","pushMany","originalDist","modifiedDist","joinCloseConsecutiveMoves","countWhere","changesMonotonous","removeMovesInSameDiff","line1","line2","commonNonSpaceCharCount","inverted","longerLineLength","countNonWsChars","optimizeSequenceDiffs","joinSequenceDiffsByShifting","prevDiff","nextDiff","seq1ValidRange","seq2ValidRange","shiftDiffToBetterPosition","shiftSequenceDiffs","prevResult","result2","nextResult","deltaBefore","deltaAfter","seq2OffsetStart","seq2OffsetEndExclusive","seq1Offset","extendDiffsToEntireWordIfAppropriate","findParent","force","equalMappings","additional","lastPoint","scanWord","pair","equalMapping","w1","w2","w","equalPart","equalChars1","equalChars2","v1","v2","sequenceDiffs1","sequenceDiffs2","sd1","sd2","mergeSequenceDiffs","trimmedHash","getIndentation","DefaultLinesDiffComputer","dynamicProgrammingDiffing","myersDiffingAlgorithm","perfectHashes","getOrCreateHash","originalLinesHashes","modifiedLinesHashes","lineAlignmentResult","lineAlignments","_sequence2","shouldRepeat","lastResult","shouldJoinDiffs","before","after","unchangedRange","removeVeryShortMatchingLinesBetweenDiffs","scanForWhitespaceChanges","equalLinesCount","seq1LastStart","seq2Offset","seq2LastStart","characterDiffs","refineDiff","computeMoves","validatePosition","validateRange","ic","sequenceDiff","slice1","slice2","extendToSubwords","removeShortMatches","unchangedText","beforeLineCount1","beforeSeq1Length","beforeLineCount2","beforeSeq2Length","afterLineCount1","afterSeq1Length","afterLineCount2","afterSeq2Length","cap","newDiffs","forEachWithNeighbors","newDiff","shouldMarkAsChanged","fullRange1","prefix","availableSpace","removeVeryShortMatchingTextBetweenLongDiffs","linesDiffComputers","getLegacy","getDefault","roundFloat","number","decimalPoints","decimal","RGBA","_rgbaBrand","HSLA","_hslaBrand","fromRGBA","rgba","chroma","_hue2rgb","q","toRGBA","hsla","HSVA","_hsvaBrand","cmax","hsva","fromHex","hex","Format","CSS","parseHex","red","_hsla","_hsva","getRelativeLuminance","_relativeLuminanceForComponent","reduceRelativeLuminace","foreground","fgR","fgG","fgB","cr","getContrastRatio","increaseRelativeLuminace","color","another","lum1","lum2","isDarker","isLighter","isLighterThan","isDarkerThan","ensureConstrast","bgL","fgL","resultA","resultARatio","resultB","lighten","factor","darken","transparent","isTransparent","isOpaque","opposite","blend","thisA","colorA","makeOpaque","opaqueBackground","flatten","backgrounds","background","reduceRight","accumulator","_flatten","backgroundAlpha","_toString","toNumber32Bit","_toNumber32Bit","getLighterColor","of","getDarkerColor","white","black","blue","green","cyan","lightgrey","_parseCaptureGroups","captureGroups","captureGroup","parsedNumber","_toIColor","alpha","_findRange","positionAt","_findHexColorInformation","hexValue","parsedHexColor","_findRGBColorInformation","matches","isAlpha","parsedRegex","_findHSLColorInformation","colorEquivalent","_findMatches","matchAll","findMatches","computeDefaultDocumentColors","initialValidationMatches","initialMatch","initialCaptureGroups","colorScheme","colorParameters","colorInformation","regexParameters","computeColors","_toTwoDigitHex","_parseHexDigit","B","C","D","formatRGB","formatRGBA","toFixed","formatHSL","formatHSLA","formatHex","formatHexA","compact","css","groups","parseNamedKeyword","trimDashesRegex","CHUNK_SIZE","findSectionHeaders","headers","findRegionSectionHeaders","foldingRules","markers","regionHeaders","sectionHeader","getHeaderText","shouldBeInComments","hasSeparatorLine","collectRegionHeaders","findMarkSectionHeaders","markHeaders","markSectionHeaderRegex","precedingText","matchLines","matchHeight","matchEndLine","lineStartIndex","lastMatchLine","collectMarkHeaders","toSlashes","osPath","getRoot","firstLetter","isWindowsDriveLetter","isEqualOrParent","parentCandidate","candidateLength","startsWithIgnoreCase","sepOffset","char0","Schemas","inMemory","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","vscodeManagedRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellMetadataDiff","vscodeNotebookCellOutput","vscodeNotebookCellOutputDiff","vscodeNotebookMetadata","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","vscodeChatCodeBlock","vscodeChatCodeCompareBlock","vscodeChatSesssion","webviewPanel","vscodeWebview","extension","vscodeFileResource","vsls","vscodeSourceControl","commentsInput","codeSetting","outputChannel","accessibleView","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","_serverRootPath","setPreferredWebSchema","schema","setDelegate","delegate","setServerRootPath","product","serverBasePath","quality","commit","getServerProductSegment","getServerRootPath","_remoteResourcesPath","host","port","setConnectionToken","connectionToken","getPreferredWebSchema","rewrite","FileAccessImpl","staticBrowserUris","appResourcePathUrls","FALLBACK_AUTHORITY","registerAppResourcePathUrl","toUrl","URL","href","import","asBrowserUri","resourcePath","toUri","uriToBrowserUri","asFileUri","uriToFileUri","uriOrModule","moduleIdToUrl","_VSCODE_FILE_ROOT","rootUriOrPath","modulePath","registerStaticBrowserUri","browserUri","getRegisteredBrowserUris","COI","originalFSPath","coiHeaders","CoopAndCoep","coiSearchParamName","getHeadersFromQuery","params","searchParams","addSearchParam","urlOrSearch","coop","coep","crossOriginIsolated","URLSearchParams","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","getComparisonKey","isEqual","ignorePathCasing","isEqualOrParent$1","isEqualAuthority","basenameOrAuthority","dirname$1","normalizePath","normalizedPath","relativePath","fromPath","toPath","resolvePath","newURI","isAbsolutePath","hasTrailingPathSeparator","sep$1","fsp","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","extUri","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","runWhenGlobalIdle","_runWhenIdle","requestIdleCallback","cancelIdleCallback","_targetWindow","runner","disposed","deadline","didTimeout","timeRemaining","targetWindow","DeferredOutcome","Promises","AsyncIterableSourceState","settled","promises","firstError","withAsyncBody","bodyFn","AsyncIterableObject","fromArray","writer","emitMany","fromPromisesResolveOrder","emitOne","EMPTY","onReturn","Initial","_results","_onReturn","_onStateChanged","asyncIterator","DoneError","DoneOK","return","filterFn","coalesce","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","setValue","removeValues","maxCount","getTotalSum","_getPrefixSum","getPrefixSum","getIndexOf","sum","low","high","mid","midStop","midStart","PrefixSumIndexOfResult","remainder","_prefixSumIndexOfResultBrand","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","version","onEvents","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","newLengths","WORKER_TEXT_MODEL_SYNC_CHANNEL","WorkerTextModelSyncServer","_models","bindToServer","getModel","getModels","$acceptNewModel","MirrorModel","EOL","$acceptModelChanged","$acceptRemovedModel","offsetToAdd","offsetAt","iteratorOverMatches","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","words","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","getLineWords","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","hasChanged","maxCharacter","BaseEditorSimpleWorker","_workerTextModelSyncServer","_getModel","_getModels","$computeUnicodeHighlights","$findSectionHeaders","$computeDiff","originalUrl","modifiedUrl","algorithm","EditorSimpleWorker","originalTextModel","modifiedTextModel","diffAlgorithm","getLineChanges","identical","_modelsAreIdentical","$computeDirtyDiff","_diffLimit","$computeMoreMinimalEdits","modelUrl","lastEol","writeIndex","readIndex","editOffset","newEdit","$computeHumanReadableDiff","addPositions","$computeLinks","$computeDefaultDocumentColors","_suggestionsLimit","$textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","duration","$computeWordRanges","$navigateValueSet","selectionText","wordRange","_host","_foreignModuleFactory","_foreignModule","$ping","$loadForeignModule","createData","foreignHostMethods","foreignHost","methodNames","invoke","createProxyMethod","methodName","createProxyObject","proxyMethodRequest","$fhr","ctx","getMirrorModels","$fmr","monaco","editor","languages","simpleWorker"],"sourceRoot":""}